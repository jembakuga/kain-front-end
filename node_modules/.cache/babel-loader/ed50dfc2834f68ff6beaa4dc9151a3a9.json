{"ast":null,"code":"import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n  li: 'e-list-item',\n  ul: 'e-list-parent e-ul',\n  group: 'e-list-group-item',\n  icon: 'e-list-icon',\n  text: 'e-list-text',\n  check: 'e-list-check',\n  checked: 'e-checked',\n  selected: 'e-selected',\n  expanded: 'e-expanded',\n  textContent: 'e-text-content',\n  hasChild: 'e-has-child',\n  level: 'e-level',\n  url: 'e-list-url',\n  collapsible: 'e-icon-collapsible',\n  disabled: 'e-disabled',\n  image: 'e-list-img',\n  iconWrapper: 'e-icon-wrapper'\n};\n/**\n * Base List Generator\n */\n\nexport var ListBase;\n\n(function (ListBase) {\n  /**\n   * Default mapped fields.\n   */\n  ListBase.defaultMappedFields = {\n    id: 'id',\n    text: 'text',\n    url: 'url',\n    value: 'value',\n    isChecked: 'isChecked',\n    enabled: 'enabled',\n    expanded: 'expanded',\n    selected: 'selected',\n    iconCss: 'iconCss',\n    child: 'child',\n    isVisible: 'isVisible',\n    hasChildren: 'hasChildren',\n    tooltip: 'tooltip',\n    htmlAttributes: 'htmlAttributes',\n    urlAttributes: 'urlAttributes',\n    imageAttributes: 'imageAttributes',\n    imageUrl: 'imageUrl',\n    groupBy: null\n  };\n  var defaultAriaAttributes = {\n    level: 1,\n    listRole: 'presentation',\n    itemRole: 'presentation',\n    groupItemRole: 'group',\n    itemText: 'list-item',\n    wrapperRole: 'presentation'\n  };\n  var defaultListBaseOptions = {\n    showCheckBox: false,\n    showIcon: false,\n    enableHtmlSanitizer: false,\n    expandCollapse: false,\n    fields: ListBase.defaultMappedFields,\n    ariaAttributes: defaultAriaAttributes,\n    listClass: '',\n    itemClass: '',\n    processSubChild: false,\n    sortOrder: 'None',\n    template: null,\n    groupTemplate: null,\n    headerTemplate: null,\n    expandIconClass: 'e-icon-collapsible',\n    moduleName: 'list',\n    expandIconPosition: 'Right'\n  };\n  /**\n   * Function helps to created and return the UL Li element based on your data.\n   * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createList(createElement, dataSource, options, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var type = typeofData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number') {\n      return createListFromArray(createElement, dataSource, isSingleLevel, options);\n    } else {\n      return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel);\n    }\n  }\n\n  ListBase.createList = createList;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListFromArray(createElement, dataSource, isSingleLevel, options) {\n    var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options);\n    return generateUL(createElement, subChild, null, options);\n  }\n\n  ListBase.createListFromArray = createListFromArray;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListItemFromArray(createElement, dataSource, isSingleLevel, options) {\n    var subChild = [];\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      var li = void 0;\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          options: curOpt\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (isSingleLevel) {\n        li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n      } else {\n        li = generateLI(createElement, dataSource[i], undefined, null, null, options);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          item: li,\n          options: curOpt\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      subChild.push(li);\n    }\n\n    return subChild;\n  }\n\n  ListBase.createListItemFromArray = createListItemFromArray;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n  function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var id;\n\n    if (level) {\n      ariaAttributes.level = level;\n    }\n\n    var child = [];\n    var li;\n\n    if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) && !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n      id = generateId(); // generate id for drop-down-list option.\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], fields);\n\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      var curItem = dataSource[i];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], fields);\n      }\n\n      if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n        id = fieldData[fields.id];\n      }\n\n      var innerEle = [];\n\n      if (curOpt.showCheckBox) {\n        innerEle.push(createElement('input', {\n          className: cssClass.check,\n          attrs: {\n            type: 'checkbox'\n          }\n        }));\n      }\n\n      if (isSingleLevel === true) {\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n          innerEle.push(createElement('span', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          }));\n        }\n\n        li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, curItem.hasOwnProperty('isHeader') && curItem.isHeader ? true : false, id, i, options);\n      } else {\n        li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options);\n        li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n        li.setAttribute('aria-level', ariaAttributes.level.toString());\n\n        if (fieldData.hasOwnProperty(fields.tooltip)) {\n          li.setAttribute('title', fieldData[fields.tooltip]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n          setAttribute(li, fieldData[fields.htmlAttributes]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n          li.classList.add(cssClass.disabled);\n        }\n\n        if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n          li.style.display = 'none';\n        }\n\n        if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl]) && !curOpt.template) {\n          var attr = {\n            src: fieldData[fields.imageUrl]\n          };\n          merge(attr, fieldData[fields.imageAttributes]);\n          prepend([createElement('img', {\n            className: cssClass.image,\n            attrs: attr\n          })], li.firstElementChild);\n        }\n\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n          prepend([createElement('div', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          })], li.firstElementChild);\n        }\n\n        if (innerEle.length) {\n          prepend(innerEle, li.firstElementChild);\n        }\n\n        processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          item: li,\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      child.push(li);\n    }\n\n    return child;\n  }\n\n  ListBase.createListItemFromJson = createListItemFromJson;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createListFromJson(createElement, dataSource, options, level, isSingleLevel) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel);\n    return generateUL(createElement, li, curOpt.listClass, options);\n  }\n\n  ListBase.createListFromJson = createListFromJson;\n  /**\n   * Return the next or previous visible element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n   * @param  {Element} li - An element to find next or previous after this element.\n   * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n   */\n\n  function getSiblingLI(elementArray, element, isPrevious) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n\n    if (!elementArray || !elementArray.length) {\n      return void 0;\n    }\n\n    var siblingLI;\n    var liIndex;\n    var liCollections = Array.prototype.slice.call(elementArray);\n\n    if (element) {\n      liIndex = indexOf(element, liCollections);\n    } else {\n      liIndex = isPrevious === true ? liCollections.length : -1;\n    }\n\n    siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n\n    while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n      liIndex = liIndex + (isPrevious === true ? -1 : 1);\n      siblingLI = liCollections[liIndex];\n    }\n\n    return siblingLI;\n  }\n\n  ListBase.getSiblingLI = getSiblingLI;\n  /**\n   * Return the index of the li element\n   * @param  {Element} item - An element to find next or previous after this element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n   */\n\n  function indexOf(item, elementArray) {\n    if (!elementArray || !item) {\n      return void 0;\n    } else {\n      var liCollections = elementArray;\n      liCollections = Array.prototype.slice.call(elementArray);\n      return liCollections.indexOf(item);\n    }\n  }\n\n  ListBase.indexOf = indexOf;\n  /**\n   * Returns the grouped data from given dataSource.\n   * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n   * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n   * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n   */\n\n  function groupDataSource(dataSource, fields, sortOrder) {\n    if (sortOrder === void 0) {\n      sortOrder = 'None';\n    }\n\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var cusQuery = new Query().group(curFields.groupBy); // need to remove once sorting issues fixed in DataManager\n\n    cusQuery = addSorting(sortOrder, 'key', cusQuery);\n    var ds = getDataSource(dataSource, cusQuery);\n    dataSource = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      var grpItem = {};\n      var hdr = 'isHeader';\n      grpItem[curFields.text] = ds[j].key;\n      grpItem[hdr] = true;\n      grpItem.id = 'group-list-item-' + (ds[j].key ? ds[j].key.toString().trim() : 'undefined');\n      grpItem.items = itemObj;\n      dataSource.push(grpItem);\n\n      for (var k = 0; k < itemObj.length; k++) {\n        dataSource.push(itemObj[k]);\n      }\n    }\n\n    return dataSource;\n  }\n\n  ListBase.groupDataSource = groupDataSource;\n  /**\n   * Returns a sorted query object.\n   * @param  {SortOrder} sortOrder - Specifies that sort order.\n   * @param  {string} sortBy - Specifies sortBy fields.\n   * @param  {Query=new Query()} query - Pass if any existing query.\n   */\n\n  function addSorting(sortOrder, sortBy, query) {\n    if (query === void 0) {\n      query = new Query();\n    }\n\n    if (sortOrder === 'Ascending') {\n      query.sortBy(sortBy, 'ascending', true);\n    } else if (sortOrder === 'Descending') {\n      query.sortBy(sortBy, 'descending', true);\n    } else {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i].fn === 'onSortBy') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  }\n\n  ListBase.addSorting = addSorting;\n  /**\n   * Return an array of JSON Data that processed based on queries.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {Query} query - Specifies query that need to process.\n   */\n\n  function getDataSource(dataSource, query) {\n    // tslint:disable-next-line\n    return new DataManager(dataSource).executeLocal(query);\n  }\n\n  ListBase.getDataSource = getDataSource;\n  /**\n   * Created JSON data based the UL and LI element\n   * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n  function createJsonFromElement(element, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var curEle = element.cloneNode(true);\n    var jsonAr = [];\n    curEle.classList.add('json-parent');\n    var childs = curEle.querySelectorAll('.json-parent>li');\n    curEle.classList.remove('json-parent');\n\n    for (var i = 0; i < childs.length; i++) {\n      var li = childs[i];\n      var anchor = li.querySelector('a');\n      var ul = li.querySelector('ul');\n      var json = {};\n      var childNodes = anchor ? anchor.childNodes : li.childNodes;\n      var keys = Object.keys(childNodes);\n\n      for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n        if (!childNodes[Number(keys[i_1])].hasChildNodes()) {\n          json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n        }\n      }\n\n      var attributes_1 = getAllAttributes(li);\n\n      if (attributes_1.id) {\n        json[fields.id] = attributes_1.id;\n        delete attributes_1.id;\n      } else {\n        json[fields.id] = generateId();\n      }\n\n      if (Object.keys(attributes_1).length) {\n        json[fields.htmlAttributes] = attributes_1;\n      }\n\n      if (anchor) {\n        attributes_1 = getAllAttributes(anchor);\n\n        if (Object.keys(attributes_1).length) {\n          json[fields.urlAttributes] = attributes_1;\n        }\n      }\n\n      if (ul) {\n        json[fields.child] = createJsonFromElement(ul, options);\n      }\n\n      jsonAr.push(json);\n    }\n\n    return jsonAr;\n  }\n\n  ListBase.createJsonFromElement = createJsonFromElement;\n\n  function typeofData(data) {\n    var match = {\n      typeof: null,\n      item: null\n    };\n\n    for (var i = 0; i < data.length; i++) {\n      if (!isNullOrUndefined(data[i])) {\n        return match = {\n          typeof: typeof data[i],\n          item: data[i]\n        };\n      }\n    }\n\n    return match;\n  }\n\n  function setAttribute(element, elementAttributes) {\n    var attr = {};\n    merge(attr, elementAttributes);\n\n    if (attr.class) {\n      addClass([element], attr.class.split(' '));\n      delete attr.class;\n    }\n\n    attributes(element, attr);\n  }\n\n  function getAllAttributes(element) {\n    var attributes = {};\n    var attr = element.attributes;\n\n    for (var index = 0; index < attr.length; index++) {\n      attributes[attr[index].nodeName] = attr[index].nodeValue;\n    }\n\n    return attributes;\n  }\n  /**\n   * Created UL element from content template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n\n  function renderContentTemplate(createElement, template, dataSource, fields, options) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul,\n      attrs: {\n        role: 'presentation'\n      }\n    });\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var compiledString = compile(template);\n    var liCollection = [];\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], curFields);\n      var curItem = dataSource[i];\n      var isHeader = curItem.isHeader;\n      var value = fieldData[curFields.value];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], curFields);\n        value = fieldData[curFields.value];\n      }\n\n      var li = createElement('li', {\n        id: id + '-' + i,\n        className: isHeader ? cssClass.group : cssClass.li,\n        attrs: {\n          role: 'presentation'\n        }\n      });\n\n      if (isHeader) {\n        li.innerText = fieldData[curFields.text];\n      } else {\n        var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n        append(compiledString(curItem, null, null, currentID, !!curOpt.isStringTemplate), li);\n        li.setAttribute('data-value', value);\n        li.setAttribute('role', 'option');\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          item: li,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      liCollection.push(li);\n    }\n\n    append(liCollection, ulElement);\n    return ulElement;\n  }\n\n  ListBase.renderContentTemplate = renderContentTemplate;\n  /**\n   * Created header items from group template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n   * @param  {Element[]} headerItems? - Specifies listbase header items.\n   */\n\n  function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems, options) {\n    var compiledString = compile(groupTemplate);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var category = curFields.groupBy;\n\n    for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n      var header = headerItems_1[_i];\n      var headerData = {};\n      headerData[category] = header.textContent;\n      header.innerHTML = '';\n      append(compiledString(headerData, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n    }\n\n    return headerItems;\n  }\n\n  ListBase.renderGroupTemplate = renderGroupTemplate;\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  ListBase.generateId = generateId;\n\n  function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n    // Get SubList\n    var subDS = fieldData[fields.child] || [];\n    var hasChildren = fieldData[fields.hasChildren]; //Create Sub child\n\n    if (subDS.length) {\n      hasChildren = true;\n      element.classList.add(cssClass.hasChild);\n\n      if (options.processSubChild) {\n        var subLi = createListFromJson(createElement, subDS, options, ++level);\n        element.appendChild(subLi);\n      }\n    } // Create expand and collapse node\n\n\n    if (!!options.expandCollapse && hasChildren && !options.template) {\n      element.firstElementChild.classList.add(cssClass.iconWrapper);\n      var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n      expandElement([createElement('div', {\n        className: 'e-icons ' + options.expandIconClass\n      })], element.querySelector('.' + cssClass.textContent));\n    }\n  }\n\n  function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var value = item;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n      dataSource = item;\n      text = typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number' ? fieldData[fields.text] : fieldData[fields.text] || '';\n      value = fieldData[fields.value];\n    }\n\n    var elementID;\n\n    if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id]) && fieldData[fields.id] !== '') {\n      elementID = id;\n    } else {\n      elementID = id + '-' + index;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      id: elementID,\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n\n    if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n      li.classList.add(cssClass.disabled);\n    }\n\n    if (grpLI) {\n      li.innerText = text;\n    } else {\n      if (!isNullOrUndefined(value)) {\n        li.setAttribute('data-value', value);\n      }\n\n      li.setAttribute('role', 'option');\n\n      if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n        setAttribute(li, fieldData[fields.htmlAttributes]);\n      }\n\n      if (innerElements.length) {\n        append(innerElements, li);\n      }\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        li.appendChild(anchorTag(createElement, dataSource, fields, text));\n      } else {\n        li.appendChild(document.createTextNode(text));\n      }\n    }\n\n    return li;\n  }\n\n  function getModuleClass(moduleName) {\n    var moduleClass;\n    return moduleClass = {\n      li: \"e-\" + moduleName + \"-item\",\n      ul: \"e-\" + moduleName + \"-parent e-ul\",\n      group: \"e-\" + moduleName + \"-group-item\",\n      icon: \"e-\" + moduleName + \"-icon\",\n      text: \"e-\" + moduleName + \"-text\",\n      check: \"e-\" + moduleName + \"-check\",\n      checked: 'e-checked',\n      selected: 'e-selected',\n      expanded: 'e-expanded',\n      textContent: 'e-text-content',\n      hasChild: 'e-has-child',\n      level: 'e-level',\n      url: \"e-\" + moduleName + \"-url\",\n      collapsible: 'e-icon-collapsible',\n      disabled: 'e-disabled',\n      image: \"e-\" + moduleName + \"-img\",\n      iconWrapper: 'e-icon-wrapper'\n    };\n  }\n\n  function anchorTag(createElement, dataSource, fields, text) {\n    var fieldData = getFieldValues(dataSource, fields);\n    var attr = {\n      href: fieldData[fields.url]\n    };\n\n    if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n      merge(attr, fieldData[fields.urlAttributes]);\n      attr.href = fieldData[fields.url] ? fieldData[fields.url] : fieldData[fields.urlAttributes].href;\n    }\n\n    var anchorTag = createElement('a', {\n      className: cssClass.text + ' ' + cssClass.url,\n      innerHTML: text\n    });\n    setAttribute(anchorTag, attr);\n    return anchorTag;\n  }\n  /* tslint:disable:align */\n\n\n  function generateLI(createElement, item, fieldData, fields, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var uID;\n    var grpLI;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number') {\n      dataSource = item;\n      text = fieldData[fields.text] || '';\n      uID = fieldData[fields.id];\n      grpLI = item.hasOwnProperty('isHeader') && item.isHeader ? true : false;\n    }\n\n    if (options && options.enableHtmlSanitizer) {\n      text = SanitizeHtmlHelper.sanitize(text);\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n    !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n    var blazId = 'BlazId';\n\n    if (options && !!options.removeBlazorID && typeof item === 'object' && item.hasOwnProperty(blazId)) {\n      delete item[blazId];\n    }\n\n    if (grpLI && options && options.groupTemplate) {\n      var compiledString = compile(options.groupTemplate);\n      append(compiledString(item, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n    } else if (!grpLI && options && options.template) {\n      var compiledString = compile(options.template);\n      append(compiledString(item, null, null, curOpt.templateID, !!curOpt.isStringTemplate), li);\n    } else {\n      var innerDiv = createElement('div', {\n        className: cssClass.textContent,\n        attrs: ariaAttributes.wrapperRole !== '' ? {\n          role: ariaAttributes.wrapperRole\n        } : {}\n      });\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text));\n      } else {\n        innerDiv.appendChild(createElement('span', {\n          className: cssClass.text,\n          innerHTML: text,\n          attrs: ariaAttributes.itemText !== '' ? {\n            role: ariaAttributes.itemText\n          } : {}\n        }));\n      }\n\n      li.appendChild(innerDiv);\n    }\n\n    return li;\n  }\n  /**\n   * Returns UL element based on the given LI element.\n   * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n   * @param  {string} className? - Specifies class name that need to be added in UL element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n\n  function generateUL(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.listRole !== '' ? {\n        role: ariaAttributes.listRole\n      } : {}\n    });\n    append(liElement, ulElement);\n    return ulElement;\n  }\n\n  ListBase.generateUL = generateUL;\n  /**\n   * Returns LI element with additional DIV tag based on the given LI element.\n   * @param  {liElement} liElement - Specifies LI element.\n   * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n  function generateIcon(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n    expandElement([createElement('div', {\n      className: 'e-icons ' + curOpt.expandIconClass + ' ' + (isNullOrUndefined(className) ? '' : className)\n    })], liElement.querySelector('.' + cssClass.textContent));\n    return liElement;\n  }\n\n  ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\n\n\nexport function getFieldValues(dataItem, fields) {\n  var fieldData = {};\n\n  if (isNullOrUndefined(dataItem) || typeof dataItem === 'string' || typeof dataItem === 'number' || !isNullOrUndefined(dataItem.isHeader)) {\n    return dataItem;\n  } else {\n    for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n      var field = _a[_i];\n      var dataField = fields[field];\n      var value = !isNullOrUndefined(dataField) && typeof dataField === 'string' ? getValue(dataField, dataItem) : undefined;\n\n      if (!isNullOrUndefined(value)) {\n        fieldData[dataField] = value;\n      }\n    }\n  }\n\n  return fieldData;\n}","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-lists/src/common/list-base.js"],"names":["extend","merge","isNullOrUndefined","getValue","attributes","prepend","isVisible","append","addClass","compile","SanitizeHtmlHelper","DataManager","Query","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","ListBase","defaultMappedFields","id","value","isChecked","enabled","iconCss","child","hasChildren","tooltip","htmlAttributes","urlAttributes","imageAttributes","imageUrl","groupBy","defaultAriaAttributes","listRole","itemRole","groupItemRole","itemText","wrapperRole","defaultListBaseOptions","showCheckBox","showIcon","enableHtmlSanitizer","expandCollapse","fields","ariaAttributes","listClass","itemClass","processSubChild","sortOrder","template","groupTemplate","headerTemplate","expandIconClass","moduleName","expandIconPosition","createList","createElement","dataSource","options","isSingleLevel","curOpt","type","typeofData","typeof","createListFromArray","createListFromJson","subChild","createListItemFromArray","generateUL","getModuleClass","generateId","i","length","itemCreating","curData","generateSingleLevelLI","undefined","generateLI","itemCreated","item","push","createListItemFromJson","hasOwnProperty","fieldData","getFieldValues","curItem","innerEle","className","attrs","isHeader","classList","add","setAttribute","toString","style","display","attr","src","firstElementChild","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","prototype","slice","call","indexOf","contains","groupDataSource","curFields","cusQuery","addSorting","ds","getDataSource","j","itemObj","items","grpItem","hdr","key","trim","k","sortBy","query","queries","fn","splice","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","querySelector","json","childNodes","keys","Object","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","data","match","elementAttributes","class","split","index","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","liCollection","innerText","currentID","groupTemplateID","templateID","isStringTemplate","renderGroupTemplate","headerItems","category","_i","headerItems_1","header","headerData","innerHTML","Math","floor","random","substring","subDS","subLi","appendChild","expandElement","innerElements","grpLI","elementID","href","anchorTag","document","createTextNode","moduleClass","uID","sanitize","blazId","removeBlazorID","innerDiv","liElement","generateIcon","dataItem","_a","field","dataField"],"mappings":"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","sourcesContent":["import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper'\n};\n/**\n * Base List Generator\n */\nexport var ListBase;\n(function (ListBase) {\n    /**\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right'\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, options, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options);\n        }\n        else {\n            return createListFromJson(createElement, dataSource, options, ariaAttributes.level, isSingleLevel);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListItemFromArray(createElement, dataSource, isSingleLevel, options) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    function createListItemFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    var attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    prepend([createElement('img', { className: cssClass.image, attrs: attr })], li.firstElementChild);\n                }\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    prepend([createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] })], li.firstElementChild);\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, options, level, isSingleLevel) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            grpItem.id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query=new Query()} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // tslint:disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            var attributes_1 = getAllAttributes(li);\n            if (attributes_1.id) {\n                json[fields.id] = attributes_1.id;\n                delete attributes_1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, fields, options) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var compiledString = compile(template);\n        var liCollection = [];\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], curFields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            var value = fieldData[curFields.value];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                value = fieldData[curFields.value];\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                li.innerText = fieldData[curFields.text];\n            }\n            else {\n                var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                append(compiledString(curItem, null, null, currentID, !!curOpt.isStringTemplate), li);\n                li.setAttribute('data-value', value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, headerItems, options) {\n        var compiledString = compile(groupTemplate);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var category = curFields.groupBy;\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            var headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            append(compiledString(headerData, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            if (!isNullOrUndefined(value)) {\n                li.setAttribute('data-value', value);\n            }\n            li.setAttribute('role', 'option');\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text));\n            }\n            else {\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper'\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        var anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, fields, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            uID = fieldData[fields.id];\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            text = SanitizeHtmlHelper.sanitize(text);\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n        var blazId = 'BlazId';\n        if (options && !!options.removeBlazorID\n            && typeof item === 'object'\n            && item.hasOwnProperty(blazId)) {\n            delete item[blazId];\n        }\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compile(options.groupTemplate);\n            append(compiledString(item, null, null, curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compile(options.template);\n            append(compiledString(item, null, null, curOpt.templateID, !!curOpt.isStringTemplate), li);\n        }\n        else {\n            var innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text));\n            }\n            else {\n                innerDiv.appendChild(createElement('span', {\n                    className: cssClass.text, innerHTML: text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                }));\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     * @param  {liElement} liElement - Specifies LI element.\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            var dataField = fields[field];\n            var value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\n"]},"metadata":{},"sourceType":"module"}