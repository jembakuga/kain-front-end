{"ast":null,"code":"import { isNullOrUndefined, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, getDatePredicate, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n * @hidden\n */\n\nvar Data =\n/** @class */\nfunction () {\n  /**\n   * Constructor for data module.\n   * @hidden\n   */\n  function Data(parent, serviceLocator) {\n    this.dataState = {\n      isPending: false,\n      resolver: null,\n      group: []\n    };\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.initDataManager();\n\n    if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n      return;\n    }\n\n    this.parent.on(events.rowsAdded, this.addRows, this);\n    this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n    this.parent.on(events.rowsRemoved, this.removeRows, this);\n    this.parent.on(events.dataSourceModified, this.initDataManager, this);\n    this.parent.on(events.destroy, this.destroy, this);\n    this.parent.on(events.updateData, this.crudActions, this);\n    this.parent.on(events.addDeleteAction, this.getData, this);\n    this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n    this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n  }\n\n  Data.prototype.reorderRows = function (e) {\n    this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n  };\n\n  Data.prototype.getModuleName = function () {\n    return 'data';\n  };\n  /**\n   * The function used to initialize dataManager and external query\n   * @return {void}\n   */\n\n\n  Data.prototype.initDataManager = function () {\n    var gObj = this.parent;\n    this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource : isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource);\n    gObj.setProperties({\n      query: gObj.query instanceof Query ? gObj.query : new Query()\n    }, true);\n  };\n  /**\n   * The function is used to generate updated Query from Grid model.\n   * @return {Query}\n   * @hidden\n   */\n\n\n  Data.prototype.generateQuery = function (skipPage) {\n    var gObj = this.parent;\n    var query = gObj.getQuery().clone();\n\n    if (this.parent.columnQueryMode === 'ExcludeHidden') {\n      query.select(this.parent.getColumns().filter(function (column) {\n        return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined);\n      }).map(function (column) {\n        return column.field;\n      }));\n    } else if (this.parent.columnQueryMode === 'Schema') {\n      var selectQueryFields = [];\n      var columns = this.parent.columns;\n\n      for (var i = 0; i < columns.length; i++) {\n        selectQueryFields.push(columns[i].field);\n      }\n\n      query.select(selectQueryFields);\n    }\n\n    this.filterQuery(query);\n    this.searchQuery(query);\n    this.aggregateQuery(query);\n    this.sortQuery(query);\n\n    if (isGroupAdaptive(this.parent)) {\n      this.virtualGroupPageQuery(query);\n    } else {\n      this.pageQuery(query, skipPage);\n    }\n\n    this.groupQuery(query);\n    return query;\n  };\n\n  Data.prototype.aggregateQuery = function (query, isForeign) {\n    this.parent.aggregates.forEach(function (row) {\n      row.columns.forEach(function (column) {\n        var types = column.type instanceof Array ? column.type : [column.type];\n        types.forEach(function (type) {\n          return query.aggregate(type.toLowerCase(), column.field);\n        });\n      });\n    });\n    return query;\n  };\n\n  Data.prototype.virtualGroupPageQuery = function (query) {\n    var gObj = this.parent;\n    var fName = 'fn';\n\n    if (query.queries.length) {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i][fName] === 'onPage') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.pageQuery = function (query, skipPage) {\n    var gObj = this.parent;\n    var fName = 'fn';\n\n    if ((gObj.allowPaging || gObj.enableVirtualization) && skipPage !== true) {\n      gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n\n      if (gObj.pageSettings.pageCount <= 0) {\n        gObj.pageSettings.pageCount = 8;\n      }\n\n      if (gObj.pageSettings.pageSize <= 0) {\n        gObj.pageSettings.pageSize = 12;\n      }\n\n      if (query.queries.length) {\n        for (var i = 0; i < query.queries.length; i++) {\n          if (query.queries[i][fName] === 'onPage') {\n            query.queries.splice(i, 1);\n          }\n        }\n      }\n\n      query.page(gObj.pageSettings.currentPage, gObj.pageSettings.pageSize);\n    }\n\n    return query;\n  };\n\n  Data.prototype.groupQuery = function (query) {\n    var gObj = this.parent;\n\n    if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n      var columns = gObj.groupSettings.columns;\n\n      for (var i = 0, len = columns.length; i < len; i++) {\n        var column = this.getColumnByField(columns[i]);\n\n        if (!column) {\n          this.parent.log('initial_action', {\n            moduleName: 'group',\n            columnName: columns[i]\n          });\n        }\n\n        var isGrpFmt = column.enableGroupByFormat;\n        var format = column.format;\n\n        if (isGrpFmt) {\n          query.group(columns[i], this.formatGroupColumn.bind(this), format);\n        } else {\n          query.group(columns[i], null);\n        }\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.sortQuery = function (query) {\n    var gObj = this.parent;\n\n    if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n      var columns = gObj.sortSettings.columns;\n      var sortGrp = [];\n\n      for (var i = columns.length - 1; i > -1; i--) {\n        var col = this.getColumnByField(columns[i].field);\n\n        if (col) {\n          col.setSortDirection(columns[i].direction);\n        } else {\n          this.parent.log('initial_action', {\n            moduleName: 'sort',\n            columnName: columns[i].field\n          });\n          return query;\n        }\n\n        var fn = columns[i].direction;\n\n        if (col.sortComparer) {\n          this.parent.log('grid_sort_comparer');\n          fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n        }\n\n        if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n          query.sortBy(col.field, fn);\n        } else {\n          sortGrp.push({\n            direction: fn,\n            field: col.field\n          });\n        }\n      }\n\n      for (var i = 0, len = sortGrp.length; i < len; i++) {\n        query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.searchQuery = function (query) {\n    var _this = this;\n\n    var sSettings = this.parent.searchSettings;\n    var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n    var predicateList = [];\n    var needForeignKeySearch = false;\n\n    if (this.parent.searchSettings.key.length) {\n      needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) {\n        return fields.indexOf(col.field) > -1;\n      });\n\n      if (needForeignKeySearch && !(this.dataManager.adaptor.getModulename && this.dataManager.adaptor.getModulename() === 'ODataV4Adaptor')) {\n        fields.forEach(function (columnName) {\n          var column = _this.getColumnByField(columnName);\n\n          if (column.isForeignColumn()) {\n            predicateList = _this.fGeneratePredicate(column, predicateList);\n          } else {\n            predicateList.push(new Predicate(column.field, sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n          }\n        });\n        query.where(Predicate.or(predicateList));\n      } else {\n        query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.filterQuery = function (query, column, skipFoerign) {\n    var gObj = this.parent;\n    var predicateList = [];\n    var fPredicate = {};\n    var actualFilter = [];\n    var foreignColumn = this.parent.getForeignKeyColumns();\n\n    if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n      var columns = column ? column : gObj.filterSettings.columns;\n      var colType = {};\n\n      for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n        var col = _a[_i];\n        colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n      }\n\n      var checkBoxCols = [];\n      var defaultFltrCols = [];\n\n      for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n        var col = columns_1[_b];\n\n        if (colType[col.field] === 'CheckBox' || colType[col.field] === 'Excel') {\n          checkBoxCols.push(col);\n        } else {\n          defaultFltrCols.push(col);\n        }\n      }\n\n      if (checkBoxCols.length) {\n        var excelPredicate = CheckBoxFilterBase.getPredicate(checkBoxCols);\n\n        for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n          var prop = _d[_c];\n          var col = void 0;\n\n          if (this.parent.getColumnByField(prop).isForeignColumn()) {\n            col = getColumnByForeignKeyValue(prop, foreignColumn);\n          }\n\n          if (!col) {\n            this.parent.log('initial_action', {\n              moduleName: 'filter',\n              columnName: prop\n            });\n          }\n\n          if (col && !skipFoerign) {\n            predicateList = this.fGeneratePredicate(col, predicateList);\n            actualFilter.push(col);\n          } else {\n            predicateList.push(excelPredicate[prop]);\n          }\n        }\n      }\n\n      if (defaultFltrCols.length) {\n        for (var _e = 0, defaultFltrCols_1 = defaultFltrCols; _e < defaultFltrCols_1.length; _e++) {\n          var col = defaultFltrCols_1[_e];\n          col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n          var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n\n          if (!column_1) {\n            this.parent.log('initial_action', {\n              moduleName: 'filter',\n              columnName: col.field\n            });\n          }\n\n          var sType = column_1.type;\n\n          if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n            actualFilter.push(col);\n            predicateList = this.fGeneratePredicate(column_1, predicateList);\n          } else {\n            if (sType !== 'date' && sType !== 'datetime') {\n              predicateList.push(new Predicate(col.field, col.operator, col.value, !col.matchCase, this.parent.filterSettings.ignoreAccent));\n            } else {\n              predicateList.push(getDatePredicate(col, sType));\n            }\n          }\n        }\n      }\n\n      if (predicateList.length) {\n        query.where(Predicate.and(predicateList));\n      } else {\n        this.parent.notify(events.showEmptyGrid, {});\n      }\n    }\n\n    return query;\n  };\n\n  Data.prototype.fGeneratePredicate = function (col, predicateList) {\n    var fPredicate = {};\n\n    if (col) {\n      this.parent.notify(events.generateQuery, {\n        predicate: fPredicate,\n        column: col\n      });\n\n      if (fPredicate.predicate.predicates.length) {\n        predicateList.push(fPredicate.predicate);\n      }\n    }\n\n    return predicateList;\n  };\n  /**\n   * The function is used to get dataManager promise by executing given Query.\n   * @param  {Query} query - Defines the query which will execute along with data processing.\n   * @return {Promise<Object>}\n   * @hidden\n   */\n\n\n  Data.prototype.getData = function (args, query) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {\n        requestType: ''\n      };\n    }\n\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n    this.parent.log('datasource_syntax_mismatch', {\n      dataState: this.parent\n    });\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      var def = this.eventPromise(args, query, key);\n      return def.promise;\n    } else {\n      var crud = void 0;\n\n      switch (args.requestType) {\n        case 'delete':\n          query = query ? query : this.generateQuery();\n          var len = Object.keys(args.data).length;\n\n          if (len === 1) {\n            crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n          } else {\n            var changes = {\n              addedRecords: [],\n              deletedRecords: [],\n              changedRecords: []\n            };\n            changes.deletedRecords = args.data;\n            crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n          }\n\n          break;\n\n        case 'save':\n          if (isBlazor() && this.parent.isServerRendered) {\n            this.parent.notify('offset', args);\n          }\n\n          query = query ? query : this.generateQuery();\n          args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n          crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n          break;\n      }\n\n      var promise = 'promise';\n      args[promise] = crud;\n\n      if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n        return crud.then(function (result) {\n          return _this.insert(query, args);\n        });\n      } else {\n        return this.insert(query, args);\n      }\n    }\n  };\n\n  Data.prototype.insert = function (query, args) {\n    if (args.requestType === 'save') {\n      this.parent.notify(events.recordAdded, args);\n    }\n\n    return this.executeQuery(query);\n  };\n\n  Data.prototype.executeQuery = function (query) {\n    var _this = this;\n\n    if (this.dataManager.ready) {\n      var deferred_1 = new Deferred();\n      var ready = this.dataManager.ready;\n      ready.then(function (e) {\n        _this.dataManager.executeQuery(query).then(function (result) {\n          deferred_1.resolve(result);\n        });\n      }).catch(function (e) {\n        deferred_1.reject(e);\n      });\n      return deferred_1.promise;\n    } else {\n      return this.dataManager.executeQuery(query);\n    }\n  };\n\n  Data.prototype.formatGroupColumn = function (value, field) {\n    var gObj = this.parent;\n    var serviceLocator = this.serviceLocator;\n    var column = this.getColumnByField(field);\n    var date = value;\n\n    if (!column.type) {\n      column.type = date.getDay ? date.getHours() > 0 || date.getMinutes() > 0 || date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date' : typeof value;\n    }\n\n    if (isNullOrUndefined(column.getFormatter())) {\n      setFormatter(serviceLocator, column);\n    }\n\n    var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n    return formatVal;\n  };\n\n  Data.prototype.crudActions = function (args) {\n    var query = this.generateQuery();\n    var promise = null;\n    var pr = 'promise';\n    var key = this.getKey(args.foreignKeyData && Object.keys(args.foreignKeyData).length ? args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n\n    if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n      this.eventPromise(args, query, key);\n    }\n\n    switch (args.requestType) {\n      case 'save':\n        if (isBlazor() && this.parent.isServerRendered) {\n          this.parent.notify('offset', args);\n        }\n\n        promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n        break;\n    }\n\n    args[pr] = promise ? promise : args[pr];\n    this.parent.notify(events.crudAction, args);\n  };\n  /** @hidden */\n\n\n  Data.prototype.saveChanges = function (changes, key, original, query) {\n    if (query === void 0) {\n      query = this.generateQuery();\n    }\n\n    query.requiresCount();\n\n    if ('result' in this.parent.dataSource) {\n      var state = void 0;\n      state = this.getStateEventArgument(query);\n      var deff = new Deferred();\n      var args = {\n        requestType: 'batchsave',\n        changes: changes,\n        key: key,\n        query: query,\n        endEdit: deff.resolve\n      };\n      this.setState({\n        isPending: true,\n        resolver: deff.resolve\n      });\n      this.parent.trigger(events.dataSourceChanged, args);\n      return deff.promise;\n    } else {\n      var changedRecords = 'changedRecords';\n      var addedRecords = 'addedRecords';\n      var data = 'data';\n\n      if (isBlazor() && this.parent.isServerRendered) {\n        for (var i = 0; i < changes[changedRecords].length; i++) {\n          var args = {\n            data: changes[changedRecords][i]\n          };\n          this.parent.notify('offset', args);\n          changes[changedRecords][i] = args[data];\n        }\n\n        for (var i = 0; i < changes[addedRecords].length; i++) {\n          var args = {\n            data: changes[addedRecords][i]\n          };\n          this.parent.notify('offset', args);\n          changes[addedRecords][i] = args[data];\n        }\n      }\n\n      var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n      return promise;\n    }\n  };\n\n  Data.prototype.getKey = function (keys) {\n    if (keys && keys.length) {\n      return keys[0];\n    }\n\n    return undefined;\n  };\n  /** @hidden */\n\n\n  Data.prototype.isRemote = function () {\n    return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined && this.dataManager.dataSource.url !== '';\n  };\n\n  Data.prototype.addRows = function (e) {\n    for (var i = e.records.length; i > 0; i--) {\n      this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n    }\n  };\n\n  Data.prototype.removeRows = function (e) {\n    var json = this.dataManager.dataSource.json;\n    this.dataManager.dataSource.json = json.filter(function (value, index) {\n      return e.records.indexOf(value) === -1;\n    });\n  };\n\n  Data.prototype.getColumnByField = function (field) {\n    var col;\n    return this.parent.columnModel.some(function (column) {\n      col = column;\n      return column.field === field;\n    }) && col;\n  };\n\n  Data.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.rowsAdded, this.addRows);\n    this.parent.off(events.rowsRemoved, this.removeRows);\n    this.parent.off(events.dataSourceModified, this.initDataManager);\n    this.parent.off(events.destroy, this.destroy);\n    this.parent.off(events.updateData, this.crudActions);\n    this.parent.off(events.addDeleteAction, this.getData);\n    this.parent.off(events.autoCol, this.refreshFilteredCols);\n    this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n  };\n\n  Data.prototype.getState = function () {\n    return this.dataState;\n  };\n\n  Data.prototype.setState = function (state) {\n    return this.dataState = state;\n  };\n\n  Data.prototype.getStateEventArgument = function (query) {\n    var adaptr = new UrlAdaptor();\n    var dm = new DataManager({\n      url: '',\n      adaptor: new UrlAdaptor()\n    });\n    var state = adaptr.processQuery(dm, query);\n    var data = JSON.parse(state.data);\n    return extend(data, state.pvtData);\n  };\n\n  Data.prototype.eventPromise = function (args, query, key) {\n    var _this = this;\n\n    var state;\n    var dataArgs = args;\n    state = this.getStateEventArgument(query);\n    var def = new Deferred();\n    var deff = new Deferred();\n\n    if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n      state.action = args;\n\n      if (args.requestType === 'save' || args.requestType === 'delete') {\n        var editArgs_1 = args;\n        editArgs_1.key = key;\n        var promise = 'promise';\n        editArgs_1[promise] = deff.promise;\n        editArgs_1.state = state;\n        this.setState({\n          isPending: true,\n          resolver: deff.resolve\n        });\n        dataArgs.endEdit = deff.resolve;\n        dataArgs.cancelEdit = deff.reject;\n        this.parent.trigger(events.dataSourceChanged, editArgs_1);\n        deff.promise.then(function (e) {\n          _this.setState({\n            isPending: true,\n            resolver: def.resolve,\n            group: state.group,\n            aggregates: state.aggregates\n          });\n\n          if (editArgs_1.requestType === 'save') {\n            _this.parent.notify(events.recordAdded, editArgs_1);\n          }\n\n          _this.parent.trigger(events.dataStateChange, state);\n        }).catch(function () {\n          return void 0;\n        });\n      } else {\n        this.setState({\n          isPending: true,\n          resolver: def.resolve,\n          group: state.group,\n          aggregates: state.aggregates\n        });\n        this.parent.trigger(events.dataStateChange, state);\n      }\n    } else {\n      this.setState({});\n      def.resolve(this.parent.dataSource);\n    }\n\n    return def;\n  };\n  /**\n   * Gets the columns where searching needs to be performed from the Grid.\n   * @return {string[]}\n   */\n\n\n  Data.prototype.getSearchColumnFieldNames = function () {\n    var colFieldNames = [];\n    var columns = this.parent.getColumns();\n\n    for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n      var col = columns_2[_i];\n\n      if (col.allowSearching && !isNullOrUndefined(col.field)) {\n        colFieldNames.push(col.field);\n      }\n    }\n\n    return colFieldNames;\n  };\n\n  Data.prototype.refreshFilteredCols = function () {\n    if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n      refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n    }\n  };\n\n  return Data;\n}();\n\nexport { Data };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/actions/data.js"],"names":["isNullOrUndefined","extend","isBlazor","Query","DataManager","Predicate","Deferred","UrlAdaptor","setFormatter","getDatePredicate","isGroupAdaptive","getColumnByForeignKeyValue","refreshFilteredColsUid","events","ValueFormatter","CheckBoxFilterBase","Data","parent","serviceLocator","dataState","isPending","resolver","group","initDataManager","isDestroyed","getModuleName","on","rowsAdded","addRows","rowPositionChanged","reorderRows","rowsRemoved","removeRows","dataSourceModified","destroy","updateData","crudActions","addDeleteAction","getData","autoCol","refreshFilteredCols","columnsPrepared","prototype","e","dataManager","dataSource","json","splice","toIndex","fromIndex","gObj","setProperties","query","generateQuery","skipPage","getQuery","clone","columnQueryMode","select","getColumns","filter","column","isPrimaryKey","visible","field","undefined","map","selectQueryFields","columns","i","length","push","filterQuery","searchQuery","aggregateQuery","sortQuery","virtualGroupPageQuery","pageQuery","groupQuery","isForeign","aggregates","forEach","row","types","type","Array","aggregate","toLowerCase","fName","queries","allowPaging","enableVirtualization","pageSettings","currentPage","Math","max","pageCount","pageSize","page","allowGrouping","groupSettings","len","getColumnByField","log","moduleName","columnName","isGrpFmt","enableGroupByFormat","format","formatGroupColumn","bind","allowSorting","sortSettings","sortGrp","col","setSortDirection","direction","fn","sortComparer","isRemote","indexOf","sortBy","_this","sSettings","searchSettings","fields","getSearchColumnFieldNames","predicateList","needForeignKeySearch","key","getForeignKeyColumns","some","adaptor","getModulename","isForeignColumn","fGeneratePredicate","operator","ignoreCase","ignoreAccent","where","or","search","skipFoerign","fPredicate","actualFilter","foreignColumn","allowFiltering","filterSettings","colType","_i","_a","checkBoxCols","defaultFltrCols","_b","columns_1","excelPredicate","getPredicate","_c","_d","Object","keys","prop","_e","defaultFltrCols_1","uid","grabColumnByFieldFromAllCols","column_1","grabColumnByUidFromAllCols","sType","value","matchCase","and","notify","showEmptyGrid","predicate","predicates","args","requestType","getKey","foreignKeyData","getPrimaryKeyFieldNames","def","eventPromise","promise","crud","data","remove","fromTable","changes","addedRecords","deletedRecords","changedRecords","saveChanges","requiresCount","isServerRendered","index","insert","isArray","hasOwnProperty","then","result","recordAdded","executeQuery","ready","deferred_1","resolve","catch","reject","date","getDay","getHours","getMinutes","getSeconds","getMilliseconds","getFormatter","formatVal","toView","pr","update","previousData","crudAction","original","state","getStateEventArgument","deff","endEdit","setState","trigger","dataSourceChanged","offline","url","records","columnModel","off","getState","adaptr","dm","processQuery","JSON","parse","pvtData","dataArgs","isDataChanged","action","editArgs_1","cancelEdit","dataStateChange","colFieldNames","columns_2","allowSearching"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, extend, isBlazor } from '@syncfusion/ej2-base';\nimport { Query, DataManager, Predicate, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { setFormatter, getDatePredicate, isGroupAdaptive, getColumnByForeignKeyValue, refreshFilteredColsUid } from '../base/util';\nimport * as events from '../base/constant';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * Grid data module is used to generate query and data source.\n * @hidden\n */\nvar Data = /** @class */ (function () {\n    /**\n     * Constructor for data module.\n     * @hidden\n     */\n    function Data(parent, serviceLocator) {\n        this.dataState = { isPending: false, resolver: null, group: [] };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.initDataManager();\n        if (this.parent.isDestroyed || this.getModuleName() === 'foreignKey') {\n            return;\n        }\n        this.parent.on(events.rowsAdded, this.addRows, this);\n        this.parent.on(events.rowPositionChanged, this.reorderRows, this);\n        this.parent.on(events.rowsRemoved, this.removeRows, this);\n        this.parent.on(events.dataSourceModified, this.initDataManager, this);\n        this.parent.on(events.destroy, this.destroy, this);\n        this.parent.on(events.updateData, this.crudActions, this);\n        this.parent.on(events.addDeleteAction, this.getData, this);\n        this.parent.on(events.autoCol, this.refreshFilteredCols, this);\n        this.parent.on(events.columnsPrepared, this.refreshFilteredCols, this);\n    }\n    Data.prototype.reorderRows = function (e) {\n        this.dataManager.dataSource.json.splice(e.toIndex, 0, this.dataManager.dataSource.json.splice(e.fromIndex, 1)[0]);\n    };\n    Data.prototype.getModuleName = function () {\n        return 'data';\n    };\n    /**\n     * The function used to initialize dataManager and external query\n     * @return {void}\n     */\n    Data.prototype.initDataManager = function () {\n        var gObj = this.parent;\n        this.dataManager = gObj.dataSource instanceof DataManager ? gObj.dataSource :\n            (isNullOrUndefined(gObj.dataSource) ? new DataManager() : new DataManager(gObj.dataSource));\n        gObj.setProperties({ query: gObj.query instanceof Query ? gObj.query : new Query() }, true);\n    };\n    /**\n     * The function is used to generate updated Query from Grid model.\n     * @return {Query}\n     * @hidden\n     */\n    Data.prototype.generateQuery = function (skipPage) {\n        var gObj = this.parent;\n        var query = gObj.getQuery().clone();\n        if (this.parent.columnQueryMode === 'ExcludeHidden') {\n            query.select(this.parent.getColumns().filter(function (column) { return !(column.isPrimaryKey !== true && column.visible === false || column.field === undefined); }).map(function (column) { return column.field; }));\n        }\n        else if (this.parent.columnQueryMode === 'Schema') {\n            var selectQueryFields = [];\n            var columns = this.parent.columns;\n            for (var i = 0; i < columns.length; i++) {\n                selectQueryFields.push(columns[i].field);\n            }\n            query.select(selectQueryFields);\n        }\n        this.filterQuery(query);\n        this.searchQuery(query);\n        this.aggregateQuery(query);\n        this.sortQuery(query);\n        if (isGroupAdaptive(this.parent)) {\n            this.virtualGroupPageQuery(query);\n        }\n        else {\n            this.pageQuery(query, skipPage);\n        }\n        this.groupQuery(query);\n        return query;\n    };\n    Data.prototype.aggregateQuery = function (query, isForeign) {\n        this.parent.aggregates.forEach(function (row) {\n            row.columns.forEach(function (column) {\n                var types = column.type instanceof Array ? column.type : [column.type];\n                types.forEach(function (type) { return query.aggregate(type.toLowerCase(), column.field); });\n            });\n        });\n        return query;\n    };\n    Data.prototype.virtualGroupPageQuery = function (query) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        if (query.queries.length) {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i][fName] === 'onPage') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.pageQuery = function (query, skipPage) {\n        var gObj = this.parent;\n        var fName = 'fn';\n        if ((gObj.allowPaging || gObj.enableVirtualization) && skipPage !== true) {\n            gObj.pageSettings.currentPage = Math.max(1, gObj.pageSettings.currentPage);\n            if (gObj.pageSettings.pageCount <= 0) {\n                gObj.pageSettings.pageCount = 8;\n            }\n            if (gObj.pageSettings.pageSize <= 0) {\n                gObj.pageSettings.pageSize = 12;\n            }\n            if (query.queries.length) {\n                for (var i = 0; i < query.queries.length; i++) {\n                    if (query.queries[i][fName] === 'onPage') {\n                        query.queries.splice(i, 1);\n                    }\n                }\n            }\n            query.page(gObj.pageSettings.currentPage, gObj.pageSettings.pageSize);\n        }\n        return query;\n    };\n    Data.prototype.groupQuery = function (query) {\n        var gObj = this.parent;\n        if (gObj.allowGrouping && gObj.groupSettings.columns.length) {\n            var columns = gObj.groupSettings.columns;\n            for (var i = 0, len = columns.length; i < len; i++) {\n                var column = this.getColumnByField(columns[i]);\n                if (!column) {\n                    this.parent.log('initial_action', { moduleName: 'group', columnName: columns[i] });\n                }\n                var isGrpFmt = column.enableGroupByFormat;\n                var format = column.format;\n                if (isGrpFmt) {\n                    query.group(columns[i], this.formatGroupColumn.bind(this), format);\n                }\n                else {\n                    query.group(columns[i], null);\n                }\n            }\n        }\n        return query;\n    };\n    Data.prototype.sortQuery = function (query) {\n        var gObj = this.parent;\n        if ((gObj.allowSorting || gObj.allowGrouping) && gObj.sortSettings.columns.length) {\n            var columns = gObj.sortSettings.columns;\n            var sortGrp = [];\n            for (var i = columns.length - 1; i > -1; i--) {\n                var col = this.getColumnByField(columns[i].field);\n                if (col) {\n                    col.setSortDirection(columns[i].direction);\n                }\n                else {\n                    this.parent.log('initial_action', { moduleName: 'sort', columnName: columns[i].field });\n                    return query;\n                }\n                var fn = columns[i].direction;\n                if (col.sortComparer) {\n                    this.parent.log('grid_sort_comparer');\n                    fn = !this.isRemote() ? col.sortComparer.bind(col) : columns[i].direction;\n                }\n                if (gObj.groupSettings.columns.indexOf(columns[i].field) === -1) {\n                    query.sortBy(col.field, fn);\n                }\n                else {\n                    sortGrp.push({ direction: fn, field: col.field });\n                }\n            }\n            for (var i = 0, len = sortGrp.length; i < len; i++) {\n                query.sortBy(sortGrp[i].field, sortGrp[i].direction);\n            }\n        }\n        return query;\n    };\n    Data.prototype.searchQuery = function (query) {\n        var _this = this;\n        var sSettings = this.parent.searchSettings;\n        var fields = sSettings.fields.length ? sSettings.fields : this.getSearchColumnFieldNames();\n        var predicateList = [];\n        var needForeignKeySearch = false;\n        if (this.parent.searchSettings.key.length) {\n            needForeignKeySearch = this.parent.getForeignKeyColumns().some(function (col) { return fields.indexOf(col.field) > -1; });\n            if (needForeignKeySearch && !(this.dataManager.adaptor.getModulename &&\n                this.dataManager.adaptor.getModulename() === 'ODataV4Adaptor')) {\n                fields.forEach(function (columnName) {\n                    var column = _this.getColumnByField(columnName);\n                    if (column.isForeignColumn()) {\n                        predicateList = _this.fGeneratePredicate(column, predicateList);\n                    }\n                    else {\n                        predicateList.push(new Predicate(column.field, sSettings.operator, sSettings.key, sSettings.ignoreCase, sSettings.ignoreAccent));\n                    }\n                });\n                query.where(Predicate.or(predicateList));\n            }\n            else {\n                query.search(sSettings.key, fields, sSettings.operator, sSettings.ignoreCase, sSettings.ignoreAccent);\n            }\n        }\n        return query;\n    };\n    Data.prototype.filterQuery = function (query, column, skipFoerign) {\n        var gObj = this.parent;\n        var predicateList = [];\n        var fPredicate = {};\n        var actualFilter = [];\n        var foreignColumn = this.parent.getForeignKeyColumns();\n        if (gObj.allowFiltering && gObj.filterSettings.columns.length) {\n            var columns = column ? column : gObj.filterSettings.columns;\n            var colType = {};\n            for (var _i = 0, _a = gObj.getColumns(); _i < _a.length; _i++) {\n                var col = _a[_i];\n                colType[col.field] = col.filter.type ? col.filter.type : gObj.filterSettings.type;\n            }\n            var checkBoxCols = [];\n            var defaultFltrCols = [];\n            for (var _b = 0, columns_1 = columns; _b < columns_1.length; _b++) {\n                var col = columns_1[_b];\n                if (colType[col.field] === 'CheckBox' || colType[col.field] === 'Excel') {\n                    checkBoxCols.push(col);\n                }\n                else {\n                    defaultFltrCols.push(col);\n                }\n            }\n            if (checkBoxCols.length) {\n                var excelPredicate = CheckBoxFilterBase.getPredicate(checkBoxCols);\n                for (var _c = 0, _d = Object.keys(excelPredicate); _c < _d.length; _c++) {\n                    var prop = _d[_c];\n                    var col = void 0;\n                    if (this.parent.getColumnByField(prop).isForeignColumn()) {\n                        col = getColumnByForeignKeyValue(prop, foreignColumn);\n                    }\n                    if (!col) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: prop });\n                    }\n                    if (col && !skipFoerign) {\n                        predicateList = this.fGeneratePredicate(col, predicateList);\n                        actualFilter.push(col);\n                    }\n                    else {\n                        predicateList.push(excelPredicate[prop]);\n                    }\n                }\n            }\n            if (defaultFltrCols.length) {\n                for (var _e = 0, defaultFltrCols_1 = defaultFltrCols; _e < defaultFltrCols_1.length; _e++) {\n                    var col = defaultFltrCols_1[_e];\n                    col.uid = col.uid || this.parent.grabColumnByFieldFromAllCols(col.field).uid;\n                    var column_1 = this.parent.grabColumnByUidFromAllCols(col.uid);\n                    if (!column_1) {\n                        this.parent.log('initial_action', { moduleName: 'filter', columnName: col.field });\n                    }\n                    var sType = column_1.type;\n                    if (column_1.isForeignColumn() && getColumnByForeignKeyValue(col.field, foreignColumn) && !skipFoerign) {\n                        actualFilter.push(col);\n                        predicateList = this.fGeneratePredicate(column_1, predicateList);\n                    }\n                    else {\n                        if (sType !== 'date' && sType !== 'datetime') {\n                            predicateList.push(new Predicate(col.field, col.operator, col.value, !col.matchCase, this.parent.filterSettings.ignoreAccent));\n                        }\n                        else {\n                            predicateList.push(getDatePredicate(col, sType));\n                        }\n                    }\n                }\n            }\n            if (predicateList.length) {\n                query.where(Predicate.and(predicateList));\n            }\n            else {\n                this.parent.notify(events.showEmptyGrid, {});\n            }\n        }\n        return query;\n    };\n    Data.prototype.fGeneratePredicate = function (col, predicateList) {\n        var fPredicate = {};\n        if (col) {\n            this.parent.notify(events.generateQuery, { predicate: fPredicate, column: col });\n            if (fPredicate.predicate.predicates.length) {\n                predicateList.push(fPredicate.predicate);\n            }\n        }\n        return predicateList;\n    };\n    /**\n     * The function is used to get dataManager promise by executing given Query.\n     * @param  {Query} query - Defines the query which will execute along with data processing.\n     * @return {Promise<Object>}\n     * @hidden\n     */\n    Data.prototype.getData = function (args, query) {\n        var _this = this;\n        if (args === void 0) { args = { requestType: '' }; }\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ?\n            args.foreignKeyData : this.parent.getPrimaryKeyFieldNames());\n        this.parent.log('datasource_syntax_mismatch', { dataState: this.parent });\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            var def = this.eventPromise(args, query, key);\n            return def.promise;\n        }\n        else {\n            var crud = void 0;\n            switch (args.requestType) {\n                case 'delete':\n                    query = query ? query : this.generateQuery();\n                    var len = Object.keys(args.data).length;\n                    if (len === 1) {\n                        crud = this.dataManager.remove(key, args.data[0], query.fromTable, query);\n                    }\n                    else {\n                        var changes = {\n                            addedRecords: [],\n                            deletedRecords: [],\n                            changedRecords: []\n                        };\n                        changes.deletedRecords = args.data;\n                        crud = this.dataManager.saveChanges(changes, key, query.fromTable, query.requiresCount());\n                    }\n                    break;\n                case 'save':\n                    if (isBlazor() && this.parent.isServerRendered) {\n                        this.parent.notify('offset', args);\n                    }\n                    query = query ? query : this.generateQuery();\n                    args.index = isNullOrUndefined(args.index) ? 0 : args.index;\n                    crud = this.dataManager.insert(args.data, query.fromTable, query, args.index);\n                    break;\n            }\n            var promise = 'promise';\n            args[promise] = crud;\n            if (crud && !Array.isArray(crud) && !crud.hasOwnProperty('deletedRecords')) {\n                return crud.then(function (result) {\n                    return _this.insert(query, args);\n                });\n            }\n            else {\n                return this.insert(query, args);\n            }\n        }\n    };\n    Data.prototype.insert = function (query, args) {\n        if (args.requestType === 'save') {\n            this.parent.notify(events.recordAdded, args);\n        }\n        return this.executeQuery(query);\n    };\n    Data.prototype.executeQuery = function (query) {\n        var _this = this;\n        if (this.dataManager.ready) {\n            var deferred_1 = new Deferred();\n            var ready = this.dataManager.ready;\n            ready.then(function (e) {\n                _this.dataManager.executeQuery(query).then(function (result) {\n                    deferred_1.resolve(result);\n                });\n            }).catch(function (e) {\n                deferred_1.reject(e);\n            });\n            return deferred_1.promise;\n        }\n        else {\n            return this.dataManager.executeQuery(query);\n        }\n    };\n    Data.prototype.formatGroupColumn = function (value, field) {\n        var gObj = this.parent;\n        var serviceLocator = this.serviceLocator;\n        var column = this.getColumnByField(field);\n        var date = value;\n        if (!column.type) {\n            column.type = date.getDay ? (date.getHours() > 0 || date.getMinutes() > 0 ||\n                date.getSeconds() > 0 || date.getMilliseconds() > 0 ? 'datetime' : 'date') : typeof (value);\n        }\n        if (isNullOrUndefined(column.getFormatter())) {\n            setFormatter(serviceLocator, column);\n        }\n        var formatVal = ValueFormatter.prototype.toView(value, column.getFormatter());\n        return formatVal;\n    };\n    Data.prototype.crudActions = function (args) {\n        var query = this.generateQuery();\n        var promise = null;\n        var pr = 'promise';\n        var key = this.getKey(args.foreignKeyData &&\n            Object.keys(args.foreignKeyData).length ? args.foreignKeyData :\n            this.parent.getPrimaryKeyFieldNames());\n        if (this.parent.dataSource && 'result' in this.parent.dataSource) {\n            this.eventPromise(args, query, key);\n        }\n        switch (args.requestType) {\n            case 'save':\n                if (isBlazor() && this.parent.isServerRendered) {\n                    this.parent.notify('offset', args);\n                }\n                promise = this.dataManager.update(key, args.data, query.fromTable, query, args.previousData);\n                break;\n        }\n        args[pr] = promise ? promise : args[pr];\n        this.parent.notify(events.crudAction, args);\n    };\n    /** @hidden */\n    Data.prototype.saveChanges = function (changes, key, original, query) {\n        if (query === void 0) { query = this.generateQuery(); }\n        query.requiresCount();\n        if ('result' in this.parent.dataSource) {\n            var state = void 0;\n            state = this.getStateEventArgument(query);\n            var deff = new Deferred();\n            var args = {\n                requestType: 'batchsave', changes: changes, key: key, query: query,\n                endEdit: deff.resolve\n            };\n            this.setState({ isPending: true, resolver: deff.resolve });\n            this.parent.trigger(events.dataSourceChanged, args);\n            return deff.promise;\n        }\n        else {\n            var changedRecords = 'changedRecords';\n            var addedRecords = 'addedRecords';\n            var data = 'data';\n            if (isBlazor() && this.parent.isServerRendered) {\n                for (var i = 0; i < changes[changedRecords].length; i++) {\n                    var args = { data: changes[changedRecords][i] };\n                    this.parent.notify('offset', args);\n                    changes[changedRecords][i] = args[data];\n                }\n                for (var i = 0; i < changes[addedRecords].length; i++) {\n                    var args = { data: changes[addedRecords][i] };\n                    this.parent.notify('offset', args);\n                    changes[addedRecords][i] = args[data];\n                }\n            }\n            var promise = this.dataManager.saveChanges(changes, key, query.fromTable, query, original);\n            return promise;\n        }\n    };\n    Data.prototype.getKey = function (keys) {\n        if (keys && keys.length) {\n            return keys[0];\n        }\n        return undefined;\n    };\n    /** @hidden */\n    Data.prototype.isRemote = function () {\n        return this.dataManager.dataSource.offline !== true && this.dataManager.dataSource.url !== undefined &&\n            this.dataManager.dataSource.url !== '';\n    };\n    Data.prototype.addRows = function (e) {\n        for (var i = e.records.length; i > 0; i--) {\n            this.dataManager.dataSource.json.splice(e.toIndex, 0, e.records[i - 1]);\n        }\n    };\n    Data.prototype.removeRows = function (e) {\n        var json = this.dataManager.dataSource.json;\n        this.dataManager.dataSource.json = json.filter(function (value, index) { return e.records.indexOf(value) === -1; });\n    };\n    Data.prototype.getColumnByField = function (field) {\n        var col;\n        return (this.parent.columnModel).some(function (column) {\n            col = column;\n            return column.field === field;\n        }) && col;\n    };\n    Data.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowsAdded, this.addRows);\n        this.parent.off(events.rowsRemoved, this.removeRows);\n        this.parent.off(events.dataSourceModified, this.initDataManager);\n        this.parent.off(events.destroy, this.destroy);\n        this.parent.off(events.updateData, this.crudActions);\n        this.parent.off(events.addDeleteAction, this.getData);\n        this.parent.off(events.autoCol, this.refreshFilteredCols);\n        this.parent.off(events.columnsPrepared, this.refreshFilteredCols);\n    };\n    Data.prototype.getState = function () {\n        return this.dataState;\n    };\n    Data.prototype.setState = function (state) {\n        return this.dataState = state;\n    };\n    Data.prototype.getStateEventArgument = function (query) {\n        var adaptr = new UrlAdaptor();\n        var dm = new DataManager({ url: '', adaptor: new UrlAdaptor });\n        var state = adaptr.processQuery(dm, query);\n        var data = JSON.parse(state.data);\n        return extend(data, state.pvtData);\n    };\n    Data.prototype.eventPromise = function (args, query, key) {\n        var _this = this;\n        var state;\n        var dataArgs = args;\n        state = this.getStateEventArgument(query);\n        var def = new Deferred();\n        var deff = new Deferred();\n        if (args.requestType !== undefined && this.dataState.isDataChanged !== false) {\n            state.action = args;\n            if (args.requestType === 'save' || args.requestType === 'delete') {\n                var editArgs_1 = args;\n                editArgs_1.key = key;\n                var promise = 'promise';\n                editArgs_1[promise] = deff.promise;\n                editArgs_1.state = state;\n                this.setState({ isPending: true, resolver: deff.resolve });\n                dataArgs.endEdit = deff.resolve;\n                dataArgs.cancelEdit = deff.reject;\n                this.parent.trigger(events.dataSourceChanged, editArgs_1);\n                deff.promise.then(function (e) {\n                    _this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                    if (editArgs_1.requestType === 'save') {\n                        _this.parent.notify(events.recordAdded, editArgs_1);\n                    }\n                    _this.parent.trigger(events.dataStateChange, state);\n                })\n                    .catch(function () { return void 0; });\n            }\n            else {\n                this.setState({ isPending: true, resolver: def.resolve, group: state.group, aggregates: state.aggregates });\n                this.parent.trigger(events.dataStateChange, state);\n            }\n        }\n        else {\n            this.setState({});\n            def.resolve(this.parent.dataSource);\n        }\n        return def;\n    };\n    /**\n     * Gets the columns where searching needs to be performed from the Grid.\n     * @return {string[]}\n     */\n    Data.prototype.getSearchColumnFieldNames = function () {\n        var colFieldNames = [];\n        var columns = this.parent.getColumns();\n        for (var _i = 0, columns_2 = columns; _i < columns_2.length; _i++) {\n            var col = columns_2[_i];\n            if (col.allowSearching && !isNullOrUndefined(col.field)) {\n                colFieldNames.push(col.field);\n            }\n        }\n        return colFieldNames;\n    };\n    Data.prototype.refreshFilteredCols = function () {\n        if (this.parent.allowFiltering && this.parent.filterSettings.columns.length) {\n            refreshFilteredColsUid(this.parent, this.parent.filterSettings.columns);\n        }\n    };\n    return Data;\n}());\nexport { Data };\n"]},"metadata":{},"sourceType":"module"}