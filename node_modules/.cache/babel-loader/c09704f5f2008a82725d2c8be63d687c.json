{"ast":null,"code":"import { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\n/**\n * `CommandColumn` used to handle the command column actions.\n * @hidden\n */\n\nvar CommandColumn =\n/** @class */\nfunction () {\n  function CommandColumn(parent, locator) {\n    this.parent = parent;\n    this.locator = locator;\n    this.initiateRender();\n    this.addEventListener();\n  }\n\n  CommandColumn.prototype.initiateRender = function () {\n    var cellFac = this.locator.getService('cellRendererFactory');\n    cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n  };\n\n  CommandColumn.prototype.commandClickHandler = function (e) {\n    var gObj = this.parent;\n    var gID = gObj.element.id;\n    var target = closest(e.target, 'button');\n\n    if (!target || !closest(e.target, '.e-unboundcell')) {\n      return;\n    }\n\n    var buttonObj = target.ej2_instances[0];\n    var type = buttonObj.commandType;\n    var uid = target.getAttribute('data-uid');\n    var commandColumn;\n    var row = gObj.getRowObjectFromUID(closest(target, '.e-row').getAttribute('data-uid'));\n    this.parent.columnModel.forEach(function (col) {\n      if (col.commands) {\n        col.commands.forEach(function (commandCol) {\n          var idInString = 'uid';\n          var typeInString = 'type';\n\n          if (isBlazor() && !gObj.isJsComponent && commandCol[idInString] === uid) {\n            commandColumn = commandCol;\n            type = commandCol[typeInString];\n          } else if (commandCol[idInString] === uid && commandCol[typeInString] === type) {\n            commandColumn = commandCol;\n          }\n        });\n      }\n    });\n    var args = {\n      cancel: false,\n      target: target,\n      commandColumn: commandColumn,\n      rowData: isNullOrUndefined(row) ? undefined : row.data\n    };\n    this.parent.trigger(commandClick, args, function (commandclickargs) {\n      if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n        return;\n      }\n\n      switch (type) {\n        case 'Edit':\n          gObj.editModule.endEdit();\n          gObj.editModule.startEdit(closest(target, 'tr'));\n          break;\n\n        case 'Cancel':\n          gObj.editModule.closeEdit();\n          break;\n\n        case 'Save':\n          gObj.editModule.endEdit();\n          break;\n\n        case 'Delete':\n          if (gObj.editSettings.mode !== 'Batch') {\n            gObj.editModule.endEdit();\n          }\n\n          gObj.clearSelection(); //for toogle issue when dbl click\n\n          gObj.selectRow(parseInt(closest(target, 'tr').getAttribute('aria-rowindex'), 10), false);\n          gObj.editModule.deleteRecord();\n          break;\n      }\n    });\n  };\n  /**\n   * For internal use only - Get the module name.\n   */\n\n\n  CommandColumn.prototype.getModuleName = function () {\n    return 'commandColumn';\n  };\n  /**\n   * To destroy CommandColumn.\n   * @method destroy\n   * @return {void}\n   */\n\n\n  CommandColumn.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.removeEventListener();\n  };\n\n  CommandColumn.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(click, this.commandClickHandler);\n    this.parent.off(keyPressed, this.keyPressHandler);\n    this.parent.off(initialEnd, this.load);\n  };\n\n  CommandColumn.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(click, this.commandClickHandler, this);\n    this.parent.on(keyPressed, this.keyPressHandler, this);\n    this.parent.on(initialEnd, this.load, this);\n  };\n\n  CommandColumn.prototype.keyPressHandler = function (e) {\n    if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n      this.commandClickHandler(e);\n      e.preventDefault();\n    }\n  };\n\n  CommandColumn.prototype.load = function () {\n    if (isBlazor() && !this.parent.isJsComponent) {\n      return;\n    }\n\n    var uid = 'uid';\n    this.parent.columnModel.forEach(function (col, indexs) {\n      if (col.commands) {\n        col.commands.forEach(function (commandCol) {\n          commandCol[uid] = getUid('gridcommand');\n        });\n      }\n    });\n  };\n\n  return CommandColumn;\n}();\n\nexport { CommandColumn };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/actions/command-column.js"],"names":["closest","isNullOrUndefined","isBlazor","click","keyPressed","commandClick","initialEnd","CellType","CommandColumnRenderer","getUid","CommandColumn","parent","locator","initiateRender","addEventListener","prototype","cellFac","getService","addCellRenderer","commandClickHandler","e","gObj","gID","element","id","target","buttonObj","ej2_instances","type","commandType","uid","getAttribute","commandColumn","row","getRowObjectFromUID","columnModel","forEach","col","commands","commandCol","idInString","typeInString","isJsComponent","args","cancel","rowData","undefined","data","trigger","commandclickargs","disabled","editModule","endEdit","startEdit","closeEdit","editSettings","mode","clearSelection","selectRow","parseInt","deleteRecord","getModuleName","destroy","isDestroyed","removeEventListener","off","keyPressHandler","load","on","action","preventDefault","indexs"],"mappings":"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","sourcesContent":["import { closest, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { click, keyPressed, commandClick, initialEnd } from '../base/constant';\nimport { CellType } from '../base/enum';\nimport { CommandColumnRenderer } from '../renderer/command-column-renderer';\nimport { getUid } from '../base/util';\n/**\n * `CommandColumn` used to handle the command column actions.\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent, locator) {\n        this.parent = parent;\n        this.locator = locator;\n        this.initiateRender();\n        this.addEventListener();\n    }\n    CommandColumn.prototype.initiateRender = function () {\n        var cellFac = this.locator.getService('cellRendererFactory');\n        cellFac.addCellRenderer(CellType.CommandColumn, new CommandColumnRenderer(this.parent, this.locator));\n    };\n    CommandColumn.prototype.commandClickHandler = function (e) {\n        var gObj = this.parent;\n        var gID = gObj.element.id;\n        var target = closest(e.target, 'button');\n        if (!target || !closest(e.target, '.e-unboundcell')) {\n            return;\n        }\n        var buttonObj = target.ej2_instances[0];\n        var type = buttonObj.commandType;\n        var uid = target.getAttribute('data-uid');\n        var commandColumn;\n        var row = gObj.getRowObjectFromUID(closest(target, '.e-row').getAttribute('data-uid'));\n        this.parent.columnModel.forEach(function (col) {\n            if (col.commands) {\n                col.commands.forEach(function (commandCol) {\n                    var idInString = 'uid';\n                    var typeInString = 'type';\n                    if (isBlazor() && !gObj.isJsComponent && commandCol[idInString] === uid) {\n                        commandColumn = commandCol;\n                        type = commandCol[typeInString];\n                    }\n                    else if (commandCol[idInString] === uid && commandCol[typeInString] === type) {\n                        commandColumn = commandCol;\n                    }\n                });\n            }\n        });\n        var args = {\n            cancel: false,\n            target: target,\n            commandColumn: commandColumn,\n            rowData: isNullOrUndefined(row) ? undefined : row.data\n        };\n        this.parent.trigger(commandClick, args, function (commandclickargs) {\n            if (buttonObj.disabled || !gObj.editModule || commandclickargs.cancel) {\n                return;\n            }\n            switch (type) {\n                case 'Edit':\n                    gObj.editModule.endEdit();\n                    gObj.editModule.startEdit(closest(target, 'tr'));\n                    break;\n                case 'Cancel':\n                    gObj.editModule.closeEdit();\n                    break;\n                case 'Save':\n                    gObj.editModule.endEdit();\n                    break;\n                case 'Delete':\n                    if (gObj.editSettings.mode !== 'Batch') {\n                        gObj.editModule.endEdit();\n                    }\n                    gObj.clearSelection();\n                    //for toogle issue when dbl click\n                    gObj.selectRow(parseInt(closest(target, 'tr').getAttribute('aria-rowindex'), 10), false);\n                    gObj.editModule.deleteRecord();\n                    break;\n            }\n        });\n    };\n    /**\n     * For internal use only - Get the module name.\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * To destroy CommandColumn.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.removeEventListener();\n    };\n    CommandColumn.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(click, this.commandClickHandler);\n        this.parent.off(keyPressed, this.keyPressHandler);\n        this.parent.off(initialEnd, this.load);\n    };\n    CommandColumn.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(click, this.commandClickHandler, this);\n        this.parent.on(keyPressed, this.keyPressHandler, this);\n        this.parent.on(initialEnd, this.load, this);\n    };\n    CommandColumn.prototype.keyPressHandler = function (e) {\n        if (e.action === 'enter' && closest(e.target, '.e-unboundcelldiv')) {\n            this.commandClickHandler(e);\n            e.preventDefault();\n        }\n    };\n    CommandColumn.prototype.load = function () {\n        if (isBlazor() && !this.parent.isJsComponent) {\n            return;\n        }\n        var uid = 'uid';\n        this.parent.columnModel.forEach(function (col, indexs) {\n            if (col.commands) {\n                col.commands.forEach(function (commandCol) {\n                    commandCol[uid] = getUid('gridcommand');\n                });\n            }\n        });\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n"]},"metadata":{},"sourceType":"module"}