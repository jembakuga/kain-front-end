{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\n/**\n * Represents the field name and direction of sort column.\n */\n\nvar SortDescriptor =\n/** @class */\nfunction (_super) {\n  __extends(SortDescriptor, _super);\n\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n\n  return SortDescriptor;\n}(ChildProperty);\n\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\n\nvar SortSettings =\n/** @class */\nfunction (_super) {\n  __extends(SortSettings, _super);\n\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n\n  return SortSettings;\n}(ChildProperty);\n\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\n\nvar Predicate =\n/** @class */\nfunction (_super) {\n  __extends(Predicate, _super);\n\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n\n  return Predicate;\n}(ChildProperty);\n\nexport { Predicate };\n/**\n * Configures the filtering behavior of the Grid.\n */\n\nvar FilterSettings =\n/** @class */\nfunction (_super) {\n  __extends(FilterSettings, _super);\n\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n\n  return FilterSettings;\n}(ChildProperty);\n\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\n\nvar SearchSettings =\n/** @class */\nfunction (_super) {\n  __extends(SearchSettings, _super);\n\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n\n  return SearchSettings;\n}(ChildProperty);\n\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\n\nvar RowDropSettings =\n/** @class */\nfunction (_super) {\n  __extends(RowDropSettings, _super);\n\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n\n  return RowDropSettings;\n}(ChildProperty);\n\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\n\nvar TextWrapSettings =\n/** @class */\nfunction (_super) {\n  __extends(TextWrapSettings, _super);\n\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n\n  return TextWrapSettings;\n}(ChildProperty);\n\nexport { TextWrapSettings };\n/**\n * Configures the group behavior of the Grid.\n */\n\nvar GroupSettings =\n/** @class */\nfunction (_super) {\n  __extends(GroupSettings, _super);\n\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n\n  return GroupSettings;\n}(ChildProperty);\n\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\n\nvar EditSettings =\n/** @class */\nfunction (_super) {\n  __extends(EditSettings, _super);\n\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n\n  return EditSettings;\n}(ChildProperty);\n\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   * @hidden\n   */\n\n\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.media = {};\n    /** @hidden */\n\n    _this.freezeRefresh = Component.prototype.refresh;\n    /** @hidden */\n\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n\n    _this.vRows = [];\n    /** @hidden */\n\n    _this.vcRows = [];\n    /** @hidden */\n\n    _this.vGroupOffsets = {};\n    /** @hidden */\n\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n\n    _this.currentViewData = [];\n    /** @hidden */\n\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n\n    _this.prevPageMoving = false;\n    /** @hidden */\n\n    _this.pageTemplateChange = false;\n    /** @hidden */\n\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = []; // enable/disable logger for MVC & Core\n\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   * @return {string}\n   * @hidden\n   */\n\n  Grid.prototype.getPersistData = function () {\n    var _this = this;\n\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template', 'commandTemplate', 'commands', 'dataSource', 'headerText'];\n    keyEntity.forEach(function (value) {\n      var currentObject = _this[value];\n\n      for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    });\n    this.pageSettings.template = undefined;\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   * @return {ModuleDeclaration[]}\n   * @hidden\n   */\n\n\n  Grid.prototype.requiredModules = function () {\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.getFrozenColumns() || this.frozenRows) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n\n    if (isBlazor()) {\n      modules.push({\n        member: 'blazor',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   * @private\n   */\n\n\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n\n  Grid.prototype.initProperties = function () {\n    /* tslint:disable */\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      this.isServerRendered = false; //NEW\n    }\n\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.freezeRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No Matches Found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No Matches Found',\n      ClearFilter: 'Clear Filter',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n    /* tslint:enable */\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   * @private\n   */\n\n\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n\n    if (isBlazor()) {\n      this.renderComplete();\n    }\n\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization);\n\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.getMediaColumns();\n    }\n\n    setColumnIndex(this.columns);\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n\n    if (isBlazor() && this.isServerRendered) {\n      gridObserver.notify(events.componentRendered, {\n        id: this.element.id,\n        grid: this\n      });\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   */\n\n\n  Grid.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * Manually showed spinner needs to hide by `hideSpinnner`.\n   */\n\n\n  Grid.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance.push(this.mediaQueryUpdate.bind(this, index));\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n\n    if (this.aggregates.length && this.element.scrollHeight > this.height) {\n      var footerContent = this.element.querySelector('.e-gridfooter');\n      addClass([footerContent], ['e-footerpadding']);\n    }\n\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n      this.refreshHeader();\n    }\n  };\n\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[i]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   * @private\n   */\n\n\n  Grid.prototype.eventInitializer = function () {//eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   * @method destroy\n   * @return {void}\n   */\n\n\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.e-gridheader') && gridElement.querySelector('.e-gridcontent') ? true : false;\n\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n\n    this.toolTipObj.destroy();\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n  };\n\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @hidden\n   */\n\n  /* tslint:disable-next-line:max-line-length */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.log('module_missing');\n    var properties = Object.keys(newProp);\n\n    if (properties.indexOf('columns') > -1) {\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n\n          break;\n\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          break;\n\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n\n          break;\n\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n\n        case 'query':\n          requireRefresh = true;\n          break;\n\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.frozenColumns || this.frozenRows) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  /* tslint:disable */\n\n\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n\n        this.notify(events.rtlUpdated, {});\n        break;\n\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n\n      case 'dataSource':\n        var pending_1 = this.getDataModule().getState();\n\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult_1 = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          (pending_1.group || []).forEach(function (name) {\n            gResult_1 = DataUtil.group(gResult_1, name, pending_1.aggregates || []);\n          });\n          this.dataSource = {\n            result: gResult_1,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n          }\n        }\n\n        this.scrollRefresh();\n        break;\n\n      case 'enableHover':\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n\n        this.isSelectedRowIndexUpdating = false;\n        break;\n    }\n  };\n\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n\n        _this.off(events.contentReady, fn_1);\n      };\n\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n\n    var filterSettings = 'filterSettings';\n\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n    var cols = this.getColumns();\n\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n\n  Grid.prototype.updateFrozenColumns = function () {\n    var cols = this.columnModel;\n    var count = 0;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].isFrozen) {\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      }\n    }\n  };\n\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n    return columns;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getVisibleColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   * Gets the header div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   * @param  {Element} element - Specifies the Grid header.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   * @param  {Element} element - Specifies the Grid content table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   * @param  {Element} element - Specifies the Grid content.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   * @param  {Element} element - Specifies the Grid header table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContent = function () {\n    if (isNullOrUndefined(this.footerElement)) {\n      this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    }\n\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContentTable = function () {\n    if (isNullOrUndefined(this.footerElement)) {\n      this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    }\n\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   * @param  {Element} element - Specifies the Grid pager.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Get a row information based on cell\n   * @param {Element}\n   * @return RowInfo\n   */\n\n\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand'))) && !this.isEdit) {\n      var cell = closest(ele, '.e-rowcell');\n\n      if (!cell) {\n        return args;\n      }\n\n      var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.e-row');\n        var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n        var frzCols = this.getFrozenColumns();\n        var isMovable = frzCols ? cellIndex >= frzCols : false;\n        var rows = isMovable ? this.contentModule.getMovableRows() : this.contentModule.getRows();\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[isMovable ? cellIndex - frzCols : cellIndex].column;\n        }\n\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getDataRows = function () {\n    var rows = [].slice.call(this.getContentTable().querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderTable().querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n\n    return fRows;\n  };\n\n  Grid.prototype.generateDataRows = function (rows) {\n    var dRows = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {\n        dRows.push(rows[i]);\n      }\n    }\n\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableDataRows = function () {\n    var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getFrozenDataRows = function () {\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   */\n\n\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var fieldIdx;\n    var col;\n    var tr;\n    var mTr;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var selectedRow = {};\n    var movableSelectedRow = {};\n    var rowObjects = this.contentModule.getRows();\n    var movableRowObjects = this.contentModule.getMovableRows();\n    fieldIdx = this.getColumnIndexByField(field);\n\n    if (this.groupSettings.columns.length) {\n      fieldIdx = fieldIdx + this.groupSettings.columns.length;\n    }\n\n    if (this.childGrid || this.detailTemplate) {\n      fieldIdx++;\n    }\n\n    if (this.allowRowDragAndDrop) {\n      fieldIdx++;\n    }\n\n    col = this.getColumnByField(field);\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    movableSelectedRow = movableRowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n    mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var td = !isNullOrUndefined(tr.childNodes[fieldIdx]) ? tr.childNodes[fieldIdx] : mTr.childNodes[fieldIdx - this.frozenColumns];\n\n      if (!isNullOrUndefined(td)) {\n        var sRow = selectedRow[cells][fieldIdx];\n        var mRow = void 0;\n\n        if (this.frozenColumns) {\n          mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n        }\n\n        cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n          movableSelectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   *  @param {Object} rowData - To update new data for the particular row.\n   */\n\n\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rwdata = 'data';\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var selectedRow;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getDataRows()[rowIndex] && this.getDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex];\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - this.getFrozenColumns()];\n  };\n  /**\n   * Gets a column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowObjectFromUID = function (uid) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n\n    if (this.getFrozenColumns()) {\n      if (!row) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n        return row;\n      }\n    }\n\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n\n    return row;\n  };\n\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableRowsObject = function () {\n    return this.contentModule.getMovableRows();\n  };\n  /**\n   * Gets a column header by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    return this.getColumnHeaderByUid(this.getColumnByField(field).uid);\n  };\n  /**\n   * Gets a column header by UID.\n   * @param  {string} field - Specifies the column uid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    return this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']').parentElement;\n  };\n  /**\n   * @hidden\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n      if (item.uid === uid) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {string}\n   */\n\n\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item.uid;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets TH index by column uid value.\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n\n    if (this.isDetail()) {\n      index++;\n    }\n\n    if (this.allowRowDragAndDrop && isNullOrUndefined(this.rowDropSettings.targetID) && this.allowResizing) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n\n\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   * @return {Function}\n   * @private\n   */\n\n\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   */\n\n\n  Grid.prototype.refresh = function () {\n    this.headerModule.refreshUI();\n    this.updateStackedFilter();\n    this.renderModule.refresh();\n  };\n  /**\n   * Refreshes the Grid header.\n   */\n\n\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the data module.\n   * @return {Data}\n   */\n\n\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var col = this.columns;\n\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (col[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n\n    return visibleFrozenColumns;\n  };\n\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n      } else {\n        if (cols[i].isFrozen && cols[i].visible) {\n          cnt++;\n        }\n      }\n    }\n\n    return cnt;\n  };\n\n  Grid.prototype.getFrozenCount = function (cols, cnt) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt);\n      } else {\n        if (cols[i].isFrozen) {\n          cnt++;\n        }\n      }\n    }\n\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @return {void}\n   */\n\n\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   * @param  {string} message - Defines the message to update.\n   * @return {void}\n   */\n\n\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @return {void}\n   */\n\n\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   * @param {string} field - Defines the column field name to remove sort.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @return {void}\n   */\n\n\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearFiltering = function () {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering();\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   * @param  {string} searchString - Defines the key.\n   * @return {void}\n   */\n\n\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   * @return {void}\n   */\n\n\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   */\n\n\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * @return {void}\n   */\n\n\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   */\n\n\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   */\n\n\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   */\n\n\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   */\n\n\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   */\n\n\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   */\n\n\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   */\n\n\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   */\n\n\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   * @return {Object}\n   */\n\n\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @return {void}\n   */\n\n\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   */\n\n\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n    var perPixel = indentWidth / 30;\n    var i = 0;\n\n    var applyWidth = function (index, width) {\n      headerCol[index].style.width = width + 'px';\n      contentCol[index].style.width = width + 'px';\n\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n\n    if (this.enableColumnVirtualization || this.isAutoGen) {\n      indentWidth = 30;\n    }\n\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshDataSource = function (e, args) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @return {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n\n\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n\n  Grid.prototype.processModel = function () {\n    var _this = this;\n\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending'\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n\n    if (!gCols.length) {\n      sCols.forEach(function (col) {\n        _this.sortedColumns.push(col.field);\n      });\n    }\n\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n\n    this.initForeignColumn();\n  };\n\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n\n    this.enableBoxSelection();\n  };\n\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: 'e-content',\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n\n    this.updateResizeLines();\n  };\n\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: ''\n    }, this.element);\n  };\n\n  Grid.prototype.getTooltipStatus = function (element) {\n    var width;\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerDivTag = 'e-gridheader';\n    var contentDivTag = 'e-gridcontent';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var td = element;\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n\n          this.prevElement = element;\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n\n    this.hoverFrozenRows(e);\n  };\n\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.getFrozenColumns()) {\n      var row = parentsUntil(e.target, 'e-row');\n\n      if (this.element.querySelectorAll('.e-frozenhover').length && e.type === 'mouseout') {\n        this.element.querySelectorAll('.e-frozenhover').forEach(function (row) {\n          return row.classList.remove('e-frozenhover');\n        });\n      } else if (row) {\n        this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute('aria-rowindex') + '\"]').forEach(function (row) {\n          return row.classList.add('e-frozenhover');\n        });\n      }\n    }\n  };\n\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   * @hidden\n   */\n\n\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr');\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   * @hidden\n   */\n\n\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   * @hidden\n   */\n\n\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n    this.on(events.contentReady, this.blazorTemplate, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n\n  Grid.prototype.blazorTemplate = function () {\n    if (isBlazor()) {\n      if (this.pageSettings.template) {\n        updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n      }\n\n      for (var i = 0; i < this.columnModel.length; i++) {\n        if (this.columnModel[i].template) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n        }\n\n        if (this.columnModel[i].headerTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n          var fieldName = this.columnModel[i].field;\n          var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n          var filteredColumns = this.filterSettings.columns;\n\n          for (var k = 0; k < filteredColumns.length; k++) {\n            if (fieldName == filteredColumns[k].field) {\n              blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n            }\n          }\n\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n        }\n      }\n\n      if (this.groupSettings.captionTemplate) {\n        updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n      }\n\n      var guid = 'guid';\n\n      for (var k = 0; k < this.aggregates.length; k++) {\n        for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n          if (this.aggregates[k].columns[j].footerTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupFooterTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get current visible data of grid.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length ? this.currentViewData.records : this.currentViewData;\n  };\n\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop) {\n      e.preventDefault();\n    }\n\n    this.notify(events.click, e);\n  };\n\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, 'e-row');\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, 'e-rowcell') && parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell'));\n  };\n\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n\n    this.notify(events.dblclick, e);\n  };\n\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch') {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n\n    this.keyPress = false;\n  };\n\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n\n    if (gridElement && gridElement.id !== this.element.id) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mergePersistGridData = function () {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n\n    if (!(isNullOrUndefined(data) || data === '')) {\n      var dataObj = JSON.parse(data);\n\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            setColumnIndex(this[key]);\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var _this = this;\n\n    storedColumn.forEach(function (col, index, arr) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === col.index;\n      })[0];\n\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          _this.mergeColumns(col.columns, localCol.columns);\n\n          arr[index] = extend(localCol, col, true);\n        } else {\n          if (isBlazor()) {\n            var guid = 'guid';\n            col[guid] = localCol[guid];\n          }\n\n          arr[index] = extend(localCol, col, true);\n        }\n      }\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger(\"keyPressed\", presskey);\n\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        this.focusModule.focusHeader();\n        this.focusModule.addOutline();\n      }\n\n      if (e.keyCode === 87) {\n        //alt w\n        this.focusModule.focusContent();\n        this.focusModule.addOutline();\n      }\n    }\n  };\n\n  Grid.prototype.keyActionHandler = function (e) {\n    this.keyPress = e.action !== 'space';\n\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    }\n\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   */\n\n\n  Grid.prototype.refreshColumns = function () {\n    var fCnt = this.getContent().querySelector('.e-frozencontent');\n\n    if (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n\n      if (this.getFrozenColumns()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n        remove(mTbl.querySelector('colgroup'));\n        var colGroup = this.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      this.headerModule.getMovableHeader().scrollLeft = this.contentModule.getMovableContent().scrollLeft;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  /* tslint:disable-next-line:no-any */\n  workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.csvExport = function (excelExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n   * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.pdfExport = function (pdfExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, pdfDoc, isBlob) {\n    if (isBlazor()) {\n      this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n      return null;\n    }\n\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   * @param  {string} columnName - Defines the column name to group.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n  * Collapses all the grouped rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @return {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n\n  /**\n   * Clears all the grouped columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * @return {void}\n   */\n\n\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   * @param  {number} X - Defines the X axis.\n   * @param  {number} Y - Defines the Y axis.\n   * @return {void}\n   */\n\n\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n\n    var refresh = function () {\n      _this.scrollModule.refresh();\n\n      _this.off(events.contentReady, refresh);\n    };\n\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @return {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n\n  /**\n   * Collapses all the detail rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @return {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n\n  /**\n  * Expands all the detail rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   */\n  //tslint:disable-next-line:no-any\n\n\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @hidden\n   * @private\n   */\n\n\n  Grid.prototype.log = function (type, args) {\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.e-content');\n    var cTable = content.querySelector('.e-movablecontent') ? content.querySelector('.e-movablecontent') : content;\n    var fTable = content.querySelector('.e-frozencontent') ? content.querySelector('.e-frozencontent') : content;\n\n    if (cTable.scrollHeight <= cTable.clientHeight && fTable.scrollHeight <= fTable.clientHeight) {\n      this.scrollModule.removePadding();\n      cTable.style.overflowY = 'auto';\n    }\n\n    if (this.frozenColumns && cTable.scrollWidth <= cTable.clientWidth) {\n      cTable.style.overflowX = 'auto';\n      cTable.style.overflowY = 'auto';\n      this.notify(events.frozenHeight, 0);\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   * @param  {string} value - Defines the primary key value.\n   * @param  {Object} value - Defines the row data.\n   */\n\n\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n\n    for (var i = 0; i < this.getRowsObject().length; i++) {\n      if (this.getRowsObject()[i].data[pkName] === value) {\n        return this.getRowsObject()[i].index;\n      }\n    }\n\n    return -1;\n  };\n\n  ;\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    this.columnModel.forEach(function (gCol) {\n      if (field === gCol.field) {\n        column = gCol;\n      }\n    });\n    return column;\n  };\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    this.columnModel.forEach(function (gCol) {\n      if (uid === gCol.uid) {\n        column = gCol;\n      }\n    });\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   * @return {Object[] | Promise<Object>}\n   */\n\n\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n\n    return [];\n  };\n\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.e-movablecontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.e-frozencontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-movableheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozenheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n\n    if (this.getFrozenColumns()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n\n    return rowEle;\n  };\n  /**\n  * Gets the hidden columns from the Grid.\n  * @return {Column[]}\n  * @blazorType List<GridColumn>\n  */\n\n\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n\n  var Grid_1;\n\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","ChildProperty","Browser","closest","extend","isNullOrUndefined","setValue","getValue","isBlazor","blazorTemplates","addClass","removeClass","append","remove","updateBlazorTemplate","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","gridObserver","SortDescriptor","_super","apply","SortSettings","Predicate","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","media","freezeRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","ignoreOnColumn","forEach","value","currentObject","_i","_a","val","template","undefined","pagerTemplate","addOnPersist","requiredModules","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","isServerRendered","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","renderComplete","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","componentRendered","id","grid","type","getHeaderContent","querySelectorAll","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","scrollHeight","height","footerContent","querySelector","checkboxColumn","filter","checkboxMode","refreshHeader","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","unwireEvents","destroyDependentModules","toolTipObj","innerHTML","keyboardModule","focusModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","checkCursor","requestType","properties","keys","indexOf","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","extendedPropertyChange","frozenColumns","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult_1","result","group","name","count","setState","resolver","isDataChanged","dataSourceModified","scrollRefresh","action","enableHover","isSelectedRowIndexUpdating","selectRow","fn_1","off","contentReady","on","setProperties","muteOnChange","filterModule","refreshFilter","headerCells","slice","stdHdrCell","cols","cell","updateColumnModel","len","columnModel","updateFrozenColumns","updateLockableColumns","isFrozen","frozenCount","movableCount","lockColumn","isRefresh","inview","map","v","vLen","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","contentModule","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getElementsByClassName","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getRowInfo","ele","cellIndex","parseInt","getAttribute","isNaN","row_1","rowIndex","frzCols","isMovable","rows","getMovableRows","rowsObject","rowData","column","data","cells","row","getMovableRowElements","getDataRows","children","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","dRows","getMovableDataRows","setCellValue","rowIdx","rowuID","fieldIdx","tr","mTr","pkName","selectedRow","movableSelectedRow","rowObjects","movableRowObjects","getColumnIndexByField","childGrid","getColumnByField","td","childNodes","sRow","mRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","rwdata","rowRenderer","isDataRow","changes","getForeignKeyColumns","getCellFromIndex","getMovableCellFromIndex","getColumnHeaderByIndex","getRowObjectFromUID","rowObject","rows_1","getRowsObject","getMovableRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","getColumnByIndex","item","getColumnByUid","concat","getStackedColumns","columns_1","getUidByColumnField","getNormalizedColumnIndex","rowDropSettings","targetID","allowResizing","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","showColumns","showBy","hideColumns","hideBy","getFrozenCount","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","printModule","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","clipboardModule","recalcIndentWidth","isRowDragable","indentWidth","offsetWidth","headerCol","contentCol","perPixel","applyWidth","style","columnWidthChanged","setAttribute","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","j","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","widthService","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","this_1","showGroupedColumn","moduleName","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","setWidthToColumns","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","textWrapSettings","wrapMode","opensOn","getTooltipStatus","headerDivTag","contentDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","isEllipsisTooltip","prevElement","close","tagName","elemNames","innerText","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","blazorTemplate","removeEventListener","headerTemplate","filterTemplate","tempID","filteredColumns","captionTemplate","guid","footerTemplate","groupFooterTemplate","groupCaptionTemplate","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","click","mode","dataRow","rowObj","recordDoubleClick","dblclick","display","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","localStorage","getItem","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","arr","localCol","tCol","commands","commandsTemplate","foreignKeyValue","presskey","cancel","stopImmediatePropagation","altKey","keyCode","focusHeader","addOutline","focusContent","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","mTbl","getMovableContent","colGroup","cloneNode","insertBefore","getMovableHeader","scrollLeft","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","destroyTemplate","propertyNames","clearTemplate","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","cTable","fTable","clientHeight","overflowY","scrollWidth","clientWidth","overflowX","frozenHeight","getRowIndexByPrimaryKey","grabColumnByFieldFromAllCols","gCol","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getMovableVirtualHeader","getFrozenVirtualHeader","getRowElementByUID","rowEle","mRows","cntRows","rows_2","getHiddenColumns"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.media = {};\n        /** @hidden */\n        _this.freezeRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = [];\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    Grid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource', 'headerText'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.pageSettings.template = undefined;\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n        if (isBlazor()) {\n            modules.push({ member: 'blazor', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        /* tslint:disable */\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            this.isServerRendered = false; //NEW\n        }\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.freezeRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No Matches Found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No Matches Found',\n            ClearFilter: 'Clear Filter',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n        /* tslint:enable */\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.getMediaColumns();\n        }\n        setColumnIndex(this.columns);\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n        if (isBlazor() && this.isServerRendered) {\n            gridObserver.notify(events.componentRendered, { id: this.element.id, grid: this });\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    Grid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually showed spinner needs to hide by `hideSpinnner`.\n     */\n    Grid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance.push(this.mediaQueryUpdate.bind(this, index));\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        if (this.aggregates.length && this.element.scrollHeight > this.height) {\n            var footerContent = this.element.querySelector('.e-gridfooter');\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n            this.refreshHeader();\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[i]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.e-gridheader') &&\n            gridElement.querySelector('.e-gridcontent') ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    requireRefresh = true;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.frozenColumns || this.frozenRows) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    /* tslint:disable */\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult_1 = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    (pending_1.group || []).forEach(function (name) {\n                        gResult_1 = DataUtil.group(gResult_1, name, pending_1.aggregates || []);\n                    });\n                    this.dataSource = {\n                        result: gResult_1, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n        var cols = this.getColumns();\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        var cols = this.columnModel;\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].isFrozen) {\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n        }\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        return columns;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Gets the header div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     * @param  {Element} element - Specifies the Grid header.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     * @param  {Element} element - Specifies the Grid content table.\n     * @return {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     * @param  {Element} element - Specifies the Grid content.\n     * @return {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     * @param  {Element} element - Specifies the Grid header table.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContent = function () {\n        if (isNullOrUndefined(this.footerElement)) {\n            this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        }\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        if (isNullOrUndefined(this.footerElement)) {\n            this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        }\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     * @param  {Element} element - Specifies the Grid pager.\n     * @return {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand'))) && !this.isEdit) {\n            var cell = closest(ele, '.e-rowcell');\n            if (!cell) {\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.e-row');\n                var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n                var frzCols = this.getFrozenColumns();\n                var isMovable = frzCols ? cellIndex >= frzCols : false;\n                var rows = (isMovable ?\n                    this.contentModule.getMovableRows() : this.contentModule.getRows());\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[isMovable ? cellIndex - frzCols : cellIndex].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getDataRows = function () {\n        var rows = [].slice.call(this.getContentTable().querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderTable().querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var fieldIdx;\n        var col;\n        var tr;\n        var mTr;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var selectedRow = {};\n        var movableSelectedRow = {};\n        var rowObjects = this.contentModule.getRows();\n        var movableRowObjects = this.contentModule.getMovableRows();\n        fieldIdx = this.getColumnIndexByField(field);\n        if (this.groupSettings.columns.length) {\n            fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n            fieldIdx++;\n        }\n        if (this.allowRowDragAndDrop) {\n            fieldIdx++;\n        }\n        col = this.getColumnByField(field);\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        movableSelectedRow = movableRowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var td = !isNullOrUndefined(tr.childNodes[fieldIdx]) ?\n                tr.childNodes[fieldIdx] : mTr.childNodes[fieldIdx - this.frozenColumns];\n            if (!isNullOrUndefined(td)) {\n                var sRow = selectedRow[cells][fieldIdx];\n                var mRow = void 0;\n                if (this.frozenColumns) {\n                    mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n                }\n                cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n                    movableSelectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rwdata = 'data';\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getDataRows()[rowIndex] && this.getDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex];\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - this.getFrozenColumns()];\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.getFrozenColumns()) {\n            if (!row) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        return this.contentModule.getMovableRows();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        return this.getColumnHeaderByUid(this.getColumnByField(field).uid);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']').parentElement;\n    };\n    /**\n     * @hidden\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets TH index by column uid value.\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @return {number}\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.allowRowDragAndDrop && isNullOrUndefined(this.rowDropSettings.targetID) && this.allowResizing) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     * @return {Function}\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     * @return {string[]}\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     */\n    Grid.prototype.refresh = function () {\n        this.headerModule.refreshUI();\n        this.updateStackedFilter();\n        this.renderModule.refresh();\n    };\n    /**\n     * Refreshes the Grid header.\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var col = this.columns;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (col[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen && cols[i].visible) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearFiltering = function () {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering();\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * @return {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n        var perPixel = indentWidth / 30;\n        var i = 0;\n        var applyWidth = function (index, width) {\n            headerCol[index].style.width = width + 'px';\n            contentCol[index].style.width = width + 'px';\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @return {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e, args) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var _this = this;\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending' });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            sCols.forEach(function (col) {\n                _this.sortedColumns.push(col.field);\n            });\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: 'e-content', attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({ opensOn: 'custom', content: '' }, this.element);\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var width;\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerDivTag = 'e-gridheader';\n        var contentDivTag = 'e-gridcontent';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var td = element;\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.getFrozenColumns()) {\n            var row = (parentsUntil(e.target, 'e-row'));\n            if (this.element.querySelectorAll('.e-frozenhover').length && e.type === 'mouseout') {\n                this.element.querySelectorAll('.e-frozenhover').forEach(function (row) { return row.classList.remove('e-frozenhover'); });\n            }\n            else if (row) {\n                this.element.querySelectorAll('tr[aria-rowindex=\"' +\n                    row.getAttribute('aria-rowindex') + '\"]').forEach(function (row) { return row.classList.add('e-frozenhover'); });\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr');\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n        this.on(events.contentReady, this.blazorTemplate, this);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    Grid.prototype.blazorTemplate = function () {\n        if (isBlazor()) {\n            if (this.pageSettings.template) {\n                updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n            }\n            for (var i = 0; i < this.columnModel.length; i++) {\n                if (this.columnModel[i].template) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n                }\n                if (this.columnModel[i].headerTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    var fieldName = this.columnModel[i].field;\n                    var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n                    var filteredColumns = this.filterSettings.columns;\n                    for (var k = 0; k < filteredColumns.length; k++) {\n                        if (fieldName == filteredColumns[k].field) {\n                            blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n                        }\n                    }\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n                }\n            }\n            if (this.groupSettings.captionTemplate) {\n                updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n            }\n            var guid = 'guid';\n            for (var k = 0; k < this.aggregates.length; k++) {\n                for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n                    if (this.aggregates[k].columns[j].footerTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupFooterTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get current visible data of grid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length) ?\n            this.currentViewData.records : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop) {\n            e.preventDefault();\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, 'e-row');\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, 'e-rowcell') &&\n            parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch') {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if (gridElement && gridElement.id !== this.element.id) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mergePersistGridData = function () {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === ''))) {\n            var dataObj = JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        setColumnIndex(this[key]);\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var _this = this;\n        storedColumn.forEach(function (col, index, arr) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === col.index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    _this.mergeColumns(col.columns, localCol.columns);\n                    arr[index] = extend(localCol, col, true);\n                }\n                else {\n                    if (isBlazor()) {\n                        var guid = 'guid';\n                        col[guid] = localCol[guid];\n                    }\n                    arr[index] = extend(localCol, col, true);\n                }\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false, });\n        this.trigger(\"keyPressed\", presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                this.focusModule.focusHeader();\n                this.focusModule.addOutline();\n            }\n            if (e.keyCode === 87) { //alt w\n                this.focusModule.focusContent();\n                this.focusModule.addOutline();\n            }\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        this.keyPress = e.action !== 'space';\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     */\n    Grid.prototype.refreshColumns = function () {\n        var fCnt = this.getContent().querySelector('.e-frozencontent');\n        if ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt)) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.getFrozenColumns()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n                remove(mTbl.querySelector('colgroup'));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.e-movableheader').querySelector('colgroup')).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n            }\n        }\n        if (this.getFrozenColumns()) {\n            this.headerModule.getMovableHeader().scrollLeft = this.contentModule.getMovableContent().scrollLeft;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     * @param  {string} columnName - Defines the column name to group.\n     * @return {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n    * Collapses all the grouped rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @return {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * @return {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @return {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @return {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n    * Expands all the detail rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     */\n    //tslint:disable-next-line:no-any\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     * @return {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.e-content');\n        var cTable = content.querySelector('.e-movablecontent') ? content.querySelector('.e-movablecontent') : content;\n        var fTable = content.querySelector('.e-frozencontent') ? content.querySelector('.e-frozencontent') : content;\n        if (cTable.scrollHeight <= cTable.clientHeight && fTable.scrollHeight <= fTable.clientHeight) {\n            this.scrollModule.removePadding();\n            cTable.style.overflowY = 'auto';\n        }\n        if (this.frozenColumns && cTable.scrollWidth <= cTable.clientWidth) {\n            cTable.style.overflowX = 'auto';\n            cTable.style.overflowY = 'auto';\n            this.notify(events.frozenHeight, 0);\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     * @param  {string} value - Defines the primary key value.\n     * @param  {Object} value - Defines the row data.\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        for (var i = 0; i < this.getRowsObject().length; i++) {\n            if (this.getRowsObject()[i].data[pkName] === value) {\n                return this.getRowsObject()[i].index;\n            }\n        }\n        return -1;\n    };\n    ;\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        this.columnModel.forEach(function (gCol) {\n            if (field === gCol.field) {\n                column = gCol;\n            }\n        });\n        return column;\n    };\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        this.columnModel.forEach(function (gCol) {\n            if (uid === gCol.uid) {\n                column = gCol;\n            }\n        });\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     * @return {Object[] | Promise<Object>}\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.e-movablecontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.e-frozencontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-movableheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozenheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.getFrozenColumns()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n    * Gets the hidden columns from the Grid.\n    * @return {Column[]}\n    * @blazorType List<GridColumn>\n    */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    var Grid_1;\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"]},"metadata":{},"sourceType":"module"}