{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Row } from '../models/row';\nimport { isNullOrUndefined, extend, setValue, isBlazor } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { getForeignData, getUid } from '../../grid/base/util';\n/**\n * GroupModelGenerator is used to generate group caption rows and data rows.\n * @hidden\n */\n\nvar GroupModelGenerator =\n/** @class */\nfunction (_super) {\n  __extends(GroupModelGenerator, _super);\n\n  function GroupModelGenerator(parent) {\n    var _this = _super.call(this, parent) || this;\n\n    _this.rows = [];\n    _this.index = 0;\n    _this.parent = parent;\n    _this.summaryModelGen = new GroupSummaryModelGenerator(parent);\n    _this.captionModelGen = new CaptionSummaryModelGenerator(parent);\n    return _this;\n  }\n\n  GroupModelGenerator.prototype.generateRows = function (data, args) {\n    if (this.parent.groupSettings.columns.length === 0) {\n      return _super.prototype.generateRows.call(this, data, args);\n    }\n\n    this.rows = [];\n    this.index = this.parent.enableVirtualization ? args.startIndex : 0;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      this.getGroupedRecords(0, data[i], data.level, i, undefined, this.rows.length);\n    }\n\n    this.index = 0;\n    return this.rows;\n  };\n\n  GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw, parentid, childId, tIndex) {\n    var _a;\n\n    var level = raw;\n\n    if (isNullOrUndefined(data.items)) {\n      if (isNullOrUndefined(data.GroupGuid)) {\n        this.rows = this.rows.concat(this.generateDataRows(data, index, parentid, this.rows.length));\n      } else {\n        for (var j = 0, len = data.length; j < len; j++) {\n          this.getGroupedRecords(index, data[j], data.level, parentid, index, this.rows.length);\n        }\n      }\n    } else {\n      this.rows = this.rows.concat(this.generateCaptionRow(data, index, parentid, childId, tIndex));\n\n      if (data.items && data.items.length) {\n        this.getGroupedRecords(index + 1, data.items, data.items.level, parentid, index + 1, this.rows.length);\n      }\n\n      if (this.parent.aggregates.length) {\n        var rowCnt = this.rows.length;\n\n        (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, {\n          level: level\n        }));\n\n        for (var i = rowCnt - 1; i >= 0; i--) {\n          if (this.rows[i].isCaptionRow) {\n            this.rows[i].aggregatesCount = this.rows.length - rowCnt;\n          } else if (!this.rows[i].isCaptionRow && !this.rows[i].isDataRow) {\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {\n    var _this = this;\n\n    var cells = [];\n    var visibles = [];\n    var column = this.parent.getColumnByField(field);\n    var indexes = this.parent.getColumnIndexesInView();\n\n    if (this.parent.enableColumnVirtualization) {\n      column = this.parent.columns.filter(function (c) {\n        return c.field === field;\n      })[0];\n    }\n\n    var groupedLen = this.parent.groupSettings.columns.length;\n    var gObj = this.parent;\n\n    if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {\n      for (var i = 0; i < indent; i++) {\n        cells.push(this.generateIndentCell());\n      }\n\n      cells.push(this.generateCell({}, null, CellType.Expand));\n    }\n\n    indent = this.parent.enableColumnVirtualization ? 1 : this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) - indent + (this.parent.getVisibleColumns().length ? -1 : 0); //Captionsummary cells will be added here.    \n\n    if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {\n      var captionCells = this.captionModelGen.generateRows(data)[0];\n      extend(data, captionCells.data);\n      var cIndex_1 = 0;\n      captionCells.cells.some(function (cell, index) {\n        cIndex_1 = index;\n        return cell.visible && cell.isDataCell;\n      });\n      visibles = captionCells.cells.slice(cIndex_1).filter(function (cell) {\n        return cell.visible;\n      });\n\n      if (captionCells.visible && visibles[0].column.field === this.parent.getVisibleColumns()[0].field) {\n        visibles = visibles.slice(1);\n      }\n\n      if (this.parent.getVisibleColumns().length === 1) {\n        visibles = [];\n      }\n\n      indent = indent - visibles.length;\n    }\n\n    var cols = !this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns();\n    var wFlag = true;\n    cols.forEach(function (col, index) {\n      var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;\n\n      if (tmpFlag) {\n        wFlag = false;\n      }\n\n      var cellType = !_this.parent.enableColumnVirtualization || tmpFlag ? CellType.GroupCaption : CellType.GroupCaptionEmpty;\n      indent = _this.parent.enableColumnVirtualization && cellType === CellType.GroupCaption ? indent + groupedLen : indent;\n\n      if (gObj.isRowDragable()) {\n        indent++;\n      }\n\n      cells.push(_this.generateCell(column, null, cellType, indent));\n    });\n    cells.push.apply(cells, visibles);\n    return cells;\n  };\n\n  GroupModelGenerator.prototype.generateCaptionRow = function (data, indent, parentID, childID, tIndex) {\n    var options = {};\n    var tmp = [];\n    var records = 'records';\n    var col = this.parent.getColumnByField(data.field);\n    options.data = extend({}, data);\n\n    if (col) {\n      options.data.field = data.field;\n    }\n\n    options.isDataRow = false;\n    options.isExpand = true;\n    options.parentGid = parentID;\n    options.childGid = childID;\n    options.tIndex = tIndex;\n    options.isCaptionRow = true;\n    options.gSummary = !isNullOrUndefined(data.items[records]) ? data.items[records].length : data.items.length;\n    options.uid = isBlazor() && this.parent.isServerRendered ? this.parent.getRowUid('grid-row') : getUid('grid-row');\n    var row = new Row(options);\n    row.indent = indent;\n    this.getForeignKeyData(row);\n    row.cells = this.getCaptionRowCells(data.field, indent, row.data);\n    return row;\n  };\n\n  GroupModelGenerator.prototype.getForeignKeyData = function (row) {\n    var data = row.data;\n    var col = this.parent.getColumnByField(data.field);\n\n    if (col && col.isForeignColumn && col.isForeignColumn()) {\n      var fkValue = isNullOrUndefined(data.key) ? '' : col.valueAccessor(col.foreignKeyValue, getForeignData(col, {}, data.key)[0], col);\n      setValue('foreignKey', fkValue, row.data);\n    }\n  };\n\n  GroupModelGenerator.prototype.generateDataRows = function (data, indent, childID, tIndex) {\n    var rows = [];\n    var indexes = this.parent.getColumnIndexesInView();\n\n    for (var i = 0, len = data.length; i < len; i++, tIndex++) {\n      rows[i] = this.generateRow(data[i], this.index, i ? undefined : 'e-firstchildrow', indent, childID, tIndex);\n\n      for (var j = 0; j < indent; j++) {\n        if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {\n          continue;\n        }\n\n        rows[i].cells.unshift(this.generateIndentCell());\n      }\n\n      this.index++;\n    }\n\n    return rows;\n  };\n\n  GroupModelGenerator.prototype.generateIndentCell = function () {\n    return this.generateCell({}, null, CellType.Indent);\n  };\n\n  GroupModelGenerator.prototype.refreshRows = function (input) {\n    var _this = this;\n\n    var indexes = this.parent.getColumnIndexesInView();\n    input.forEach(function (row) {\n      if (row.isDataRow) {\n        row.cells = _this.generateCells(row);\n\n        for (var j = 0; j < row.indent; j++) {\n          if (_this.parent.enableColumnVirtualization && indexes.indexOf(row.indent) === -1) {\n            continue;\n          }\n\n          row.cells.unshift(_this.generateIndentCell());\n        }\n      } else {\n        var cRow = _this.generateCaptionRow(row.data, row.indent);\n\n        row.cells = cRow.cells;\n      }\n    });\n    return input;\n  };\n\n  return GroupModelGenerator;\n}(RowModelGenerator);\n\nexport { GroupModelGenerator };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/services/group-model-generator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Row","isNullOrUndefined","extend","setValue","isBlazor","CellType","RowModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","getForeignData","getUid","GroupModelGenerator","_super","parent","_this","call","rows","index","summaryModelGen","captionModelGen","generateRows","data","args","groupSettings","columns","length","enableVirtualization","startIndex","i","len","getGroupedRecords","level","undefined","raw","parentid","childId","tIndex","_a","items","GroupGuid","concat","generateDataRows","j","generateCaptionRow","aggregates","rowCnt","push","apply","isCaptionRow","aggregatesCount","isDataRow","getCaptionRowCells","field","indent","cells","visibles","column","getColumnByField","indexes","getColumnIndexesInView","enableColumnVirtualization","filter","c","groupedLen","gObj","indexOf","generateIndentCell","generateCell","Expand","getVisibleColumns","detailTemplate","childGrid","isEmpty","captionCells","cIndex_1","some","cell","visible","isDataCell","slice","cols","getColumns","wFlag","forEach","col","tmpFlag","cellType","GroupCaption","GroupCaptionEmpty","isRowDragable","parentID","childID","options","tmp","records","isExpand","parentGid","childGid","gSummary","uid","isServerRendered","getRowUid","row","getForeignKeyData","isForeignColumn","fkValue","key","valueAccessor","foreignKeyValue","generateRow","unshift","Indent","refreshRows","input","generateCells","cRow"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Row } from '../models/row';\nimport { isNullOrUndefined, extend, setValue, isBlazor } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { getForeignData, getUid } from '../../grid/base/util';\n/**\n * GroupModelGenerator is used to generate group caption rows and data rows.\n * @hidden\n */\nvar GroupModelGenerator = /** @class */ (function (_super) {\n    __extends(GroupModelGenerator, _super);\n    function GroupModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.rows = [];\n        _this.index = 0;\n        _this.parent = parent;\n        _this.summaryModelGen = new GroupSummaryModelGenerator(parent);\n        _this.captionModelGen = new CaptionSummaryModelGenerator(parent);\n        return _this;\n    }\n    GroupModelGenerator.prototype.generateRows = function (data, args) {\n        if (this.parent.groupSettings.columns.length === 0) {\n            return _super.prototype.generateRows.call(this, data, args);\n        }\n        this.rows = [];\n        this.index = this.parent.enableVirtualization ? args.startIndex : 0;\n        for (var i = 0, len = data.length; i < len; i++) {\n            this.getGroupedRecords(0, data[i], data.level, i, undefined, this.rows.length);\n        }\n        this.index = 0;\n        return this.rows;\n    };\n    GroupModelGenerator.prototype.getGroupedRecords = function (index, data, raw, parentid, childId, tIndex) {\n        var _a;\n        var level = raw;\n        if (isNullOrUndefined(data.items)) {\n            if (isNullOrUndefined(data.GroupGuid)) {\n                this.rows = this.rows.concat(this.generateDataRows(data, index, parentid, this.rows.length));\n            }\n            else {\n                for (var j = 0, len = data.length; j < len; j++) {\n                    this.getGroupedRecords(index, data[j], data.level, parentid, index, this.rows.length);\n                }\n            }\n        }\n        else {\n            this.rows = this.rows.concat(this.generateCaptionRow(data, index, parentid, childId, tIndex));\n            if (data.items && data.items.length) {\n                this.getGroupedRecords(index + 1, data.items, data.items.level, parentid, index + 1, this.rows.length);\n            }\n            if (this.parent.aggregates.length) {\n                var rowCnt = this.rows.length;\n                (_a = this.rows).push.apply(_a, this.summaryModelGen.generateRows(data, { level: level }));\n                for (var i = rowCnt - 1; i >= 0; i--) {\n                    if (this.rows[i].isCaptionRow) {\n                        this.rows[i].aggregatesCount = this.rows.length - rowCnt;\n                    }\n                    else if (!this.rows[i].isCaptionRow && !this.rows[i].isDataRow) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    GroupModelGenerator.prototype.getCaptionRowCells = function (field, indent, data) {\n        var _this = this;\n        var cells = [];\n        var visibles = [];\n        var column = this.parent.getColumnByField(field);\n        var indexes = this.parent.getColumnIndexesInView();\n        if (this.parent.enableColumnVirtualization) {\n            column = this.parent.columns.filter(function (c) { return c.field === field; })[0];\n        }\n        var groupedLen = this.parent.groupSettings.columns.length;\n        var gObj = this.parent;\n        if (!this.parent.enableColumnVirtualization || indexes.indexOf(indent) !== -1) {\n            for (var i = 0; i < indent; i++) {\n                cells.push(this.generateIndentCell());\n            }\n            cells.push(this.generateCell({}, null, CellType.Expand));\n        }\n        indent = this.parent.enableColumnVirtualization ? 1 :\n            (this.parent.getVisibleColumns().length + groupedLen + (gObj.detailTemplate || gObj.childGrid ? 1 : 0) -\n                indent + (this.parent.getVisibleColumns().length ? -1 : 0));\n        //Captionsummary cells will be added here.    \n        if (this.parent.aggregates.length && !this.captionModelGen.isEmpty()) {\n            var captionCells = this.captionModelGen.generateRows(data)[0];\n            extend(data, captionCells.data);\n            var cIndex_1 = 0;\n            captionCells.cells.some(function (cell, index) { cIndex_1 = index; return cell.visible && cell.isDataCell; });\n            visibles = captionCells.cells.slice(cIndex_1).filter(function (cell) { return cell.visible; });\n            if (captionCells.visible && visibles[0].column.field === this.parent.getVisibleColumns()[0].field) {\n                visibles = visibles.slice(1);\n            }\n            if (this.parent.getVisibleColumns().length === 1) {\n                visibles = [];\n            }\n            indent = indent - visibles.length;\n        }\n        var cols = (!this.parent.enableColumnVirtualization ? [column] : this.parent.getColumns());\n        var wFlag = true;\n        cols.forEach(function (col, index) {\n            var tmpFlag = wFlag && indexes.indexOf(indent) !== -1;\n            if (tmpFlag) {\n                wFlag = false;\n            }\n            var cellType = !_this.parent.enableColumnVirtualization || tmpFlag ?\n                CellType.GroupCaption : CellType.GroupCaptionEmpty;\n            indent = _this.parent.enableColumnVirtualization && cellType === CellType.GroupCaption ? indent + groupedLen : indent;\n            if (gObj.isRowDragable()) {\n                indent++;\n            }\n            cells.push(_this.generateCell(column, null, cellType, indent));\n        });\n        cells.push.apply(cells, visibles);\n        return cells;\n    };\n    GroupModelGenerator.prototype.generateCaptionRow = function (data, indent, parentID, childID, tIndex) {\n        var options = {};\n        var tmp = [];\n        var records = 'records';\n        var col = this.parent.getColumnByField(data.field);\n        options.data = extend({}, data);\n        if (col) {\n            options.data.field = data.field;\n        }\n        options.isDataRow = false;\n        options.isExpand = true;\n        options.parentGid = parentID;\n        options.childGid = childID;\n        options.tIndex = tIndex;\n        options.isCaptionRow = true;\n        options.gSummary = !isNullOrUndefined(data.items[records]) ? data.items[records].length : data.items.length;\n        options.uid = isBlazor() && this.parent.isServerRendered ? this.parent.getRowUid('grid-row') : getUid('grid-row');\n        var row = new Row(options);\n        row.indent = indent;\n        this.getForeignKeyData(row);\n        row.cells = this.getCaptionRowCells(data.field, indent, row.data);\n        return row;\n    };\n    GroupModelGenerator.prototype.getForeignKeyData = function (row) {\n        var data = row.data;\n        var col = this.parent.getColumnByField(data.field);\n        if (col && col.isForeignColumn && col.isForeignColumn()) {\n            var fkValue = (isNullOrUndefined(data.key) ? '' : col.valueAccessor(col.foreignKeyValue, getForeignData(col, {}, data.key)[0], col));\n            setValue('foreignKey', fkValue, row.data);\n        }\n    };\n    GroupModelGenerator.prototype.generateDataRows = function (data, indent, childID, tIndex) {\n        var rows = [];\n        var indexes = this.parent.getColumnIndexesInView();\n        for (var i = 0, len = data.length; i < len; i++, tIndex++) {\n            rows[i] = this.generateRow(data[i], this.index, i ? undefined : 'e-firstchildrow', indent, childID, tIndex);\n            for (var j = 0; j < indent; j++) {\n                if (this.parent.enableColumnVirtualization && indexes.indexOf(indent) === -1) {\n                    continue;\n                }\n                rows[i].cells.unshift(this.generateIndentCell());\n            }\n            this.index++;\n        }\n        return rows;\n    };\n    GroupModelGenerator.prototype.generateIndentCell = function () {\n        return this.generateCell({}, null, CellType.Indent);\n    };\n    GroupModelGenerator.prototype.refreshRows = function (input) {\n        var _this = this;\n        var indexes = this.parent.getColumnIndexesInView();\n        input.forEach(function (row) {\n            if (row.isDataRow) {\n                row.cells = _this.generateCells(row);\n                for (var j = 0; j < row.indent; j++) {\n                    if (_this.parent.enableColumnVirtualization && indexes.indexOf(row.indent) === -1) {\n                        continue;\n                    }\n                    row.cells.unshift(_this.generateIndentCell());\n                }\n            }\n            else {\n                var cRow = _this.generateCaptionRow(row.data, row.indent);\n                row.cells = cRow.cells;\n            }\n        });\n        return input;\n    };\n    return GroupModelGenerator;\n}(RowModelGenerator));\nexport { GroupModelGenerator };\n"]},"metadata":{},"sourceType":"module"}