{"ast":null,"code":"import { Observer, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { AriaService } from '../services/aria-service';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\nimport { DataUtil } from '@syncfusion/ej2-data';\nexport var gridObserver = new Observer();\n/**\n * BlazorAction is used for performing Blazor related Grid Actions.\n * @hidden\n */\n\nvar BlazorAction =\n/** @class */\nfunction () {\n  function BlazorAction(parent) {\n    this.aria = new AriaService();\n    this.actionArgs = {};\n    this.parent = parent;\n    this.addEventListener();\n  }\n\n  BlazorAction.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('detailclick', this.onDetailRowClick, this);\n    this.parent.on('add-delete-success', this.addDeleteSuccess, this);\n    this.parent.on('editsuccess', this.editSuccess, this);\n    this.parent.on('setvisibility', this.setColumnVisibility, this);\n    this.parent.on('offset', this.setServerOffSet, this);\n    this.parent.on(events.modelChanged, this.modelChanged, this);\n  };\n\n  BlazorAction.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('detailclick', this.onDetailRowClick);\n    this.parent.off('add-delete-success', this.addDeleteSuccess);\n    this.parent.off('editsuccess', this.editSuccess);\n    this.parent.off('setvisibility', this.setColumnVisibility);\n    this.parent.off('offset', this.setServerOffSet);\n    this.parent.off(events.modelChanged, this.modelChanged);\n  };\n\n  BlazorAction.prototype.getModuleName = function () {\n    return 'blazor';\n  };\n\n  ;\n\n  BlazorAction.prototype.modelChanged = function (args) {\n    this.actionArgs = args;\n    this.parent.currentAction = args;\n  };\n\n  BlazorAction.prototype.addDeleteSuccess = function (args) {\n    var _this = this;\n\n    var editArgs;\n    var action = 'name';\n    var data = 'data';\n    editArgs = {\n      requestType: args.requestType,\n      data: args[data],\n      action: args[action]\n    };\n    args.promise.then(function (e) {\n      return _this.editSuccess(editArgs);\n    }).catch(function (e) {\n      _this.parent.trigger(events.actionFailure, isBlazor() && e instanceof Array ? e[0] : e);\n\n      _this.parent.hideSpinner();\n\n      _this.parent.log('actionfailure', {\n        error: e\n      });\n    });\n  };\n\n  BlazorAction.prototype.editSuccess = function (args) {\n    this.actionArgs = args;\n    this.parent.currentAction = args;\n    this.parent.allowServerDataBinding = true;\n    this.parent.serverDataBind();\n    this.parent.allowServerDataBinding = false;\n  };\n\n  BlazorAction.prototype.onDetailRowClick = function (target) {\n    var gObj = this.parent;\n    var adaptor = 'interopAdaptor';\n    var rIndex = 'rowIndex';\n    var invokeMethodAsync = 'invokeMethodAsync';\n    var tr = target.parentElement;\n    var uid = tr.getAttribute('data-uid');\n    var rowObj = gObj.getRowObjectFromUID(uid);\n    var args = {\n      uid: uid,\n      classList: target.classList[0],\n      index: tr.getAttribute('aria-rowindex'),\n      rowIndex: gObj.getRowsObject().indexOf(rowObj),\n      colSpan: this.parent.getVisibleColumns().length\n    };\n    gObj[adaptor][invokeMethodAsync]('OnDetailClick', args);\n\n    if (target.classList.contains('e-detailrowcollapse')) {\n      var rows = gObj.getRowsObject();\n      var rowData = rowObj.data;\n      var gridRowId = this.parent.getRowUid('grid-row');\n      var len = gObj.groupSettings.columns.length;\n      var gridRow = new Row({\n        isDataRow: true,\n        isExpand: true,\n        uid: gridRowId,\n        isDetailRow: true,\n        cells: [new Cell({\n          cellType: CellType.Indent\n        }), new Cell({\n          isDataCell: true,\n          visible: true\n        })]\n      });\n\n      for (var i = 0; i < len; i++) {\n        gridRow.cells.unshift(new Cell({\n          cellType: CellType.Indent\n        }));\n      }\n\n      rows.splice(args[rIndex] + 1, 0, gridRow);\n      gObj.trigger(events.detailDataBound, {\n        data: rowData\n      });\n      gObj.notify(events.detailDataBound, {\n        rows: gObj.getRowsObject()\n      });\n      rowObj.isExpand = true;\n      this.aria.setExpand(target, true);\n    } else {\n      gObj.getRowsObject().splice(args[rIndex] + 1, 1);\n      gObj.notify(events.detailDataBound, {\n        rows: gObj.getRowsObject()\n      });\n      rowObj.isExpand = false;\n      this.aria.setExpand(target, false);\n    }\n  };\n\n  BlazorAction.prototype.setColumnVisibility = function (columns) {\n    var visible = {};\n    var adaptor = 'interopAdaptor';\n    var invokeMethodAsync = 'invokeMethodAsync';\n    columns.forEach(function (column) {\n      visible[column.uid] = column.visible;\n    });\n    this.parent[adaptor][invokeMethodAsync]('setColumnVisibility', {\n      visible: visible\n    });\n  };\n\n  BlazorAction.prototype.dataSuccess = function (args) {\n    if (args.foreignColumnsData) {\n      var columns = this.parent.getColumns();\n      columns.forEach(function (column) {\n        if (args.foreignColumnsData[column.field]) {\n          column.columnData = args.foreignColumnsData[column.field];\n        }\n      });\n    }\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n      var agg_1 = [];\n      var aggRows = this.parent.aggregates;\n      aggRows.forEach(function (row) {\n        row.columns.forEach(function (col) {\n          var aggr = {};\n          var type = col.type.toString();\n          aggr = {\n            type: type.toLowerCase(),\n            field: col.field\n          };\n          agg_1.push(aggr);\n        });\n      });\n      var data_1;\n      var aggrds_1;\n      var groupedCols = this.parent.groupSettings.columns;\n      groupedCols.forEach(function (field) {\n        aggrds_1 = data_1 ? data_1 : args.result;\n        data_1 = DataUtil.group(aggrds_1, field, agg_1, null, null);\n      });\n      args.result = data_1 ? data_1 : args.result;\n    }\n\n    var rowUid = 'rowUid';\n    var offsetTime = 'offsetTime';\n    var off = 'offset';\n    this.parent[rowUid] = args[rowUid];\n    this.parent[offsetTime] = args[off];\n\n    if (this.parent[offsetTime] !== Math.abs(new Date().getTimezoneOffset() / 60)) {\n      if (this.parent.editSettings.mode !== 'Batch') {\n        var action = 'action';\n        var rowIndex = 'rowIndex';\n        var index = 'index';\n\n        if (this.actionArgs[action] === 'edit') {\n          this.setClientOffSet(args, this.actionArgs[rowIndex]);\n        } else if (this.actionArgs[action] === 'add') {\n          this.setClientOffSet(args, this.actionArgs[index]);\n        }\n      } else if (this.parent.editSettings.mode === 'Batch') {\n        var changes = 'changes';\n        var changedRecords = 'changedRecords';\n        var addedRecords = 'addedRecords';\n        var keyField = this.parent.getPrimaryKeyFieldNames()[0];\n        var batchChanges = this.actionArgs[changes] || {\n          changedRecords: [],\n          addedRecords: []\n        };\n\n        for (var i = 0; i < batchChanges[changedRecords].length; i++) {\n          for (var j = 0; j < args.result.length; j++) {\n            if (batchChanges[changedRecords][i][keyField] === args.result[j][keyField]) {\n              this.setClientOffSet(args, j);\n            }\n          }\n        }\n\n        for (var i = 0; i < batchChanges[addedRecords].length; i++) {\n          for (var j = 0; j < args.result.length; j++) {\n            if (batchChanges[addedRecords][i][keyField] === args.result[j][keyField]) {\n              this.setClientOffSet(args, j);\n            }\n          }\n        }\n      }\n    }\n\n    this.parent.renderModule.dataManagerSuccess(args, this.actionArgs);\n    this.parent.getMediaColumns();\n    this.actionArgs = this.parent.currentAction = {};\n  };\n\n  BlazorAction.prototype.setClientOffSet = function (args, index) {\n    var timeZone = DataUtil.serverTimezoneOffset;\n    DataUtil.serverTimezoneOffset = 0;\n    args.result[index] = DataUtil.parse.parseJson(JSON.stringify(args.result[index]));\n    DataUtil.serverTimezoneOffset = timeZone;\n  };\n\n  BlazorAction.prototype.setServerOffSet = function (args) {\n    var serverTimeZone = DataUtil.serverTimezoneOffset;\n    var offsetTime = 'offsetTime';\n    var data = 'data';\n    var timeZone = new Date().getTimezoneOffset() / 60 * 2 + this.parent[offsetTime];\n    DataUtil.serverTimezoneOffset = timeZone;\n    args[data] = DataUtil.parse.parseJson(JSON.stringify(args[data]));\n    DataUtil.serverTimezoneOffset = serverTimeZone;\n  };\n\n  BlazorAction.prototype.dataFailure = function (args) {\n    this.parent.renderModule.dataManagerFailure(args, this.actionArgs);\n    this.actionArgs = this.parent.currentAction = {};\n  };\n\n  BlazorAction.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return BlazorAction;\n}();\n\nexport { BlazorAction };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/actions/blazor-action.js"],"names":["Observer","isBlazor","events","Row","AriaService","Cell","CellType","DataUtil","gridObserver","BlazorAction","parent","aria","actionArgs","addEventListener","prototype","isDestroyed","on","onDetailRowClick","addDeleteSuccess","editSuccess","setColumnVisibility","setServerOffSet","modelChanged","removeEventListener","off","getModuleName","args","currentAction","_this","editArgs","action","data","requestType","promise","then","e","catch","trigger","actionFailure","Array","hideSpinner","log","error","allowServerDataBinding","serverDataBind","target","gObj","adaptor","rIndex","invokeMethodAsync","tr","parentElement","uid","getAttribute","rowObj","getRowObjectFromUID","classList","index","rowIndex","getRowsObject","indexOf","colSpan","getVisibleColumns","length","contains","rows","rowData","gridRowId","getRowUid","len","groupSettings","columns","gridRow","isDataRow","isExpand","isDetailRow","cells","cellType","Indent","isDataCell","visible","i","unshift","splice","detailDataBound","notify","setExpand","forEach","column","dataSuccess","foreignColumnsData","getColumns","field","columnData","allowGrouping","agg_1","aggRows","aggregates","row","col","aggr","type","toString","toLowerCase","push","data_1","aggrds_1","groupedCols","result","group","rowUid","offsetTime","Math","abs","Date","getTimezoneOffset","editSettings","mode","setClientOffSet","changes","changedRecords","addedRecords","keyField","getPrimaryKeyFieldNames","batchChanges","j","renderModule","dataManagerSuccess","getMediaColumns","timeZone","serverTimezoneOffset","parse","parseJson","JSON","stringify","serverTimeZone","dataFailure","dataManagerFailure","destroy"],"mappings":"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","sourcesContent":["import { Observer, isBlazor } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { AriaService } from '../services/aria-service';\nimport { Cell } from '../models/cell';\nimport { CellType } from '../base/enum';\nimport { DataUtil } from '@syncfusion/ej2-data';\nexport var gridObserver = new Observer();\n/**\n * BlazorAction is used for performing Blazor related Grid Actions.\n * @hidden\n */\nvar BlazorAction = /** @class */ (function () {\n    function BlazorAction(parent) {\n        this.aria = new AriaService();\n        this.actionArgs = {};\n        this.parent = parent;\n        this.addEventListener();\n    }\n    BlazorAction.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('detailclick', this.onDetailRowClick, this);\n        this.parent.on('add-delete-success', this.addDeleteSuccess, this);\n        this.parent.on('editsuccess', this.editSuccess, this);\n        this.parent.on('setvisibility', this.setColumnVisibility, this);\n        this.parent.on('offset', this.setServerOffSet, this);\n        this.parent.on(events.modelChanged, this.modelChanged, this);\n    };\n    BlazorAction.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('detailclick', this.onDetailRowClick);\n        this.parent.off('add-delete-success', this.addDeleteSuccess);\n        this.parent.off('editsuccess', this.editSuccess);\n        this.parent.off('setvisibility', this.setColumnVisibility);\n        this.parent.off('offset', this.setServerOffSet);\n        this.parent.off(events.modelChanged, this.modelChanged);\n    };\n    BlazorAction.prototype.getModuleName = function () { return 'blazor'; };\n    ;\n    BlazorAction.prototype.modelChanged = function (args) {\n        this.actionArgs = args;\n        this.parent.currentAction = args;\n    };\n    BlazorAction.prototype.addDeleteSuccess = function (args) {\n        var _this = this;\n        var editArgs;\n        var action = 'name';\n        var data = 'data';\n        editArgs = {\n            requestType: args.requestType,\n            data: args[data],\n            action: args[action]\n        };\n        args.promise.then(function (e) { return _this.editSuccess(editArgs); }).catch(function (e) {\n            _this.parent.trigger(events.actionFailure, ((isBlazor() && e instanceof Array) ? e[0] : e));\n            _this.parent.hideSpinner();\n            _this.parent.log('actionfailure', { error: e });\n        });\n    };\n    BlazorAction.prototype.editSuccess = function (args) {\n        this.actionArgs = args;\n        this.parent.currentAction = args;\n        this.parent.allowServerDataBinding = true;\n        this.parent.serverDataBind();\n        this.parent.allowServerDataBinding = false;\n    };\n    BlazorAction.prototype.onDetailRowClick = function (target) {\n        var gObj = this.parent;\n        var adaptor = 'interopAdaptor';\n        var rIndex = 'rowIndex';\n        var invokeMethodAsync = 'invokeMethodAsync';\n        var tr = target.parentElement;\n        var uid = tr.getAttribute('data-uid');\n        var rowObj = gObj.getRowObjectFromUID(uid);\n        var args = {\n            uid: uid, classList: target.classList[0], index: tr.getAttribute('aria-rowindex'),\n            rowIndex: gObj.getRowsObject().indexOf(rowObj), colSpan: this.parent.getVisibleColumns().length\n        };\n        gObj[adaptor][invokeMethodAsync]('OnDetailClick', args);\n        if (target.classList.contains('e-detailrowcollapse')) {\n            var rows = gObj.getRowsObject();\n            var rowData = rowObj.data;\n            var gridRowId = this.parent.getRowUid('grid-row');\n            var len = gObj.groupSettings.columns.length;\n            var gridRow = new Row({\n                isDataRow: true,\n                isExpand: true,\n                uid: gridRowId,\n                isDetailRow: true,\n                cells: [new Cell({ cellType: CellType.Indent }), new Cell({ isDataCell: true, visible: true })]\n            });\n            for (var i = 0; i < len; i++) {\n                gridRow.cells.unshift(new Cell({ cellType: CellType.Indent }));\n            }\n            rows.splice(args[rIndex] + 1, 0, gridRow);\n            gObj.trigger(events.detailDataBound, { data: rowData });\n            gObj.notify(events.detailDataBound, { rows: gObj.getRowsObject() });\n            rowObj.isExpand = true;\n            this.aria.setExpand(target, true);\n        }\n        else {\n            gObj.getRowsObject().splice(args[rIndex] + 1, 1);\n            gObj.notify(events.detailDataBound, { rows: gObj.getRowsObject() });\n            rowObj.isExpand = false;\n            this.aria.setExpand(target, false);\n        }\n    };\n    BlazorAction.prototype.setColumnVisibility = function (columns) {\n        var visible = {};\n        var adaptor = 'interopAdaptor';\n        var invokeMethodAsync = 'invokeMethodAsync';\n        columns.forEach(function (column) {\n            visible[column.uid] = column.visible;\n        });\n        this.parent[adaptor][invokeMethodAsync]('setColumnVisibility', { visible: visible });\n    };\n    BlazorAction.prototype.dataSuccess = function (args) {\n        if (args.foreignColumnsData) {\n            var columns = this.parent.getColumns();\n            columns.forEach(function (column) {\n                if (args.foreignColumnsData[column.field]) {\n                    column.columnData = args.foreignColumnsData[column.field];\n                }\n            });\n        }\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n            var agg_1 = [];\n            var aggRows = this.parent.aggregates;\n            aggRows.forEach(function (row) {\n                row.columns.forEach(function (col) {\n                    var aggr = {};\n                    var type = col.type.toString();\n                    aggr = { type: type.toLowerCase(), field: col.field };\n                    agg_1.push(aggr);\n                });\n            });\n            var data_1;\n            var aggrds_1;\n            var groupedCols = this.parent.groupSettings.columns;\n            groupedCols.forEach(function (field) {\n                aggrds_1 = data_1 ? data_1 : args.result;\n                data_1 = DataUtil.group(aggrds_1, field, agg_1, null, null);\n            });\n            args.result = data_1 ? data_1 : args.result;\n        }\n        var rowUid = 'rowUid';\n        var offsetTime = 'offsetTime';\n        var off = 'offset';\n        this.parent[rowUid] = args[rowUid];\n        this.parent[offsetTime] = args[off];\n        if (this.parent[offsetTime] !== Math.abs(new Date().getTimezoneOffset() / 60)) {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                var action = 'action';\n                var rowIndex = 'rowIndex';\n                var index = 'index';\n                if (this.actionArgs[action] === 'edit') {\n                    this.setClientOffSet(args, this.actionArgs[rowIndex]);\n                }\n                else if (this.actionArgs[action] === 'add') {\n                    this.setClientOffSet(args, this.actionArgs[index]);\n                }\n            }\n            else if (this.parent.editSettings.mode === 'Batch') {\n                var changes = 'changes';\n                var changedRecords = 'changedRecords';\n                var addedRecords = 'addedRecords';\n                var keyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var batchChanges = this.actionArgs[changes] || { changedRecords: [], addedRecords: [] };\n                for (var i = 0; i < batchChanges[changedRecords].length; i++) {\n                    for (var j = 0; j < args.result.length; j++) {\n                        if (batchChanges[changedRecords][i][keyField] === args.result[j][keyField]) {\n                            this.setClientOffSet(args, j);\n                        }\n                    }\n                }\n                for (var i = 0; i < batchChanges[addedRecords].length; i++) {\n                    for (var j = 0; j < args.result.length; j++) {\n                        if (batchChanges[addedRecords][i][keyField] === args.result[j][keyField]) {\n                            this.setClientOffSet(args, j);\n                        }\n                    }\n                }\n            }\n        }\n        this.parent.renderModule.dataManagerSuccess(args, this.actionArgs);\n        this.parent.getMediaColumns();\n        this.actionArgs = this.parent.currentAction = {};\n    };\n    BlazorAction.prototype.setClientOffSet = function (args, index) {\n        var timeZone = DataUtil.serverTimezoneOffset;\n        DataUtil.serverTimezoneOffset = 0;\n        args.result[index] = DataUtil.parse.parseJson(JSON.stringify(args.result[index]));\n        DataUtil.serverTimezoneOffset = timeZone;\n    };\n    BlazorAction.prototype.setServerOffSet = function (args) {\n        var serverTimeZone = DataUtil.serverTimezoneOffset;\n        var offsetTime = 'offsetTime';\n        var data = 'data';\n        var timeZone = new Date().getTimezoneOffset() / 60 * 2 + this.parent[offsetTime];\n        DataUtil.serverTimezoneOffset = timeZone;\n        args[data] = DataUtil.parse.parseJson(JSON.stringify(args[data]));\n        DataUtil.serverTimezoneOffset = serverTimeZone;\n    };\n    BlazorAction.prototype.dataFailure = function (args) {\n        this.parent.renderModule.dataManagerFailure(args, this.actionArgs);\n        this.actionArgs = this.parent.currentAction = {};\n    };\n    BlazorAction.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return BlazorAction;\n}());\nexport { BlazorAction };\n"]},"metadata":{},"sourceType":"module"}