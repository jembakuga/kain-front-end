{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { appendChildren } from '../base/util';\nimport { CellRenderer } from './cell-renderer';\nimport { refreshAggregateCell } from '../base/constant';\n/**\n * SummaryCellRenderer class which responsible for building summary cell content.\n * @hidden\n */\n\nvar SummaryCellRenderer =\n/** @class */\nfunction (_super) {\n  __extends(SummaryCellRenderer, _super);\n\n  function SummaryCellRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.element = _this.parent.createElement('TD', {\n      className: 'e-summarycell',\n      attrs: {\n        role: 'gridcell',\n        tabindex: '-1'\n      }\n    });\n    return _this;\n  }\n\n  SummaryCellRenderer.prototype.getValue = function (field, data, column) {\n    var key;\n    key = !isNullOrUndefined(column.type) ? column.field + ' - ' + (typeof column.type === 'string' ? column.type.toLowerCase() : '') : column.columnName;\n    return data[column.columnName] ? data[column.columnName][key] : '';\n  };\n\n  SummaryCellRenderer.prototype.evaluate = function (node, cell, data, attributes) {\n    var column = cell.column;\n    this.parent.on(refreshAggregateCell, this.refreshWithAggregate(node, cell), this);\n\n    if (!(column.footerTemplate || column.groupFooterTemplate || column.groupCaptionTemplate)) {\n      return true;\n    }\n\n    var tempObj = column.getTemplate(cell.cellType);\n    var tempID = '';\n    var gColumn = this.parent.getColumnByField(data[column.columnName].field);\n\n    if (!isNullOrUndefined(gColumn)) {\n      data[column.columnName].headerText = gColumn.headerText;\n\n      if (gColumn.isForeignColumn()) {\n        var fData = gColumn.columnData.filter(function (e) {\n          return e[data[column.columnName].field] === data[column.columnName].key;\n        })[0];\n        data[column.columnName].foreignKey = fData[gColumn.foreignKeyValue];\n      }\n    }\n\n    if (isBlazor()) {\n      var guid = 'guid';\n      tempID = this.parent.element.id + column[guid] + tempObj.property;\n    }\n\n    appendChildren(node, tempObj.fn(data[column.columnName], this.parent, tempObj.property, tempID));\n    return false;\n  };\n\n  SummaryCellRenderer.prototype.refreshWithAggregate = function (node, cell) {\n    var _this = this;\n\n    var cellNode = cell;\n    return function (args) {\n      var cell = cellNode;\n      var field = cell.column.columnName ? cell.column.columnName : null;\n      var curCell = !isNullOrUndefined(field) ? args.cells.filter(function (cell) {\n        return cell.column.columnName === field;\n      })[0] : null;\n\n      if (node.parentElement && node.parentElement.getAttribute('data-uid') === args.dataUid && field && field === curCell.column.columnName) {\n        _this.refreshTD(node, curCell, args.data);\n      }\n    };\n  };\n\n  return SummaryCellRenderer;\n}(CellRenderer);\n\nexport { SummaryCellRenderer };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/renderer/summary-cell-renderer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","isBlazor","appendChildren","CellRenderer","refreshAggregateCell","SummaryCellRenderer","_super","_this","apply","arguments","element","parent","createElement","className","attrs","role","tabindex","getValue","field","data","column","key","type","toLowerCase","columnName","evaluate","node","cell","attributes","on","refreshWithAggregate","footerTemplate","groupFooterTemplate","groupCaptionTemplate","tempObj","getTemplate","cellType","tempID","gColumn","getColumnByField","headerText","isForeignColumn","fData","columnData","filter","e","foreignKey","foreignKeyValue","guid","id","property","fn","cellNode","args","curCell","cells","parentElement","getAttribute","dataUid","refreshTD"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { appendChildren } from '../base/util';\nimport { CellRenderer } from './cell-renderer';\nimport { refreshAggregateCell } from '../base/constant';\n/**\n * SummaryCellRenderer class which responsible for building summary cell content.\n * @hidden\n */\nvar SummaryCellRenderer = /** @class */ (function (_super) {\n    __extends(SummaryCellRenderer, _super);\n    function SummaryCellRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = _this.parent\n            .createElement('TD', { className: 'e-summarycell', attrs: { role: 'gridcell', tabindex: '-1' } });\n        return _this;\n    }\n    SummaryCellRenderer.prototype.getValue = function (field, data, column) {\n        var key;\n        key = !isNullOrUndefined(column.type) ?\n            column.field + ' - ' + (typeof column.type === 'string' ? column.type.toLowerCase() : '') : column.columnName;\n        return data[column.columnName] ? data[column.columnName][key] : '';\n    };\n    SummaryCellRenderer.prototype.evaluate = function (node, cell, data, attributes) {\n        var column = cell.column;\n        this.parent.on(refreshAggregateCell, this.refreshWithAggregate(node, cell), this);\n        if (!(column.footerTemplate || column.groupFooterTemplate || column.groupCaptionTemplate)) {\n            return true;\n        }\n        var tempObj = column.getTemplate(cell.cellType);\n        var tempID = '';\n        var gColumn = this.parent.getColumnByField(data[column.columnName].field);\n        if (!isNullOrUndefined(gColumn)) {\n            data[column.columnName].headerText = gColumn.headerText;\n            if (gColumn.isForeignColumn()) {\n                var fData = gColumn.columnData.filter(function (e) {\n                    return e[data[column.columnName].field] === data[column.columnName].key;\n                })[0];\n                data[column.columnName].foreignKey = fData[gColumn.foreignKeyValue];\n            }\n        }\n        if (isBlazor()) {\n            var guid = 'guid';\n            tempID = this.parent.element.id + column[guid] + tempObj.property;\n        }\n        appendChildren(node, tempObj.fn(data[column.columnName], this.parent, tempObj.property, tempID));\n        return false;\n    };\n    SummaryCellRenderer.prototype.refreshWithAggregate = function (node, cell) {\n        var _this = this;\n        var cellNode = cell;\n        return function (args) {\n            var cell = cellNode;\n            var field = cell.column.columnName ? cell.column.columnName : null;\n            var curCell = (!isNullOrUndefined(field) ? args.cells.filter(function (cell) {\n                return cell.column.columnName === field;\n            })[0] : null);\n            if (node.parentElement && node.parentElement.getAttribute('data-uid') === args.dataUid && field &&\n                field === curCell.column.columnName) {\n                _this.refreshTD(node, curCell, args.data);\n            }\n        };\n    };\n    return SummaryCellRenderer;\n}(CellRenderer));\nexport { SummaryCellRenderer };\n"]},"metadata":{},"sourceType":"module"}