{"ast":null,"code":"import { Browser } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\n/**\n * Content module is used to render grid content\n */\n\nvar VirtualRowModelGenerator =\n/** @class */\nfunction () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.data = {};\n    this.groups = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  VirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n    var _this = this;\n\n    var info = notifyArgs.virtualInfo = notifyArgs.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var center = ~~(this.model.pageSize / 2);\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n    this.checkAndResetCache(notifyArgs.requestType);\n\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      return result = this.parent.vcRows;\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      info.blockIndexes.forEach(function (value) {\n        if (_this.isBlockAvailable(value)) {\n          _this.cache[value] = _this.rowModelGenerator.refreshRows(_this.cache[value]);\n        }\n      });\n    }\n\n    info.blockIndexes.forEach(function (value) {\n      if (!_this.isBlockAvailable(value)) {\n        var rows = _this.rowModelGenerator.generateRows(data, {\n          virtualInfo: info,\n          startIndex: _this.getStartIndex(value, data)\n        });\n\n        if (isGroupAdaptive(_this.parent) && !_this.parent.vcRows.length) {\n          _this.parent.vRows = rows;\n          _this.parent.vcRows = rows;\n        }\n\n        var median = void 0;\n\n        if (isGroupAdaptive(_this.parent)) {\n          median = _this.model.pageSize / 2;\n\n          if (!_this.isBlockAvailable(indexes[0])) {\n            _this.cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (!_this.isBlockAvailable(indexes[1])) {\n            _this.cache[indexes[1]] = rows.slice(median, _this.model.pageSize);\n          }\n        } else {\n          median = ~~Math.max(rows.length, _this.model.pageSize) / 2;\n\n          if (!_this.isBlockAvailable(indexes[0])) {\n            _this.cache[indexes[0]] = rows.slice(0, median);\n          }\n\n          if (!_this.isBlockAvailable(indexes[1])) {\n            _this.cache[indexes[1]] = rows.slice(median);\n          }\n        }\n      }\n\n      if (_this.parent.groupSettings.columns.length && !xAxis && _this.cache[value]) {\n        _this.cache[value] = _this.updateGroupRow(_this.cache[value], value);\n      }\n\n      result.push.apply(result, _this.cache[value]);\n\n      if (_this.isBlockAvailable(value)) {\n        loadedBlocks.push(value);\n      }\n    });\n    info.blockIndexes = loadedBlocks;\n    var grouping = 'records';\n\n    if (this.parent.allowGrouping) {\n      this.parent.currentViewData[grouping] = result.map(function (m) {\n        return m.data;\n      });\n    } else {\n      this.parent.currentViewData = result.map(function (m) {\n        return m.data;\n      });\n    }\n\n    return result;\n  };\n\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.e-headercontent');\n    }\n\n    if (this.parent.getFrozenColumns()) {\n      content = content.querySelector('.e-movableheader');\n    }\n\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset, indx, input) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n\n      if (border) {\n        indexes.push(iOffset);\n      }\n\n      return left + calWidth < offsetVal;\n    });\n    return indexes;\n  };\n\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'].some(function (value) {\n      return action === value;\n    });\n\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n    }\n\n    return clear;\n  };\n\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n\n    this.parent.groupSettings.columns.forEach(function (c, n) {\n      return _this.cOffsets[n] = (_this.cOffsets[n - 1] | 0) + 30;\n    });\n    Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    }).forEach(function (block, i) {\n      block = block + gLen;\n      _this.cOffsets[block] = (_this.cOffsets[block - 1] | 0) + (isVisible(cols[i]) ? parseInt(cols[i].width, 10) : 0);\n    });\n  };\n\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var _this = this;\n\n    var currentFirst = current[0];\n    var rows = [];\n    Object.keys(this.cache).forEach(function (key) {\n      if (Number(key) < block) {\n        rows = rows.concat(_this.cache[key]);\n      }\n    });\n\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n\n    return this.iterateGroup(current, rows);\n  };\n\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n\n        if (res) {\n          offset = index;\n        }\n\n        return res;\n      });\n    });\n\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n\n    return current;\n  };\n\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var _this = this;\n\n    var rows = [];\n    Object.keys(this.cache).forEach(function (key) {\n      return rows = rows.concat(_this.cache[key]);\n    });\n    return rows;\n  };\n\n  return VirtualRowModelGenerator;\n}();\n\nexport { VirtualRowModelGenerator };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"names":["Browser","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","VirtualRowModelGenerator","parent","cOffsets","cache","data","groups","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","notifyArgs","_this","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","center","pageSize","indexes","getBlockIndexes","loadedBlocks","checkAndResetCache","requestType","vcRows","length","enableColumnVirtualization","blockIndexes","forEach","value","isBlockAvailable","refreshRows","rows","startIndex","getStartIndex","vRows","median","slice","Math","max","groupSettings","columns","updateGroupRow","push","apply","grouping","currentViewData","map","m","getPage","block","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","getHeaderContent","querySelector","getFrozenColumns","sLeft","scrollLeft","keys","Object","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","indx","input","iOffset","Number","offsetVal","border","action","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","indexOf","field","c","n","Array","i","parseInt","current","currentFirst","key","concat","isDataRow","iterateGroup","isPresent","row","oRow","res","undefined","shift","getRows"],"mappings":"AAAA,SAASA,OAAT,QAAwB,sBAAxB;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA;;;;AAGA,IAAIC,wBAAwB;AAAG;AAAe,YAAY;AACtD,WAASA,wBAAT,CAAkCC,MAAlC,EAA0C;AACtC,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKK,KAAL,GAAa,KAAKL,MAAL,CAAYM,YAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKP,MAAL,CAAYQ,aAAZ,GAA4B,IAAIV,mBAAJ,CAAwB,KAAKE,MAA7B,CAA5B,GAAmE,IAAIH,iBAAJ,CAAsB,KAAKG,MAA3B,CAA5F;AACH;;AACDD,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCC,YAAnC,GAAkD,UAAUP,IAAV,EAAgBQ,UAAhB,EAA4B;AAC1E,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,IAAI,GAAGF,UAAU,CAACG,WAAX,GAAyBH,UAAU,CAACG,WAAX,IAA0B,KAAKC,OAAL,EAA9D;AACA,QAAIC,KAAK,GAAGH,IAAI,CAACI,YAAL,IAAqBJ,IAAI,CAACI,YAAL,CAAkBC,IAAlB,KAA2B,GAA5D;AACA,QAAIC,IAAI,GAAG,CAACH,KAAD,IAAUH,IAAI,CAACO,QAAf,IAA2B,CAACP,IAAI,CAACQ,QAAjC,GAA4CR,IAAI,CAACS,QAAL,CAAcH,IAA1D,GAAiEN,IAAI,CAACM,IAAjF;AACA,QAAII,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAG,CAAC,EAAE,KAAKnB,KAAL,CAAWoB,QAAX,GAAsB,CAAxB,CAAd;AACA,QAAIC,OAAO,GAAG,KAAKC,eAAL,CAAqBR,IAArB,CAAd;AACA,QAAIS,YAAY,GAAG,EAAnB;AACA,SAAKC,kBAAL,CAAwBlB,UAAU,CAACmB,WAAnC;;AACA,QAAIlC,eAAe,CAAC,KAAKI,MAAN,CAAf,IAAgC,KAAKA,MAAL,CAAY+B,MAAZ,CAAmBC,MAAvD,EAA+D;AAC3D,aAAOT,MAAM,GAAG,KAAKvB,MAAL,CAAY+B,MAA5B;AACH;;AACD,QAAI,KAAK/B,MAAL,CAAYiC,0BAAhB,EAA4C;AACxCpB,MAAAA,IAAI,CAACqB,YAAL,CAAkBC,OAAlB,CAA0B,UAAUC,KAAV,EAAiB;AACvC,YAAIxB,KAAK,CAACyB,gBAAN,CAAuBD,KAAvB,CAAJ,EAAmC;AAC/BxB,UAAAA,KAAK,CAACV,KAAN,CAAYkC,KAAZ,IAAqBxB,KAAK,CAACL,iBAAN,CAAwB+B,WAAxB,CAAoC1B,KAAK,CAACV,KAAN,CAAYkC,KAAZ,CAApC,CAArB;AACH;AACJ,OAJD;AAKH;;AACDvB,IAAAA,IAAI,CAACqB,YAAL,CAAkBC,OAAlB,CAA0B,UAAUC,KAAV,EAAiB;AACvC,UAAI,CAACxB,KAAK,CAACyB,gBAAN,CAAuBD,KAAvB,CAAL,EAAoC;AAChC,YAAIG,IAAI,GAAG3B,KAAK,CAACL,iBAAN,CAAwBG,YAAxB,CAAqCP,IAArC,EAA2C;AAClDW,UAAAA,WAAW,EAAED,IADqC;AAC/B2B,UAAAA,UAAU,EAAE5B,KAAK,CAAC6B,aAAN,CAAoBL,KAApB,EAA2BjC,IAA3B;AADmB,SAA3C,CAAX;;AAGA,YAAIP,eAAe,CAACgB,KAAK,CAACZ,MAAP,CAAf,IAAiC,CAACY,KAAK,CAACZ,MAAN,CAAa+B,MAAb,CAAoBC,MAA1D,EAAkE;AAC9DpB,UAAAA,KAAK,CAACZ,MAAN,CAAa0C,KAAb,GAAqBH,IAArB;AACA3B,UAAAA,KAAK,CAACZ,MAAN,CAAa+B,MAAb,GAAsBQ,IAAtB;AACH;;AACD,YAAII,MAAM,GAAG,KAAK,CAAlB;;AACA,YAAI/C,eAAe,CAACgB,KAAK,CAACZ,MAAP,CAAnB,EAAmC;AAC/B2C,UAAAA,MAAM,GAAG/B,KAAK,CAACP,KAAN,CAAYoB,QAAZ,GAAuB,CAAhC;;AACA,cAAI,CAACb,KAAK,CAACyB,gBAAN,CAAuBX,OAAO,CAAC,CAAD,CAA9B,CAAL,EAAyC;AACrCd,YAAAA,KAAK,CAACV,KAAN,CAAYwB,OAAO,CAAC,CAAD,CAAnB,IAA0Ba,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcD,MAAd,CAA1B;AACH;;AACD,cAAI,CAAC/B,KAAK,CAACyB,gBAAN,CAAuBX,OAAO,CAAC,CAAD,CAA9B,CAAL,EAAyC;AACrCd,YAAAA,KAAK,CAACV,KAAN,CAAYwB,OAAO,CAAC,CAAD,CAAnB,IAA0Ba,IAAI,CAACK,KAAL,CAAWD,MAAX,EAAmB/B,KAAK,CAACP,KAAN,CAAYoB,QAA/B,CAA1B;AACH;AACJ,SARD,MASK;AACDkB,UAAAA,MAAM,GAAG,CAAC,CAACE,IAAI,CAACC,GAAL,CAASP,IAAI,CAACP,MAAd,EAAsBpB,KAAK,CAACP,KAAN,CAAYoB,QAAlC,CAAF,GAAgD,CAAzD;;AACA,cAAI,CAACb,KAAK,CAACyB,gBAAN,CAAuBX,OAAO,CAAC,CAAD,CAA9B,CAAL,EAAyC;AACrCd,YAAAA,KAAK,CAACV,KAAN,CAAYwB,OAAO,CAAC,CAAD,CAAnB,IAA0Ba,IAAI,CAACK,KAAL,CAAW,CAAX,EAAcD,MAAd,CAA1B;AACH;;AACD,cAAI,CAAC/B,KAAK,CAACyB,gBAAN,CAAuBX,OAAO,CAAC,CAAD,CAA9B,CAAL,EAAyC;AACrCd,YAAAA,KAAK,CAACV,KAAN,CAAYwB,OAAO,CAAC,CAAD,CAAnB,IAA0Ba,IAAI,CAACK,KAAL,CAAWD,MAAX,CAA1B;AACH;AACJ;AACJ;;AACD,UAAI/B,KAAK,CAACZ,MAAN,CAAa+C,aAAb,CAA2BC,OAA3B,CAAmChB,MAAnC,IAA6C,CAAChB,KAA9C,IAAuDJ,KAAK,CAACV,KAAN,CAAYkC,KAAZ,CAA3D,EAA+E;AAC3ExB,QAAAA,KAAK,CAACV,KAAN,CAAYkC,KAAZ,IAAqBxB,KAAK,CAACqC,cAAN,CAAqBrC,KAAK,CAACV,KAAN,CAAYkC,KAAZ,CAArB,EAAyCA,KAAzC,CAArB;AACH;;AACDb,MAAAA,MAAM,CAAC2B,IAAP,CAAYC,KAAZ,CAAkB5B,MAAlB,EAA0BX,KAAK,CAACV,KAAN,CAAYkC,KAAZ,CAA1B;;AACA,UAAIxB,KAAK,CAACyB,gBAAN,CAAuBD,KAAvB,CAAJ,EAAmC;AAC/BR,QAAAA,YAAY,CAACsB,IAAb,CAAkBd,KAAlB;AACH;AACJ,KApCD;AAqCAvB,IAAAA,IAAI,CAACqB,YAAL,GAAoBN,YAApB;AACA,QAAIwB,QAAQ,GAAG,SAAf;;AACA,QAAI,KAAKpD,MAAL,CAAYQ,aAAhB,EAA+B;AAC3B,WAAKR,MAAL,CAAYqD,eAAZ,CAA4BD,QAA5B,IAAwC7B,MAAM,CAAC+B,GAAP,CAAW,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACpD,IAAT;AAAgB,OAA1C,CAAxC;AACH,KAFD,MAGK;AACD,WAAKH,MAAL,CAAYqD,eAAZ,GAA8B9B,MAAM,CAAC+B,GAAP,CAAW,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACpD,IAAT;AAAgB,OAA1C,CAA9B;AACH;;AACD,WAAOoB,MAAP;AACH,GAlED;;AAmEAxB,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCkB,eAAnC,GAAqD,UAAUR,IAAV,EAAgB;AACjE,WAAO,CAACA,IAAI,IAAIA,IAAI,GAAG,CAAX,CAAL,EAAoBA,IAAI,GAAG,CAA3B,CAAP;AACH,GAFD;;AAGApB,EAAAA,wBAAwB,CAACU,SAAzB,CAAmC+C,OAAnC,GAA6C,UAAUC,KAAV,EAAiB;AAC1D,WAAOA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBA,KAAK,GAAG,CAA1B,GAA8B,CAACA,KAAK,GAAG,CAAT,IAAc,CAAnD;AACH,GAFD;;AAGA1D,EAAAA,wBAAwB,CAACU,SAAzB,CAAmC4B,gBAAnC,GAAsD,UAAUD,KAAV,EAAiB;AACnE,WAAOA,KAAK,IAAI,KAAKlC,KAArB;AACH,GAFD;;AAGAH,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCM,OAAnC,GAA6C,YAAY;AACrD,WAAO;AACHI,MAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWqD,WADd;AAEHxB,MAAAA,YAAY,EAAE,KAAKP,eAAL,CAAqB,KAAKtB,KAAL,CAAWqD,WAAhC,CAFX;AAGHC,MAAAA,SAAS,EAAE,MAHR;AAIHC,MAAAA,aAAa,EAAE,KAAK5D,MAAL,CAAY6D,sBAAZ;AAJZ,KAAP;AAMH,GAPD;;AAQA9D,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCgC,aAAnC,GAAmD,UAAUqB,GAAV,EAAe3D,IAAf,EAAqB4D,IAArB,EAA2B;AAC1E,QAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,IAAP;AAAc;;AACrC,QAAI5C,IAAI,GAAG,KAAKqC,OAAL,CAAaM,GAAb,CAAX;AACA,QAAIE,IAAI,GAAGF,GAAG,GAAG,CAAN,KAAY,CAAvB;AACA,QAAIG,KAAK,GAAG,CAAC9C,IAAI,GAAG,CAAR,IAAa,KAAKd,KAAL,CAAWoB,QAApC;AACA,WAAOsC,IAAI,IAAI,CAACC,IAAT,GAAgBC,KAAhB,GAAwBA,KAAK,GAAG,CAAC,EAAE,KAAK5D,KAAL,CAAWoB,QAAX,GAAsB,CAAxB,CAAxC;AACH,GAND;;AAOA1B,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCyD,gBAAnC,GAAsD,UAAUC,OAAV,EAAmB;AACrE,QAAIvD,KAAK,GAAG,IAAZ;;AACA,QAAIuD,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,KAAKnE,MAAL,CAAYoE,gBAAZ,GAA+BC,aAA/B,CAA6C,kBAA7C,CAAV;AAA6E;;AACvG,QAAI,KAAKrE,MAAL,CAAYsE,gBAAZ,EAAJ,EAAoC;AAChCH,MAAAA,OAAO,GAAGA,OAAO,CAACE,aAAR,CAAsB,kBAAtB,CAAV;AACH;;AACD,QAAI3C,OAAO,GAAG,EAAd;AACA,QAAI6C,KAAK,GAAGJ,OAAO,CAACK,UAAR,GAAqB,CAAjC;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAKxE,QAAjB,CAAX;AACA,QAAI0E,MAAM,GAAGR,OAAO,CAACS,qBAAR,GAAgCC,KAA7C;AACAN,IAAAA,KAAK,GAAG1B,IAAI,CAACiC,GAAL,CAAS,KAAK7E,QAAL,CAAcwE,IAAI,CAACzC,MAAL,GAAc,CAA5B,IAAiC2C,MAA1C,EAAkDJ,KAAlD,CAAR;AACA,QAAIQ,QAAQ,GAAGpF,OAAO,CAACqF,QAAR,GAAmB,IAAIL,MAAvB,GAAgCA,MAAM,GAAG,CAAxD;AACA,QAAIM,IAAI,GAAGV,KAAK,GAAGI,MAAR,IAAkBJ,KAAK,KAAK,CAAV,GAAcQ,QAAd,GAAyB,CAA3C,CAAX;AACAN,IAAAA,IAAI,CAACS,IAAL,CAAU,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;AACrC,UAAIC,OAAO,GAAGC,MAAM,CAACJ,MAAD,CAApB;AACA,UAAIK,SAAS,GAAG5E,KAAK,CAACX,QAAN,CAAekF,MAAf,CAAhB;AACA,UAAIM,MAAM,GAAGlB,KAAK,GAAGQ,QAAR,IAAoBS,SAApB,IAAiCP,IAAI,GAAGF,QAAP,IAAmBS,SAAjE;;AACA,UAAIC,MAAJ,EAAY;AACR/D,QAAAA,OAAO,CAACwB,IAAR,CAAaoC,OAAb;AACH;;AACD,aAAOL,IAAI,GAAGF,QAAP,GAAkBS,SAAzB;AACH,KARD;AASA,WAAO9D,OAAP;AACH,GAvBD;;AAwBA3B,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCoB,kBAAnC,GAAwD,UAAU6D,MAAV,EAAkB;AACtE,QAAIC,KAAK,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,WAAjC,EAA8C,WAA9C,EAA2D,UAA3D,EAAuE,YAAvE,EAAqF,SAArF,EACR,MADQ,EACA,QADA,EACUT,IADV,CACe,UAAU9C,KAAV,EAAiB;AAAE,aAAOsD,MAAM,KAAKtD,KAAlB;AAA0B,KAD5D,CAAZ;;AAEA,QAAIuD,KAAJ,EAAW;AACP,WAAKzF,KAAL,GAAa,EAAb;AACA,WAAKC,IAAL,GAAY,EAAZ;AACA,WAAKC,MAAL,GAAc,EAAd;AACH;;AACD,WAAOuF,KAAP;AACH,GATD;;AAUA5F,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCmF,iBAAnC,GAAuD,YAAY;AAC/D,QAAIhF,KAAK,GAAG,IAAZ;;AACA,QAAIiF,GAAG,GAAG,CAAV;AACA,SAAK5F,QAAL,GAAgB,EAAhB;AACA,QAAI6F,IAAI,GAAG,KAAK9F,MAAL,CAAY+C,aAAZ,CAA0BC,OAA1B,CAAkChB,MAA7C;AACA,QAAI+D,IAAI,GAAG,KAAK/F,MAAL,CAAYgD,OAAvB;AACA,QAAIgD,IAAI,GAAGD,IAAI,CAAC/D,MAAhB;;AACA,QAAIiE,SAAS,GAAG,UAAUC,MAAV,EAAkB;AAAE,aAAOA,MAAM,CAACC,OAAP,KACtC,CAACvF,KAAK,CAACZ,MAAN,CAAa+C,aAAb,CAA2BqD,iBAA5B,GAAgDxF,KAAK,CAACZ,MAAN,CAAa+C,aAAb,CAA2BC,OAA3B,CAAmCqD,OAAnC,CAA2CH,MAAM,CAACI,KAAlD,IAA2D,CAA3G,GAA+GJ,MAAM,CAACC,OADhF,CAAP;AACkG,KADtI;;AAEA,SAAKnG,MAAL,CAAY+C,aAAZ,CAA0BC,OAA1B,CAAkCb,OAAlC,CAA0C,UAAUoE,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAO5F,KAAK,CAACX,QAAN,CAAeuG,CAAf,IAAoB,CAAC5F,KAAK,CAACX,QAAN,CAAeuG,CAAC,GAAG,CAAnB,IAAwB,CAAzB,IAA8B,EAAzD;AAA8D,KAA1H;AACAC,IAAAA,KAAK,CAACtD,KAAN,CAAY,IAAZ,EAAkBsD,KAAK,CAACT,IAAD,CAAvB,EAA+B1C,GAA/B,CAAmC,YAAY;AAAE,aAAOuC,GAAG,EAAV;AAAe,KAAhE,EAAkE1D,OAAlE,CAA0E,UAAUsB,KAAV,EAAiBiD,CAAjB,EAAoB;AAC1FjD,MAAAA,KAAK,GAAGA,KAAK,GAAGqC,IAAhB;AACAlF,MAAAA,KAAK,CAACX,QAAN,CAAewD,KAAf,IAAwB,CAAC7C,KAAK,CAACX,QAAN,CAAewD,KAAK,GAAG,CAAvB,IAA4B,CAA7B,KAAmCwC,SAAS,CAACF,IAAI,CAACW,CAAD,CAAL,CAAT,GAAqBC,QAAQ,CAACZ,IAAI,CAACW,CAAD,CAAJ,CAAQ7B,KAAT,EAAgB,EAAhB,CAA7B,GAAmD,CAAtF,CAAxB;AACH,KAHD;AAIH,GAdD;;AAeA9E,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCwC,cAAnC,GAAoD,UAAU2D,OAAV,EAAmBnD,KAAnB,EAA0B;AAC1E,QAAI7C,KAAK,GAAG,IAAZ;;AACA,QAAIiG,YAAY,GAAGD,OAAO,CAAC,CAAD,CAA1B;AACA,QAAIrE,IAAI,GAAG,EAAX;AACAmC,IAAAA,MAAM,CAACD,IAAP,CAAY,KAAKvE,KAAjB,EAAwBiC,OAAxB,CAAgC,UAAU2E,GAAV,EAAe;AAC3C,UAAIvB,MAAM,CAACuB,GAAD,CAAN,GAAcrD,KAAlB,EAAyB;AACrBlB,QAAAA,IAAI,GAAGA,IAAI,CAACwE,MAAL,CAAYnG,KAAK,CAACV,KAAN,CAAY4G,GAAZ,CAAZ,CAAP;AACH;AACJ,KAJD;;AAKA,QAAKD,YAAY,IAAIA,YAAY,CAACG,SAA9B,IAA4CvD,KAAK,GAAG,CAAR,KAAc,CAA9D,EAAiE;AAC7D,aAAOmD,OAAP;AACH;;AACD,WAAO,KAAKK,YAAL,CAAkBL,OAAlB,EAA2BrE,IAA3B,CAAP;AACH,GAbD;;AAcAxC,EAAAA,wBAAwB,CAACU,SAAzB,CAAmCwG,YAAnC,GAAkD,UAAUL,OAAV,EAAmBrE,IAAnB,EAAyB;AACvE,QAAIsE,YAAY,GAAGD,OAAO,CAAC,CAAD,CAA1B;AACA,QAAIzB,MAAM,GAAG,CAAb;;AACA,QAAI0B,YAAY,IAAIA,YAAY,CAACG,SAAjC,EAA4C;AACxC,aAAOJ,OAAP;AACH;;AACD,QAAIM,SAAS,GAAGN,OAAO,CAAC1B,IAAR,CAAa,UAAUiC,GAAV,EAAe;AACxC,aAAO5E,IAAI,CAAC2C,IAAL,CAAU,UAAUkC,IAAV,EAAgBnD,KAAhB,EAAuB;AACpC,YAAIoD,GAAG,GAAGD,IAAI,IAAIA,IAAI,CAACjH,IAAL,CAAUmG,KAAV,KAAoBgB,SAA5B,IAAyCF,IAAI,CAACjH,IAAL,CAAUmG,KAAV,KAAoBa,GAAG,CAAChH,IAAJ,CAASmG,KAAtE,IACNc,IAAI,CAACjH,IAAL,CAAU2G,GAAV,KAAkBK,GAAG,CAAChH,IAAJ,CAAS2G,GAD/B;;AAEA,YAAIO,GAAJ,EAAS;AACLlC,UAAAA,MAAM,GAAGlB,KAAT;AACH;;AACD,eAAOoD,GAAP;AACH,OAPM,CAAP;AAQH,KATe,CAAhB;;AAUA,QAAIH,SAAJ,EAAe;AACXN,MAAAA,OAAO,CAACW,KAAR;AACAX,MAAAA,OAAO,GAAG,KAAKK,YAAL,CAAkBL,OAAlB,EAA2BrE,IAAI,CAACK,KAAL,CAAWuC,MAAX,CAA3B,CAAV;AACH;;AACD,WAAOyB,OAAP;AACH,GArBD;;AAsBA7G,EAAAA,wBAAwB,CAACU,SAAzB,CAAmC+G,OAAnC,GAA6C,YAAY;AACrD,QAAI5G,KAAK,GAAG,IAAZ;;AACA,QAAI2B,IAAI,GAAG,EAAX;AACAmC,IAAAA,MAAM,CAACD,IAAP,CAAY,KAAKvE,KAAjB,EAAwBiC,OAAxB,CAAgC,UAAU2E,GAAV,EAAe;AAAE,aAAOvE,IAAI,GAAGA,IAAI,CAACwE,MAAL,CAAYnG,KAAK,CAACV,KAAN,CAAY4G,GAAZ,CAAZ,CAAd;AAA8C,KAA/F;AACA,WAAOvE,IAAP;AACH,GALD;;AAMA,SAAOxC,wBAAP;AACH,CAjM6C,EAA9C;;AAkMA,SAASA,wBAAT","sourcesContent":["import { Browser } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.data = {};\n        this.groups = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var _this = this;\n        var info = notifyArgs.virtualInfo = notifyArgs.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var center = ~~(this.model.pageSize / 2);\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        this.checkAndResetCache(notifyArgs.requestType);\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            return result = this.parent.vcRows;\n        }\n        if (this.parent.enableColumnVirtualization) {\n            info.blockIndexes.forEach(function (value) {\n                if (_this.isBlockAvailable(value)) {\n                    _this.cache[value] = _this.rowModelGenerator.refreshRows(_this.cache[value]);\n                }\n            });\n        }\n        info.blockIndexes.forEach(function (value) {\n            if (!_this.isBlockAvailable(value)) {\n                var rows = _this.rowModelGenerator.generateRows(data, {\n                    virtualInfo: info, startIndex: _this.getStartIndex(value, data)\n                });\n                if (isGroupAdaptive(_this.parent) && !_this.parent.vcRows.length) {\n                    _this.parent.vRows = rows;\n                    _this.parent.vcRows = rows;\n                }\n                var median = void 0;\n                if (isGroupAdaptive(_this.parent)) {\n                    median = _this.model.pageSize / 2;\n                    if (!_this.isBlockAvailable(indexes[0])) {\n                        _this.cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if (!_this.isBlockAvailable(indexes[1])) {\n                        _this.cache[indexes[1]] = rows.slice(median, _this.model.pageSize);\n                    }\n                }\n                else {\n                    median = ~~Math.max(rows.length, _this.model.pageSize) / 2;\n                    if (!_this.isBlockAvailable(indexes[0])) {\n                        _this.cache[indexes[0]] = rows.slice(0, median);\n                    }\n                    if (!_this.isBlockAvailable(indexes[1])) {\n                        _this.cache[indexes[1]] = rows.slice(median);\n                    }\n                }\n            }\n            if (_this.parent.groupSettings.columns.length && !xAxis && _this.cache[value]) {\n                _this.cache[value] = _this.updateGroupRow(_this.cache[value], value);\n            }\n            result.push.apply(result, _this.cache[value]);\n            if (_this.isBlockAvailable(value)) {\n                loadedBlocks.push(value);\n            }\n        });\n        info.blockIndexes = loadedBlocks;\n        var grouping = 'records';\n        if (this.parent.allowGrouping) {\n            this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n        }\n        else {\n            this.parent.currentViewData = result.map(function (m) { return m.data; });\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.e-headercontent'); }\n        if (this.parent.getFrozenColumns()) {\n            content = content.querySelector('.e-movableheader');\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset, indx, input) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        this.parent.groupSettings.columns.forEach(function (c, n) { return _this.cOffsets[n] = (_this.cOffsets[n - 1] | 0) + 30; });\n        Array.apply(null, Array(cLen)).map(function () { return col++; }).forEach(function (block, i) {\n            block = block + gLen;\n            _this.cOffsets[block] = (_this.cOffsets[block - 1] | 0) + (isVisible(cols[i]) ? parseInt(cols[i].width, 10) : 0);\n        });\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var _this = this;\n        var currentFirst = current[0];\n        var rows = [];\n        Object.keys(this.cache).forEach(function (key) {\n            if (Number(key) < block) {\n                rows = rows.concat(_this.cache[key]);\n            }\n        });\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var _this = this;\n        var rows = [];\n        Object.keys(this.cache).forEach(function (key) { return rows = rows.concat(_this.cache[key]); });\n        return rows;\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"]},"metadata":{},"sourceType":"module"}