{"ast":null,"code":"import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\n\nvar CheckBoxFilter =\n/** @class */\nfunction () {\n  /**\n   * Constructor for checkbox filtering module\n   * @hidden\n   */\n  function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n    this.parent = parent;\n    this.isresetFocus = true;\n    this.checkBoxBase = new CheckBoxFilterBase(parent);\n    this.addEventListener();\n  }\n  /**\n   * To destroy the check box filter.\n   * @return {void}\n   * @hidden\n   */\n\n\n  CheckBoxFilter.prototype.destroy = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.openDialog = function (options) {\n    this.checkBoxBase.openDialog(options);\n    this.parent.log('column_type_missing', {\n      column: options.column\n    });\n  };\n\n  CheckBoxFilter.prototype.closeDialog = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  CheckBoxFilter.prototype.getModuleName = function () {\n    return 'checkboxFilter';\n  };\n\n  CheckBoxFilter.prototype.actionBegin = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  CheckBoxFilter.prototype.actionComplete = function (args) {\n    this.parent.trigger(events.actionComplete, args);\n  };\n\n  CheckBoxFilter.prototype.actionPrevent = function (args) {\n    if (isActionPrevent(this.parent)) {\n      this.parent.notify(events.preventBatch, args);\n      args.cancel = true;\n    }\n  };\n\n  CheckBoxFilter.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n    this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n    this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n  };\n\n  CheckBoxFilter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n    this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n    this.parent.off(events.fltrPrevent, this.actionPrevent);\n  };\n\n  return CheckBoxFilter;\n}();\n\nexport { CheckBoxFilter };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/actions/checkbox-filter.js"],"names":["events","isActionPrevent","CheckBoxFilterBase","CheckBoxFilter","parent","filterSettings","serviceLocator","isresetFocus","checkBoxBase","addEventListener","prototype","destroy","removeEventListener","closeDialog","openDialog","options","log","column","notify","restoreFocus","getModuleName","actionBegin","args","trigger","actionComplete","actionPrevent","preventBatch","cancel","isDestroyed","on","cBoxFltrBegin","cBoxFltrComplete","fltrPrevent","off"],"mappings":"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","sourcesContent":["import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\n * @hidden\n * `CheckBoxFilter` module is used to handle filtering action.\n */\nvar CheckBoxFilter = /** @class */ (function () {\n    /**\n     * Constructor for checkbox filtering module\n     * @hidden\n     */\n    function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n        this.parent = parent;\n        this.isresetFocus = true;\n        this.checkBoxBase = new CheckBoxFilterBase(parent);\n        this.addEventListener();\n    }\n    /**\n     * To destroy the check box filter.\n     * @return {void}\n     * @hidden\n     */\n    CheckBoxFilter.prototype.destroy = function () {\n        this.removeEventListener();\n        this.checkBoxBase.closeDialog();\n    };\n    CheckBoxFilter.prototype.openDialog = function (options) {\n        this.checkBoxBase.openDialog(options);\n        this.parent.log('column_type_missing', { column: options.column });\n    };\n    CheckBoxFilter.prototype.closeDialog = function () {\n        this.removeEventListener();\n        this.checkBoxBase.closeDialog();\n        if (this.isresetFocus) {\n            this.parent.notify(events.restoreFocus, {});\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CheckBoxFilter.prototype.getModuleName = function () {\n        return 'checkboxFilter';\n    };\n    CheckBoxFilter.prototype.actionBegin = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    CheckBoxFilter.prototype.actionComplete = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    CheckBoxFilter.prototype.actionPrevent = function (args) {\n        if (isActionPrevent(this.parent)) {\n            this.parent.notify(events.preventBatch, args);\n            args.cancel = true;\n        }\n    };\n    CheckBoxFilter.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n        this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n        this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n    };\n    CheckBoxFilter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n        this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n        this.parent.off(events.fltrPrevent, this.actionPrevent);\n    };\n    return CheckBoxFilter;\n}());\nexport { CheckBoxFilter };\n"]},"metadata":{},"sourceType":"module"}