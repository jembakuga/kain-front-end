{"ast":null,"code":"/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\n\nexport var ImageFormat;\n\n(function (ImageFormat) {\n  /**\n   * Specifies the type of `Unknown`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n  /**\n   * Specifies the type of `Bmp`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n  /**\n   * Specifies the type of `Emf`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n  /**\n   * Specifies the type of `Gif`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n  /**\n   * Specifies the type of `Jpeg`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n  /**\n   * Specifies the type of `Png`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n  /**\n   * Specifies the type of `Wmf`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n  /**\n   * Specifies the type of `Icon`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\n\n\nvar ImageDecoder =\n/** @class */\nfunction () {\n  /**\n   * Initialize the new instance for `image-decoder` class.\n   * @private\n   */\n  function ImageDecoder(stream) {\n    /**\n     * Specifies `format` of image.\n     * @hidden\n     * @private\n     */\n    this.mFormat = ImageFormat.Unknown;\n    /**\n     * `Bits per component`.\n     * @default 8\n     * @hidden\n     * @private\n     */\n\n    this.mbitsPerComponent = 8;\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @hidden\n     * @private\n     */\n\n    this.dictionaryProperties = new DictionaryProperties();\n    this.mStream = stream;\n    this.initialize();\n  }\n\n  Object.defineProperty(ImageDecoder.prototype, \"height\", {\n    /**\n     * Gets the `height` of image.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mHeight;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"width\", {\n    /**\n     * Gets the `width` of image.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n    /**\n     * Gets `bits per component`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mbitsPerComponent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"size\", {\n    /**\n     * Gets the `size` of an image data.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n    /**\n     * Gets the value of an `image data`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n    /**\n     * Gets the value of an `image data as number array`.\n     * @hidden\n     * @private\n     */\n    get: function () {\n      return this.mImageData.internalBuffer.buffer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Initialize` image data and image stream.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.prototype.initialize = function () {\n    if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n      this.mFormat = ImageFormat.Jpeg;\n      this.parseJpegImage();\n    }\n\n    this.reset();\n    this.mImageData = new ByteArray(this.mStream.count);\n    this.mStream.read(this.mImageData, 0, this.mImageData.count);\n  };\n  /**\n   * `Reset` stream position into 0.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.reset = function () {\n    this.mStream.position = 0;\n  };\n  /**\n   * `Parse` Jpeg image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.parseJpegImage = function () {\n    this.reset();\n    var imgData = new ByteArray(this.mStream.count);\n    this.mStream.read(imgData, 0, imgData.count);\n    var i = 4;\n    /* tslint:disable */\n\n    if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n      var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n\n      while (i + length_1 < imgData.count) {\n        i += length_1;\n\n        if (imgData.getBuffer(i + 1) === 192) {\n          this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n          this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n          return;\n        } else {\n          i += 2;\n          length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        }\n      }\n    }\n    /* tslint:enable */\n\n  };\n\n  Object.defineProperty(ImageDecoder.prototype, \"format\", {\n    /**\n     * Gets the image `format`.\n     * @private\n     * @hidden\n     */\n    get: function () {\n      return this.mFormat;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Checks if JPG`.\n   * @private\n   * @hidden\n   */\n\n  ImageDecoder.prototype.checkIfJpeg = function () {\n    this.reset();\n\n    for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n      if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n        return false;\n      }\n\n      this.mStream.position++;\n    }\n\n    return true;\n  };\n  /**\n   * Return image `dictionary`.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getImageDictionary = function () {\n    if (this.mFormat === ImageFormat.Jpeg) {\n      var tempArrayBuffer = this.imageData.internalBuffer.length;\n      this.imageStream = new PdfStream();\n      this.imageStream.isImage = true;\n      var tempString = '';\n      var decodedString = '';\n\n      for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n        tempString += String.fromCharCode(null, this.mStream.readByte(i));\n      }\n\n      for (var i = 0; i < tempString.length; i++) {\n        if (i % 2 !== 0) {\n          decodedString += tempString[i];\n        }\n      }\n\n      this.imageStream.data = [decodedString];\n      this.imageStream.compress = false;\n      this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n      this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n      this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n      this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n      this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n      this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n      this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n      this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n      return this.imageStream;\n    } else {\n      return this.imageStream;\n    }\n  };\n  /**\n   * Return `colorSpace` of an image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getColorSpace = function () {\n    return this.dictionaryProperties.deviceRgb;\n  };\n  /**\n   * Return `decode parameters` of an image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getDecodeParams = function () {\n    var decodeParams = new PdfDictionary();\n    decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n    decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n    decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n    decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n    decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n    return decodeParams;\n  };\n  /**\n   * Number array for `png header`.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n  /**\n   * Number Array for `jpeg header`.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.mJpegHeader = [255, 216];\n  /**\n   * Number array for `gif header`.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.GIF_HEADER = 'G,I,F,8';\n  /**\n   * Number array for `bmp header.`\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.BMP_HEADER = 'B,M';\n  return ImageDecoder;\n}();\n\nexport { ImageDecoder };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js"],"names":["ByteArray","PdfStream","DictionaryProperties","PdfName","PdfNumber","PdfBoolean","PdfDictionary","ImageFormat","ImageDecoder","stream","mFormat","Unknown","mbitsPerComponent","dictionaryProperties","mStream","initialize","Object","defineProperty","prototype","get","mHeight","enumerable","configurable","mWidth","mImageData","count","internalBuffer","buffer","checkIfJpeg","Jpeg","parseJpegImage","reset","read","position","imgData","i","String","fromCharCode","getBuffer","length_1","mJpegHeader","length","readByte","getImageDictionary","tempArrayBuffer","imageData","imageStream","isImage","tempString","decodedString","imageDataAsNumberArray","byteLength","data","compress","items","setValue","type","xObject","subtype","image","width","height","bitsPerComponent","filter","dctdecode","colorSpace","getColorSpace","decodeParms","getDecodeParams","deviceRgb","decodeParams","columns","blackIs1","k","predictor","mPngHeader","GIF_HEADER","BMP_HEADER"],"mappings":"AAAA;;;AAGA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,oBAAT,QAAqC,gDAArC;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA;;;;;AAIA,OAAO,IAAIC,WAAJ;;AACP,CAAC,UAAUA,WAAV,EAAuB;AACpB;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,SAAD,CAAX,GAAyB,CAA1B,CAAX,GAA0C,SAA1C;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAvB,CAAX,GAAuC,MAAvC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,KAAD,CAAX,GAAqB,CAAtB,CAAX,GAAsC,KAAtC;AACA;;;;;;AAKAA,EAAAA,WAAW,CAACA,WAAW,CAAC,MAAD,CAAX,GAAsB,CAAvB,CAAX,GAAuC,MAAvC;AACH,CAjDD,EAiDGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAjDd;AAkDA;;;;;;AAIA,IAAIC,YAAY;AAAG;AAAe,YAAY;AAC1C;;;;AAIA,WAASA,YAAT,CAAsBC,MAAtB,EAA8B;AAC1B;;;;;AAKA,SAAKC,OAAL,GAAeH,WAAW,CAACI,OAA3B;AACA;;;;;;;AAMA,SAAKC,iBAAL,GAAyB,CAAzB;AACA;;;;;;AAKA,SAAKC,oBAAL,GAA4B,IAAIX,oBAAJ,EAA5B;AACA,SAAKY,OAAL,GAAeL,MAAf;AACA,SAAKM,UAAL;AACH;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,QAA9C,EAAwD;AACpD;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,OAAZ;AACH,KARmD;AASpDC,IAAAA,UAAU,EAAE,IATwC;AAUpDC,IAAAA,YAAY,EAAE;AAVsC,GAAxD;AAYAN,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,OAA9C,EAAuD;AACnD;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,MAAZ;AACH,KARkD;AASnDF,IAAAA,UAAU,EAAE,IATuC;AAUnDC,IAAAA,YAAY,EAAE;AAVqC,GAAvD;AAYAN,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,kBAA9C,EAAkE;AAC9D;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKP,iBAAZ;AACH,KAR6D;AAS9DS,IAAAA,UAAU,EAAE,IATkD;AAU9DC,IAAAA,YAAY,EAAE;AAVgD,GAAlE;AAYAN,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,MAA9C,EAAsD;AAClD;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKK,UAAL,CAAgBC,KAAvB;AACH,KARiD;AASlDJ,IAAAA,UAAU,EAAE,IATsC;AAUlDC,IAAAA,YAAY,EAAE;AAVoC,GAAtD;AAYAN,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,WAA9C,EAA2D;AACvD;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKK,UAAZ;AACH,KARsD;AASvDH,IAAAA,UAAU,EAAE,IAT2C;AAUvDC,IAAAA,YAAY,EAAE;AAVyC,GAA3D;AAYAN,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,wBAA9C,EAAwE;AACpE;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKK,UAAL,CAAgBE,cAAhB,CAA+BC,MAAtC;AACH,KARmE;AASpEN,IAAAA,UAAU,EAAE,IATwD;AAUpEC,IAAAA,YAAY,EAAE;AAVsD,GAAxE;AAYA;;;;;;AAKAd,EAAAA,YAAY,CAACU,SAAb,CAAuBH,UAAvB,GAAoC,YAAY;AAC5C,QAAI,KAAKL,OAAL,KAAiBH,WAAW,CAACI,OAA7B,IAAwC,KAAKiB,WAAL,EAA5C,EAAgE;AAC5D,WAAKlB,OAAL,GAAeH,WAAW,CAACsB,IAA3B;AACA,WAAKC,cAAL;AACH;;AACD,SAAKC,KAAL;AACA,SAAKP,UAAL,GAAkB,IAAIxB,SAAJ,CAAc,KAAKc,OAAL,CAAaW,KAA3B,CAAlB;AACA,SAAKX,OAAL,CAAakB,IAAb,CAAkB,KAAKR,UAAvB,EAAmC,CAAnC,EAAsC,KAAKA,UAAL,CAAgBC,KAAtD;AACH,GARD;AASA;;;;;;;AAKAjB,EAAAA,YAAY,CAACU,SAAb,CAAuBa,KAAvB,GAA+B,YAAY;AACvC,SAAKjB,OAAL,CAAamB,QAAb,GAAwB,CAAxB;AACH,GAFD;AAGA;;;;;;;AAKAzB,EAAAA,YAAY,CAACU,SAAb,CAAuBY,cAAvB,GAAwC,YAAY;AAChD,SAAKC,KAAL;AACA,QAAIG,OAAO,GAAG,IAAIlC,SAAJ,CAAc,KAAKc,OAAL,CAAaW,KAA3B,CAAd;AACA,SAAKX,OAAL,CAAakB,IAAb,CAAkBE,OAAlB,EAA2B,CAA3B,EAA8BA,OAAO,CAACT,KAAtC;AACA,QAAIU,CAAC,GAAG,CAAR;AACA;;AACA,QAAIC,MAAM,CAACC,YAAP,CAAoBH,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAApB,MAAkD,GAAlD,IAAyDC,MAAM,CAACC,YAAP,CAAoBH,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAApB,MAAkD,GAA3G,IAAkHC,MAAM,CAACC,YAAP,CAAoBH,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAApB,MAAkD,GAApK,IAA2KC,MAAM,CAACC,YAAP,CAAoBH,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAApB,MAAkD,GAA7N,IAAoOD,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,MAA6B,CAArQ,EAAwQ;AACpQ,UAAII,QAAQ,GAAGL,OAAO,CAACI,SAAR,CAAkBH,CAAlB,IAAuB,GAAvB,GAA6BD,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAA5C;;AACA,aAAOA,CAAC,GAAGI,QAAJ,GAAeL,OAAO,CAACT,KAA9B,EAAqC;AACjCU,QAAAA,CAAC,IAAII,QAAL;;AACA,YAAIL,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,MAA6B,GAAjC,EAAsC;AAClC,eAAKf,OAAL,GAAec,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,IAA2B,GAA3B,GAAiCD,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAAhD;AACA,eAAKZ,MAAL,GAAcW,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,IAA2B,GAA3B,GAAiCD,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAA/C;AACA;AACH,SAJD,MAKK;AACDA,UAAAA,CAAC,IAAI,CAAL;AACAI,UAAAA,QAAQ,GAAGL,OAAO,CAACI,SAAR,CAAkBH,CAAlB,IAAuB,GAAvB,GAA6BD,OAAO,CAACI,SAAR,CAAkBH,CAAC,GAAG,CAAtB,CAAxC;AACH;AACJ;AACJ;AACD;;AACH,GAtBD;;AAuBAnB,EAAAA,MAAM,CAACC,cAAP,CAAsBT,YAAY,CAACU,SAAnC,EAA8C,QAA9C,EAAwD;AACpD;;;;;AAKAC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKT,OAAZ;AACH,KARmD;AASpDW,IAAAA,UAAU,EAAE,IATwC;AAUpDC,IAAAA,YAAY,EAAE;AAVsC,GAAxD;AAYA;;;;;;AAKAd,EAAAA,YAAY,CAACU,SAAb,CAAuBU,WAAvB,GAAqC,YAAY;AAC7C,SAAKG,KAAL;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,YAAY,CAACgC,WAAb,CAAyBC,MAA7C,EAAqDN,CAAC,EAAtD,EAA0D;AACtD,UAAI3B,YAAY,CAACgC,WAAb,CAAyBL,CAAzB,MAAgC,KAAKrB,OAAL,CAAa4B,QAAb,CAAsBP,CAAtB,CAApC,EAA8D;AAC1D,eAAO,KAAP;AACH;;AACD,WAAKrB,OAAL,CAAamB,QAAb;AACH;;AACD,WAAO,IAAP;AACH,GATD;AAUA;;;;;;;AAKAzB,EAAAA,YAAY,CAACU,SAAb,CAAuByB,kBAAvB,GAA4C,YAAY;AACpD,QAAI,KAAKjC,OAAL,KAAiBH,WAAW,CAACsB,IAAjC,EAAuC;AACnC,UAAIe,eAAe,GAAG,KAAKC,SAAL,CAAenB,cAAf,CAA8Be,MAApD;AACA,WAAKK,WAAL,GAAmB,IAAI7C,SAAJ,EAAnB;AACA,WAAK6C,WAAL,CAAiBC,OAAjB,GAA2B,IAA3B;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKe,sBAAL,CAA4BC,UAAhD,EAA4DhB,CAAC,EAA7D,EAAiE;AAC7Da,QAAAA,UAAU,IAAIZ,MAAM,CAACC,YAAP,CAAoB,IAApB,EAA0B,KAAKvB,OAAL,CAAa4B,QAAb,CAAsBP,CAAtB,CAA1B,CAAd;AACH;;AACD,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,UAAU,CAACP,MAA/B,EAAuCN,CAAC,EAAxC,EAA4C;AACxC,YAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACbc,UAAAA,aAAa,IAAID,UAAU,CAACb,CAAD,CAA3B;AACH;AACJ;;AACD,WAAKW,WAAL,CAAiBM,IAAjB,GAAwB,CAACH,aAAD,CAAxB;AACA,WAAKH,WAAL,CAAiBO,QAAjB,GAA4B,KAA5B;AACA,WAAKP,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0B2C,IAA1D,EAAgE,IAAIrD,OAAJ,CAAY,KAAKU,oBAAL,CAA0B4C,OAAtC,CAAhE;AACA,WAAKX,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0B6C,OAA1D,EAAmE,IAAIvD,OAAJ,CAAY,KAAKU,oBAAL,CAA0B8C,KAAtC,CAAnE;AACA,WAAKb,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0B+C,KAA1D,EAAiE,IAAIxD,SAAJ,CAAc,KAAKwD,KAAnB,CAAjE;AACA,WAAKd,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0BgD,MAA1D,EAAkE,IAAIzD,SAAJ,CAAc,KAAKyD,MAAnB,CAAlE;AACA,WAAKf,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0BiD,gBAA1D,EAA4E,IAAI1D,SAAJ,CAAc,KAAK0D,gBAAnB,CAA5E;AACA,WAAKhB,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0BkD,MAA1D,EAAkE,IAAI5D,OAAJ,CAAY,KAAKU,oBAAL,CAA0BmD,SAAtC,CAAlE;AACA,WAAKlB,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0BoD,UAA1D,EAAsE,IAAI9D,OAAJ,CAAY,KAAK+D,aAAL,EAAZ,CAAtE;AACA,WAAKpB,WAAL,CAAiBQ,KAAjB,CAAuBC,QAAvB,CAAgC,KAAK1C,oBAAL,CAA0BsD,WAA1D,EAAuE,KAAKC,eAAL,EAAvE;AACA,aAAO,KAAKtB,WAAZ;AACH,KAzBD,MA0BK;AACD,aAAO,KAAKA,WAAZ;AACH;AACJ,GA9BD;AA+BA;;;;;;;AAKAtC,EAAAA,YAAY,CAACU,SAAb,CAAuBgD,aAAvB,GAAuC,YAAY;AAC/C,WAAO,KAAKrD,oBAAL,CAA0BwD,SAAjC;AACH,GAFD;AAGA;;;;;;;AAKA7D,EAAAA,YAAY,CAACU,SAAb,CAAuBkD,eAAvB,GAAyC,YAAY;AACjD,QAAIE,YAAY,GAAG,IAAIhE,aAAJ,EAAnB;AACAgE,IAAAA,YAAY,CAAChB,KAAb,CAAmBC,QAAnB,CAA4B,KAAK1C,oBAAL,CAA0B0D,OAAtD,EAA+D,IAAInE,SAAJ,CAAc,KAAKwD,KAAnB,CAA/D;AACAU,IAAAA,YAAY,CAAChB,KAAb,CAAmBC,QAAnB,CAA4B,KAAK1C,oBAAL,CAA0B2D,QAAtD,EAAgE,IAAInE,UAAJ,CAAe,IAAf,CAAhE;AACAiE,IAAAA,YAAY,CAAChB,KAAb,CAAmBC,QAAnB,CAA4B,KAAK1C,oBAAL,CAA0B4D,CAAtD,EAAyD,IAAIrE,SAAJ,CAAc,CAAC,CAAf,CAAzD;AACAkE,IAAAA,YAAY,CAAChB,KAAb,CAAmBC,QAAnB,CAA4B,KAAK1C,oBAAL,CAA0B6D,SAAtD,EAAiE,IAAItE,SAAJ,CAAc,EAAd,CAAjE;AACAkE,IAAAA,YAAY,CAAChB,KAAb,CAAmBC,QAAnB,CAA4B,KAAK1C,oBAAL,CAA0BiD,gBAAtD,EAAwE,IAAI1D,SAAJ,CAAc,KAAK0D,gBAAnB,CAAxE;AACA,WAAOQ,YAAP;AACH,GARD;AASA;;;;;;;AAKA9D,EAAAA,YAAY,CAACmE,UAAb,GAA0B,CAAC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAA1B;AACA;;;;;;AAKAnE,EAAAA,YAAY,CAACgC,WAAb,GAA2B,CAAC,GAAD,EAAM,GAAN,CAA3B;AACA;;;;;;AAKAhC,EAAAA,YAAY,CAACoE,UAAb,GAA0B,SAA1B;AACA;;;;;;AAKApE,EAAAA,YAAY,CAACqE,UAAb,GAA0B,KAA1B;AACA,SAAOrE,YAAP;AACH,CApQiC,EAAlC;;AAqQA,SAASA,YAAT","sourcesContent":["/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n"]},"metadata":{},"sourceType":"module"}