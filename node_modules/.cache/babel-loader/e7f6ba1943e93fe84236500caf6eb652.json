{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, parentsUntil, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid selection module\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables       \n\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n\n    this.preventFocus = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    /**\n     * @hidden\n     */\n\n    this.autoFillRLselection = true;\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n  /**\n   * The function used to trigger onActionBegin\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n\n  Selection.prototype.fDataUpdate = function (args) {\n    if (args.cellIndex || args.rowIndex) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n  };\n\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.getFrozenColumns() && this.parent.getContent().querySelector('.e-movablecontent')) {\n      return gObj.getMovableRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n    var added = 'addedRecords';\n    var deleted = 'deletedRecords';\n\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectData;\n    var isRemoved = false;\n\n    if (gObj.enableVirtualization && index > -1) {\n      if (selectedRow) {\n        selectData = gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        var prevSelectedData = this.parent.getSelectedRecords();\n\n        if (prevSelectedData.length > 0) {\n          this.clearRowSelection();\n        }\n\n        this.parent.notify(events.selectVirtualRow, {\n          selectedIndex: index\n        });\n        return;\n      }\n    } else {\n      selectData = this.getCurrentBatchRecordChanges()[index];\n    }\n\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? index === this.selectedRowIndexes[0] : false;\n    var args;\n    var can = 'cancel';\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        cancel: false\n      };\n      args = this.addMovableArgs(args, selectedMovableRow);\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        return;\n      }\n\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n\n      if (isRowSelected && _this.selectionSettings.persistSelection) {\n        _this.clearSelectedRow(index);\n\n        isRemoved = true;\n        _this.removed = isRemoved;\n\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection) {\n        _this.selectRowCallBack();\n      }\n\n      if (!_this.selectionSettings.persistSelection) {\n        _this.selectRowCheck = true;\n\n        _this.clearRow();\n      }\n    };\n  };\n\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n\n        if (gObj.getFrozenColumns()) {\n          this.updateRowSelection(selectedMovableRow, index);\n        }\n      }\n\n      this.selectRowIndex(index);\n    }\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget\n      };\n      args = this.addMovableArgs(args, selectedMovableRow);\n      this.onActionComplete(args, events.rowSelected);\n    }\n\n    this.updateRowProps(index);\n  };\n\n  Selection.prototype.addMovableArgs = function (targetObj, mRow) {\n    if (this.parent.getFrozenColumns()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      targetObj = __assign({}, targetObj, mObj);\n    }\n\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n  /**\n   * Selects a collection of rows by index.\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    var selectedRow = gObj.getRowByIndex(rowIndex);\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var frzCols = gObj.getFrozenColumns();\n    var can = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[rowIndexes[0]];\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      cancel: false,\n      rowIndexes: rowIndexes,\n      row: selectedRow,\n      rowIndex: rowIndex,\n      target: this.actualTarget,\n      prevRow: gObj.getRows()[this.prevRowIndex],\n      previousRowIndex: this.prevRowIndex,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      data: selectedData\n    };\n    args = this.addMovableArgs(args, selectedMovableRow);\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        return;\n      }\n\n      _this.clearRow();\n\n      _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n          var rowIdx = rowIndexes_1[_i];\n\n          _this.updateRowSelection(gObj.getRowByIndex(rowIdx), rowIdx);\n\n          if (frzCols) {\n            _this.updateRowSelection(gObj.getMovableRowByIndex(rowIdx), rowIdx);\n          }\n\n          _this.updateRowProps(rowIndex);\n        }\n      } else {\n        _this.updateRowSelection(gObj.getRowByIndex(rowIndex), rowIndex);\n\n        if (frzCols) {\n          _this.updateRowSelection(gObj.getMovableRowByIndex(rowIndex), rowIndex);\n        }\n\n        _this.updateRowProps(rowIndex);\n      }\n\n      args = {\n        rowIndexes: rowIndexes,\n        row: selectedRow,\n        rowIndex: rowIndex,\n        target: _this.actualTarget,\n        prevRow: gObj.getRows()[_this.prevRowIndex],\n        previousRowIndex: _this.prevRowIndex,\n        data: isBlazor() ? selectedData : _this.getSelectedRecords(),\n        isInteracted: _this.isInteracted\n      };\n      args = _this.addMovableArgs(args, selectedMovableRow);\n\n      _this.onActionComplete(args, events.rowSelected);\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   * @param  {number} startIndex - Specifies the row indexes.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    var _loop_1 = function (rowIndex) {\n      var rowObj = this_1.getRowObj(rowIndex);\n      var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n      this_1.selectRowIndex(rowIndex);\n\n      if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n        this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n\n        if (this_1.isCancelDeSelect) {\n          return {\n            value: void 0\n          };\n        }\n\n        this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n        this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n        selectedRow.removeAttribute('aria-selected');\n        this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n\n        if (selectedMovableRow) {\n          this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n        this_1.isInteracted = false;\n      } else {\n        args = {\n          cancel: false,\n          data: rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRow,\n          target: this_1.actualTarget,\n          prevRow: gObj.getRows()[this_1.prevRowIndex],\n          previousRowIndex: this_1.prevRowIndex,\n          isCtrlPressed: this_1.isMultiCtrlRequest,\n          isShiftPressed: this_1.isMultiShiftRequest,\n          foreignKeyData: rowObj.foreignKeyData\n        };\n        args = this_1.addMovableArgs(args, selectedMovableRow);\n        this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n          if (!isNullOrUndefined(args) && args[can] === true) {\n            return;\n          }\n\n          if (_this.isSingleSel()) {\n            _this.clearRow();\n          }\n\n          _this.updateRowSelection(selectedRow, rowIndex);\n\n          if (frzCols) {\n            _this.updateRowSelection(selectedMovableRow, rowIndex);\n          }\n        });\n      }\n\n      if (!isUnSelected) {\n        args = {\n          data: rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRow,\n          target: this_1.actualTarget,\n          prevRow: gObj.getRows()[this_1.prevRowIndex],\n          previousRowIndex: this_1.prevRowIndex,\n          foreignKeyData: rowObj.foreignKeyData\n        };\n        args = this_1.addMovableArgs(args, selectedMovableRow);\n        this_1.onActionComplete(args, events.rowSelected);\n      }\n\n      this_1.updateRowProps(rowIndex);\n\n      if (this_1.isSingleSel()) {\n        return \"break\";\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n      var rowIndex = rowIndexes_2[_i];\n\n      var state_1 = _loop_1(rowIndex);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = [];\n\n    var _a = startIndex <= endIndex ? {\n      i: startIndex,\n      max: endIndex\n    } : {\n      i: endIndex,\n      max: startIndex\n    },\n        i = _a.i,\n        max = _a.max;\n\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n\n    return indexes;\n  };\n\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.target) {\n      var selectedEle = this.target.parentElement;\n\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n\n    if (this.parent.isPersistSelection && !isNullOrUndefined(selectedRow)) {\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (pKey_1 === null) {\n        return;\n      }\n\n      rowObj.isSelected = chkState;\n\n      if (chkState) {\n        this.selectedRowState[pKey_1] = chkState;\n\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n\n  Selection.prototype.updatePersistDelete = function (pKey) {\n    var _this = this;\n\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n    }\n  };\n\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n\n    if (this.parent.getFrozenColumns() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n\n      if (!target) {\n        return;\n      }\n\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearSelection = function () {\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n\n      this.isInteracted = false;\n\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.prevRowIndex = undefined;\n      this.enableSelectMultiTouch = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var rowIndex_1 = [];\n      var frzCols = gObj.getFrozenColumns();\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n      var currentViewData = this.parent.getCurrentViewRecords();\n\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n\n        if (frzCols) {\n          mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n        }\n      }\n\n      if (this.selectionSettings.persistSelection) {\n        this.isInteracted = this.checkSelectAllClicked ? true : false;\n      }\n\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n\n              _this.updatePersistSelectedData(true);\n            }\n          }\n\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n\n            _this.clearRowCheck = false;\n\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n\n              _this.selectRowCheck = false;\n            }\n          }\n\n          return;\n        }\n\n        rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }).forEach(function (ele) {\n          if (!_this.disableUI || isBlazor()) {\n            ele.removeAttribute('aria-selected');\n\n            _this.addRemoveClassesForRow(ele, false, true, 'e-selectionbackground', 'e-active');\n          }\n\n          _this.updatePersistCollection(ele, false);\n\n          _this.updateCheckBoxes(ele);\n        });\n\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n\n          if (movableRow) {\n            if (!_this.disableUI || isBlazor()) {\n              movableRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updatePersistCollection(movableRow, false);\n          }\n        }\n\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n\n        _this.selectRowIndex(-1);\n\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1);\n\n        _this.isInteracted = false;\n\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n\n          _this.clearRowCheck = false;\n\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n\n            _this.selectRowCheck = false;\n          }\n        }\n      });\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack) {\n    var _this = this;\n\n    if (this.selectionSettings.persistSelection && this.isInteracted || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var rowDeselectObj = {\n        rowIndex: rowIndex,\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' ? this.persistSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted\n      };\n\n      if (!isBlazor() || this.parent.isJsComponent) {\n        var rowInString = 'row';\n        rowDeselectObj[rowInString] = row;\n      } else {\n        var rowIndex_2 = 'rowIndex';\n        var data_2 = 'data';\n        rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n        rowDeselectObj[data_2] = rowDeselectObj[data_2][rowDeselectObj[data_2].length - 1];\n      }\n\n      this.parent.trigger(type, this.parent.getFrozenColumns() ? __assign({}, rowDeselectObj, {\n        mRow: mRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n\n        if (!_this.isCancelDeSelect || !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n        }\n\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n\n    return {};\n  };\n\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var frzCols = gObj.getFrozenColumns();\n\n    if (frzCols) {\n      if (cellIndex.cellIndex >= frzCols) {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n\n    var selectedTable;\n    var cIdx;\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n\n      if (!isBlazor() || this.parent.isJsComponent) {\n        var currentCell = 'currentCell';\n        args[currentCell] = selectedCell;\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      }\n\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n\n      _this.clearCell();\n\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isToggle) {\n        var args = {\n          data: selectedData,\n          cellIndex: cellIndex,\n          currentCell: selectedCell,\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n\n        if (!isBlazor()) {\n          var previousRowCellIndex = 'previousRowCellIndex';\n          args[previousRowCellIndex] = _this.prevECIdxs;\n        }\n\n        _this.updateCellProps(cellIndex, cellIndex);\n\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      _this.clearCell();\n\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n\n        cellIndexes = [];\n\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n\n          if (!selectedCell) {\n            continue;\n          }\n\n          cellIndexes.push(j);\n\n          _this.updateCellSelection(selectedCell);\n\n          _this.addAttribute(selectedCell);\n        }\n\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n\n      var cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: edIndex,\n        currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n        selectedRowCellIndex: _this.selectedRowCellIndexes,\n        previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n      };\n\n      if (!isBlazor()) {\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n      }\n\n      _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var cellSelectArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n\n        if (!selectedCell) {\n          continue;\n        }\n\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      selectedRowCellIndex: this.selectedRowCellIndexes,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   * @param  {IIndex} startIndex - Defines the collection of row and column index.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedTable;\n    var cIdx;\n    var selectedCell;\n    var frzCols = gObj.getFrozenColumns();\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    this.hideAutoFill();\n    var rowObj;\n\n    if (frzCols && cellIndexes[0].cellIndex >= frzCols) {\n      rowObj = gObj.getMovableRowsObject()[cellIndexes[0].rowIndex];\n    } else {\n      rowObj = this.getRowObj(cellIndexes[0].rowIndex);\n    }\n\n    var foreignKeyData = [];\n\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      foreignKeyData.push(rowObj.cells[frzCols && cellIndexes[0].cellIndex >= frzCols ? cellIndex.cellIndex - frzCols : cellIndex.cellIndex].foreignKeyData);\n      var args = {\n        cancel: false,\n        data: selectedData,\n        cellIndex: cellIndexes[0],\n        isShiftPressed: this.isMultiShiftRequest,\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n\n      if (!isBlazor()) {\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      }\n\n      var isUnSelected = index > -1;\n\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isUnSelected) {\n        var cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          currentCell: selectedCell,\n          previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n          selectedRowCellIndex: this.selectedRowCellIndexes\n        };\n\n        if (!isBlazor()) {\n          var previousRowCellIndex = 'previousRowCellIndex';\n          cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n      }\n\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var cells;\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (index >= frzCols) {\n        cells = this.parent.getMovableDataRows()[rowIndex] && this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n      }\n    }\n\n    if (!cells) {\n      cells = this.parent.getDataRows()[rowIndex] && this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    }\n\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n\n        if (colIndex === index) {\n          if (frzCols) {\n            if (index >= frzCols) {\n              m += frzCols;\n            }\n          }\n\n          return m;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n  };\n\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n\n    if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    selectedCell.classList.add('e-cellselectionbackground');\n\n    if (selectedCell.classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n\n    this.addAttribute(selectedCell);\n  };\n\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var selectedTable = void 0;\n      var frzCols = gObj.getFrozenColumns();\n      this.hideAutoFill();\n\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            if (rowCell[i].cellIndexes[j] < frzCols) {\n              cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n            } else {\n              cells.push(gObj.getMovableCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n            }\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n\n      if (this.bdrBottom) {\n        this.hideBorders();\n      }\n\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n      this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n    }\n  };\n\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n\n    if (gObj.getFrozenColumns()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n    }\n\n    var cells = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n      } else {\n        var td = parentsUntil(e.target, 'e-rowcell');\n\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      if (!this.bdrBottom) {\n        this.createBorders();\n      }\n\n      this.positionBorders();\n    } else {\n      this.hideBorders();\n    }\n  };\n\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n\n    if (!this.startCell || !this.bdrLeft || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n\n    this.showBorders();\n    var stOff = this.startCell.getBoundingClientRect();\n    var endOff = this.endCell.getBoundingClientRect();\n    var colWidth = this.isLastCell(this.endCell) ? 2 : 0;\n    var rowHeight = this.isLastRow(this.endCell) ? 2 : 0;\n    var parentOff = this.startCell.offsetParent.getBoundingClientRect();\n    this.bdrLeft.style.left = stOff.left - parentOff.left + 'px';\n    this.bdrLeft.style.top = stOff.top - parentOff.top + 'px';\n    this.bdrLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + 'px' : endOff.height + 'px';\n    this.bdrRight.style.left = endOff.left - parentOff.left + endOff.width - colWidth + 'px';\n    this.bdrRight.style.top = this.bdrLeft.style.top;\n    this.bdrRight.style.height = parseInt(this.bdrLeft.style.height, 10) - rowHeight + 'px';\n    this.bdrTop.style.left = this.bdrLeft.style.left;\n    this.bdrTop.style.top = this.bdrRight.style.top;\n    this.bdrTop.style.width = parseInt(this.bdrRight.style.left, 10) - parseInt(this.bdrLeft.style.left, 10) + 1 + 'px';\n    this.bdrBottom.style.left = this.bdrLeft.style.left;\n    this.bdrBottom.style.top = parseInt(this.bdrLeft.style.top, 10) + parseInt(this.bdrLeft.style.height, 10) - rowHeight + 'px';\n    this.bdrBottom.style.width = this.bdrTop.style.width;\n  };\n\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrLeft) {\n      this.bdrLeft = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrRight = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrBottom = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrTop = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrtop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showBorders = function () {\n    if (this.bdrLeft) {\n      this.bdrLeft.style.display = '';\n      this.bdrRight.style.display = '';\n      this.bdrBottom.style.display = '';\n      this.bdrTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideBorders = function () {\n    if (this.bdrLeft) {\n      this.bdrLeft.style.display = 'none';\n      this.bdrRight.style.display = 'none';\n      this.bdrBottom.style.display = 'none';\n      this.bdrTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n\n    this.positionAFBorders();\n  };\n\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n\n    this.showBorders();\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var colWidth = this.isLastCell(this.endAFCell) ? 2 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    this.bdrAFLeft.style.left = stOff.left - parentOff.left + 'px';\n    this.bdrAFLeft.style.top = stOff.top - parentOff.top + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + 'px' : endOff.height + 'px';\n    this.bdrAFRight.style.left = endOff.left - parentOff.left + endOff.width - colWidth + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) - rowHeight + 'px';\n    this.bdrAFTop.style.left = this.bdrAFLeft.style.left;\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) + 1 + 'px';\n    this.bdrAFBottom.style.left = this.bdrAFLeft.style.left;\n    this.bdrAFBottom.style.top = parseInt(this.bdrAFLeft.style.top, 10) + parseInt(this.bdrAFLeft.style.height, 10) - rowHeight + 'px';\n    this.bdrAFBottom.style.width = this.bdrAFTop.style.width;\n  };\n\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  };\n  /* tslint:disable-next-line:max-func-body-length */\n\n\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n    var col;\n\n    switch (true) {\n      //direction         \n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, 'e-rowcell'):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = [].slice.call(this.parent.getDataRows()[i].querySelectorAll('.e-cellselectionbackground'));\n            var c = 0;\n\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n\n        break;\n\n      case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = [].slice.call(this.parent.getDataRows()[i].querySelectorAll('.e-cellselectionbackground'));\n            cells.reverse();\n            var c = 0;\n\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n\n        break;\n\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = trIdx;\n\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n\n            var cells = [].slice.call(this.parent.getDataRows()[r].querySelectorAll('.e-cellselectionbackground'));\n            var c = 0;\n            r--;\n\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n\n        break;\n\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = this.startIndex;\n\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n\n            var cells = [].slice.call(this.parent.getDataRows()[r].querySelectorAll('.e-cellselectionbackground'));\n            r++;\n            var c = 0;\n\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n\n    if (this.element) {\n      remove(this.element);\n    }\n\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n    } else {\n      this.mUPTarget = null;\n    }\n\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n\n    if (this.isAutoFillSel) {\n      this.startAFCell = this.startCell;\n      var lastCell = parentsUntil(e.target, 'e-rowcell');\n      this.endAFCell = lastCell ? lastCell : this.endAFCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n  };\n\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var cells = [].slice.call(this.parent.getDataRows()[this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex].querySelectorAll('.e-cellselectionbackground'));\n\n      if (!this.parent.element.querySelector('#' + this.parent.element.id + '_autofill')) {\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n      }\n\n      var cell = cells[cells.length - 1];\n\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 5 : 0;\n        this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 3 - rowHeight + 'px';\n      }\n\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n\n  Selection.prototype.mouseDownHandler = function (e) {\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n\n    if (gridElement && gridElement.id !== gObj.element.id) {\n      return;\n    }\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n\n    this.updateStartEndCells();\n\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n  };\n\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.initialEnd, this.initializeSelection, this);\n    this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.cellFocused, this.onCellFocused, this);\n    this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n    this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n    this.parent.on(events.contentReady, this.initialEnd, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n    this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.uiUpdate, this.enableAfterRender);\n    this.parent.off(events.initialEnd, this.initializeSelection);\n    this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n    this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.cellFocused, this.onCellFocused);\n    this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n    this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.off(events.rowsRemoved, this.rowsRemoved);\n    this.parent.off(events.headerRefreshed, this.refreshHeader);\n    this.removeEventListener_checkbox();\n  };\n\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    }\n  };\n\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    }\n  };\n\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n\n    this.setCheckAllState();\n  };\n\n  ;\n\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  ;\n\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n    }\n  };\n\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n    }\n\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n    this.initPerisistSelection();\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n\n    this.drawBorders();\n  };\n\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.initialEnd = function () {\n    this.parent.off(events.contentReady, this.initialEnd);\n    this.selectRow(this.parent.selectedRowIndex);\n  };\n\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n    var gobj = this.parent;\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n\n      var dataManager = data.getData({}, query);\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n\n    this.persistSelectedData = res;\n  };\n\n  Selection.prototype.setRowSelection = function (state) {\n    var adaptorName = 'adaptorName';\n\n    if (!this.parent.getDataModule().isRemote() && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n      if (state) {\n        for (var _i = 0, _a = this.getData(); _i < _a.length; _i++) {\n          var data = _a[_i];\n          this.selectedRowState[data[this.primaryKey]] = true;\n        }\n      } else {\n        this.selectedRowState = {};\n      } // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n\n    if (rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n\n        if (pKey === null) {\n          return;\n        }\n\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n\n        this.updatePersistCollection(rows[j], checkState);\n      }\n\n      if (indexes.length > 0) {\n        this.isSingleSel() ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n      }\n    }\n\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.e-editedrow');\n\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n\n          var rowObj = this.getRowObj(row);\n\n          if (!rowObj) {\n            return;\n          }\n\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.actionComplete = function (e) {\n    var _this = this;\n\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add' && this.isCheckedOnAdd) {\n        var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n        this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = [];\n\n      if (!isBlazor()) {\n        records = e.data;\n      } else {\n        records = this.getSelectedRecords();\n      }\n\n      records.slice().forEach(function (data) {\n        if (!isNullOrUndefined(data[_this.primaryKey])) {\n          _this.updatePersistDelete(data[_this.primaryKey]);\n        }\n      });\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (e.requestType === 'paging') {\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var adaptorName = 'adaptorName';\n      var rows = this.parent.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ? this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n      this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n\n    this.chkAllCollec = [];\n\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n\n    this.checkSelectAllAction(!state);\n    this.target = null;\n\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n\n    return status;\n  };\n\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.e-rowcell');\n    var checkObj = checkBox;\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n    }\n\n    if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n      ++rIndex;\n    }\n\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (!pKey) {\n        return;\n      }\n\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && this.parent.enableVirtualization && !this.parent.getDataModule().isRemote()) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n\n  ;\n\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkedLen = Object.keys(this.selectedRowState).length;\n\n      if (!this.parent.isPersistSelection) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.getCheckAllBox()) {\n        var spanEle = this.getCheckAllBox().nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n\n        if (checkedLen === this.totalRecordsCount && this.totalRecordsCount || this.parent.enableVirtualization && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && checkedLen === this.getData().length) {\n          addClass([spanEle], ['e-check']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n\n          this.parent.checkAllRows = 'Check';\n        } else if (checkedLen === 0 || this.getCurrentBatchRecordChanges().length === 0) {\n          addClass([spanEle], ['e-uncheck']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n\n          this.parent.checkAllRows = 'Uncheck';\n\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n        }\n\n        if (this.parent.enableVirtualization && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n  };\n\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n\n    if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv')) {\n      this.isInteracted = true;\n    }\n\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n    this.isMultiShiftRequest = e.shiftKey;\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n\n    this.drawBorders();\n    target = parentsUntil(target, 'e-rowcell');\n\n    if (target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly || chkSelect) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n\n      this.target = target;\n\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n          ++rIndex;\n        }\n\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        }\n\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.e-row'));\n          this.setCheckAllState();\n        }\n      }\n\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    }\n\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox')) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.hideBorders();\n    }\n\n    this.isDragged = false;\n  };\n\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n\n    var clear = this.parent.getFrozenColumns() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space');\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell') && !(e.byKey && e.keyArgs.action === 'space');\n\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n\n      return;\n    }\n\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    var prev = this.focus.getPrevIndexes();\n\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = prev.rowIndex ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n\n    if (this.parent.getFrozenColumns()) {\n      var cIdx = Number(e.element.getAttribute('aria-colindex'));\n      prev.cellIndex = prev.cellIndex ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n\n    if (headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) {\n      return;\n    }\n\n    this.preventFocus = true;\n\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'escape':\n        this.clearSelection();\n        break;\n\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n\n        break;\n    }\n\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n  /**\n   * Apply ctrl + A key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n\n    if (this.isRowType()) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n\n    var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n      }\n    } else {\n      this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n    }\n\n    this.addAttribute(this.target);\n  };\n\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n    this.selectCellsByRange(this.prevCIdxs, {\n      rowIndex: rowIndex,\n      cellIndex: cellIndex\n    });\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    if (row) {\n      var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   */\n\n\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n\n    if (!this.selectionSettings.persistSelection) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n\n    return selectedData;\n  };\n\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n\n      _this.drawBorders();\n    };\n\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  };\n\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n  };\n\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n\n  Selection.prototype.dataReady = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.disableUI = true;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["C:/CN2/workspace-trunk/kain-front-end/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isBlazor","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","parentsUntil","addRemoveActiveClasses","removeAddCboxClasses","events","RenderType","iterateExtend","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","autoFillRLselection","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","add","getContent","mouseDownHandler","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","hidePopUp","clearSelection","removeEventListener","unWireEvents","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","getFrozenColumns","getMovableRowByIndex","getCurrentBatchRecordChanges","added","deleted","currentRecords","getCurrentViewRecords","getBatchChanges","concat","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","selectedMovableRow","selectData","isRemoved","enableVirtualization","getRowObjectFromUID","getAttribute","data","prevSelectedData","getSelectedRecords","clearRowSelection","notify","selectVirtualRow","selectedIndex","isRowType","isRowSelected","hasAttribute","actualTarget","isInteracted","can","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","cancel","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","toggle","removed","persistSelection","clearSelectedRow","selectRowCallBack","clearRow","indexOf","updateRowSelection","selectRowIndex","rowSelected","updateRowProps","targetObj","mRow","mObj","previousMovRow","getMovableRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","rowIndexes","isSingleSel","frzCols","selectedData","prevRow","getRows","slice","_i","rowIndexes_1","rowIdx","checkboxColumn","getColumns","filter","col","_loop_1","this_1","isUnSelected","enableToggle","rowDeselect","rowDeselecting","value","removeAttribute","addRemoveClassesForRow","rowDeselected","rowIndexes_2","state_1","indexes","_a","max","push","reverse","clearRowCallBack","checkAllRows","selectedEle","parentElement","updatePersistCollection","updateCheckBoxes","chkState","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","len","pop","setAttribute","getPrevIndexes","cells","onClick","span","clearCellSelection","undefined","rows_1","getDataRows","data_1","row_1","mRow_1","rowIndex_1","foreignKeyData_1","target_1","currentViewData","currentRow","checkSelectAllClicked","getCheckAllStatus","updatePersistSelectedData","record","forEach","ele","movableRow","rowDeselectCallBack","cancl_1","rowDeselectObj","isJsComponent","rowInString","rowIndex_2","data_2","getSelectedMovableCell","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","selectedTable","cIdx","isCellSelected","prevCIdxs","previousRowCell","prevECIdxs","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","addCellsToSelection","hideAutoFill","getMovableRowsObject","cellIndexes_1","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","getMovableDataRows","querySelectorAll","m","colIndex","parseInt","cancl","cell","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","cLen","bdrBottom","hideBorders","rows","mRows","addMovableRows","mouseMoveHandler","e","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","left","y2","top","tmp","isDragged","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","isLastRow","updateStartEndCells","bdrLeft","showBorders","stOff","endOff","endCell","colWidth","rowHeight","parentOff","offsetParent","bdrRight","bdrTop","getContentTable","appendChild","className","id","styles","display","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","bdrAFRight","bdrAFTop","hideAFBorders","updateValue","createBeforeAutoFill","getColumnByIndex","updateCell","field","column","innerText","beforeAutoFill","isApply","startrowIdx","startCellIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","clientRect","isDrag","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","requestType","isDestroyed","on","uiUpdate","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","rowsRemoved","headerRefreshed","refreshHeader","addEventListener_checkbox","off","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","records","getCheckAllBox","getHeaderContent","module","enable","render","properties","checkBoxSelectionChanged","initPerisistSelection","isCheckBoxSelection","checkboxMode","selectedRowIndex","gobj","chkField","pageSettings","dataBind","ensureCheckboxFieldSelection","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","adaptorName","isRemote","dataSource","executeLocal","generateQuery","checkState","editChkBox","checked","action","onDataBound","checkSelectAllAction","cRenderer","getRenderer","editForm","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","triggerChkChangeEvent","classes","status","checkSelect","checkObj","rIndex","uid","map","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","getSelectedRowIndexes","updateSelectedRowIndex","dataLength","selectedVal","isInteraction","checkedLen","spanEle","allowPaging","setSelection","info","name","keyCode","clickHandler","popUpClickHandler","chkSelect","checkWrap","checkboxOnly","isEqualNode","isDevice","showPopup","frozenRows","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","Number","clear","isContent","isSelectable","headerAction","prev","thLen","getHeaderTable","childElementCount","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","applyUpDown","children","groupSettings","columns","cIndex","contentRenderer","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","getRowsObject","dataReady","onDataBoundFunction","dataBound","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isSelectedRowIndexUpdating"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, parentsUntil, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables       \n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    /**\n     * The function used to trigger onActionBegin\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (args.cellIndex || args.rowIndex) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.getFrozenColumns() && this.parent.getContent().querySelector('.e-movablecontent')) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        var added = 'addedRecords';\n        var deleted = 'deletedRecords';\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            if (selectedRow) {\n                selectData = gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                var prevSelectedData = this.parent.getSelectedRecords();\n                if (prevSelectedData.length > 0) {\n                    this.clearRowSelection();\n                }\n                this.parent.notify(events.selectVirtualRow, { selectedIndex: index });\n                return;\n            }\n        }\n        else {\n            selectData = this.getCurrentBatchRecordChanges()[index];\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (index === this.selectedRowIndexes[0]) : false);\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false\n            };\n            args = this.addMovableArgs(args, selectedMovableRow);\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection) {\n                _this.clearSelectedRow(index);\n                isRemoved = true;\n                _this.removed = isRemoved;\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection) {\n                _this.selectRowCallBack();\n            }\n            if (!_this.selectionSettings.persistSelection) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                if (gObj.getFrozenColumns()) {\n                    this.updateRowSelection(selectedMovableRow, index);\n                }\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index,\n                row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget\n            };\n            args = this.addMovableArgs(args, selectedMovableRow);\n            this.onActionComplete(args, events.rowSelected);\n        }\n        this.updateRowProps(index);\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow) {\n        if (this.parent.getFrozenColumns()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    /**\n     * Selects a collection of rows by index.\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        var selectedRow = gObj.getRowByIndex(rowIndex);\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var frzCols = gObj.getFrozenColumns();\n        var can = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[rowIndexes[0]];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            cancel: false,\n            rowIndexes: rowIndexes, row: selectedRow, rowIndex: rowIndex, target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            data: selectedData\n        };\n        args = this.addMovableArgs(args, selectedMovableRow);\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n                    var rowIdx = rowIndexes_1[_i];\n                    _this.updateRowSelection(gObj.getRowByIndex(rowIdx), rowIdx);\n                    if (frzCols) {\n                        _this.updateRowSelection(gObj.getMovableRowByIndex(rowIdx), rowIdx);\n                    }\n                    _this.updateRowProps(rowIndex);\n                }\n            }\n            else {\n                _this.updateRowSelection(gObj.getRowByIndex(rowIndex), rowIndex);\n                if (frzCols) {\n                    _this.updateRowSelection(gObj.getMovableRowByIndex(rowIndex), rowIndex);\n                }\n                _this.updateRowProps(rowIndex);\n            }\n            args = {\n                rowIndexes: rowIndexes, row: selectedRow, rowIndex: rowIndex, target: _this.actualTarget,\n                prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                data: isBlazor() ? selectedData : _this.getSelectedRecords(), isInteracted: _this.isInteracted\n            };\n            args = _this.addMovableArgs(args, selectedMovableRow);\n            _this.onActionComplete(args, events.rowSelected);\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     * @param  {number} startIndex - Specifies the row indexes.\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        var _loop_1 = function (rowIndex) {\n            var rowObj = this_1.getRowObj(rowIndex);\n            var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n            this_1.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n                this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this_1.isCancelDeSelect) {\n                    return { value: void 0 };\n                }\n                this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n                this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n                selectedRow.removeAttribute('aria-selected');\n                this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n                this_1.isInteracted = false;\n            }\n            else {\n                args = {\n                    cancel: false,\n                    data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                    prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                    isCtrlPressed: this_1.isMultiCtrlRequest, isShiftPressed: this_1.isMultiShiftRequest,\n                    foreignKeyData: rowObj.foreignKeyData\n                };\n                args = this_1.addMovableArgs(args, selectedMovableRow);\n                this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n                    if (!isNullOrUndefined(args) && args[can] === true) {\n                        return;\n                    }\n                    if (_this.isSingleSel()) {\n                        _this.clearRow();\n                    }\n                    _this.updateRowSelection(selectedRow, rowIndex);\n                    if (frzCols) {\n                        _this.updateRowSelection(selectedMovableRow, rowIndex);\n                    }\n                });\n            }\n            if (!isUnSelected) {\n                args = {\n                    data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                    prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                    foreignKeyData: rowObj.foreignKeyData\n                };\n                args = this_1.addMovableArgs(args, selectedMovableRow);\n                this_1.onActionComplete(args, events.rowSelected);\n            }\n            this_1.updateRowProps(rowIndex);\n            if (this_1.isSingleSel()) {\n                return \"break\";\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n            var rowIndex = rowIndexes_2[_i];\n            var state_1 = _loop_1(rowIndex);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.target) {\n            var selectedEle = this.target.parentElement;\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if (this.parent.isPersistSelection && !isNullOrUndefined(selectedRow)) {\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if (chkState) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.getFrozenColumns() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     * @return {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            this.isInteracted = false;\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.prevRowIndex = undefined;\n            this.enableSelectMultiTouch = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var rowIndex_1 = [];\n            var frzCols = gObj.getFrozenColumns();\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            var currentViewData = this.parent.getCurrentViewRecords();\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (frzCols) {\n                    mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n                }\n            }\n            if (this.selectionSettings.persistSelection) {\n                this.isInteracted = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }).forEach(function (ele) {\n                    if (!_this.disableUI || isBlazor()) {\n                        ele.removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(ele, false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    _this.updatePersistCollection(ele, false);\n                    _this.updateCheckBoxes(ele);\n                });\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI || isBlazor()) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updatePersistCollection(movableRow, false);\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1);\n                _this.isInteracted = false;\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            });\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && this.isInteracted) || !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var rowDeselectObj = {\n                rowIndex: rowIndex, data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' ?\n                    this.persistSelectedData : data, foreignKeyData: foreignKeyData,\n                cancel: false, target: this.actualTarget, isInteracted: this.isInteracted\n            };\n            if (!isBlazor() || this.parent.isJsComponent) {\n                var rowInString = 'row';\n                rowDeselectObj[rowInString] = row;\n            }\n            else {\n                var rowIndex_2 = 'rowIndex';\n                var data_2 = 'data';\n                rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n                rowDeselectObj[data_2] = rowDeselectObj[data_2][rowDeselectObj[data_2].length - 1];\n            }\n            this.parent.trigger(type, this.parent.getFrozenColumns() ? __assign({}, rowDeselectObj, { mRow: mRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var frzCols = gObj.getFrozenColumns();\n        if (frzCols) {\n            if (cellIndex.cellIndex >= frzCols) {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        var selectedTable;\n        var cIdx;\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            if (!isBlazor() || this.parent.isJsComponent) {\n                var currentCell = 'currentCell';\n                args[currentCell] = selectedCell;\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = {\n                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ?\n                        _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                if (!isBlazor()) {\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    args[previousRowCellIndex] = _this.prevECIdxs;\n                }\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs = {\n                data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                selectedRowCellIndex: _this.selectedRowCellIndexes,\n                previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n            };\n            if (!isBlazor()) {\n                var previousRowCellIndex = 'previousRowCellIndex';\n                cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            }\n            _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     * @param  {IIndex} startIndex - Defines the collection of row and column index.\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedTable;\n        var cIdx;\n        var selectedCell;\n        var frzCols = gObj.getFrozenColumns();\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var rowObj;\n        if (frzCols && cellIndexes[0].cellIndex >= frzCols) {\n            rowObj = gObj.getMovableRowsObject()[cellIndexes[0].rowIndex];\n        }\n        else {\n            rowObj = this.getRowObj(cellIndexes[0].rowIndex);\n        }\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            foreignKeyData.push(rowObj.cells[frzCols && cellIndexes[0].cellIndex >= frzCols\n                ? cellIndex.cellIndex - frzCols : cellIndex.cellIndex].foreignKeyData);\n            var args = {\n                cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                isShiftPressed: this.isMultiShiftRequest,\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                previousRowCell: this.prevECIdxs ?\n                    gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n            };\n            if (!isBlazor()) {\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = {\n                    data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                    previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                        undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                };\n                if (!isBlazor()) {\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n                }\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var cells;\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (index >= frzCols) {\n                cells = this.parent.getMovableDataRows()[rowIndex] &&\n                    this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n            }\n        }\n        if (!cells) {\n            cells = this.parent.getDataRows()[rowIndex] &&\n                this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        }\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (index >= frzCols) {\n                            m += frzCols;\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var selectedTable = void 0;\n            var frzCols = gObj.getFrozenColumns();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        if (rowCell[i].cellIndexes[j] < frzCols) {\n                            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                        }\n                        else {\n                            cells.push(gObj.getMovableCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                        }\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrBottom) {\n                this.hideBorders();\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.getFrozenColumns()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n            }\n            else {\n                var td = parentsUntil(e.target, 'e-rowcell');\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            if (!this.bdrBottom) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.hideBorders();\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrLeft || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.showBorders();\n        var stOff = this.startCell.getBoundingClientRect();\n        var endOff = this.endCell.getBoundingClientRect();\n        var colWidth = this.isLastCell(this.endCell) ? 2 : 0;\n        var rowHeight = this.isLastRow(this.endCell) ? 2 : 0;\n        var parentOff = this.startCell.offsetParent.getBoundingClientRect();\n        this.bdrLeft.style.left = stOff.left - parentOff.left + 'px';\n        this.bdrLeft.style.top = stOff.top - parentOff.top + 'px';\n        this.bdrLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + 'px' : endOff.height + 'px';\n        this.bdrRight.style.left = endOff.left - parentOff.left + endOff.width - colWidth + 'px';\n        this.bdrRight.style.top = this.bdrLeft.style.top;\n        this.bdrRight.style.height = parseInt(this.bdrLeft.style.height, 10) - rowHeight + 'px';\n        this.bdrTop.style.left = this.bdrLeft.style.left;\n        this.bdrTop.style.top = this.bdrRight.style.top;\n        this.bdrTop.style.width = parseInt(this.bdrRight.style.left, 10) - parseInt(this.bdrLeft.style.left, 10) + 1 + 'px';\n        this.bdrBottom.style.left = this.bdrLeft.style.left;\n        this.bdrBottom.style.top = parseInt(this.bdrLeft.style.top, 10) + parseInt(this.bdrLeft.style.height, 10) - rowHeight + 'px';\n        this.bdrBottom.style.width = this.bdrTop.style.width;\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrLeft) {\n            this.bdrLeft = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrleft', styles: 'width: 2px;' }));\n            this.bdrRight = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrright', styles: 'width: 2px;' }));\n            this.bdrBottom = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrbottom', styles: 'height: 2px;' }));\n            this.bdrTop = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrtop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showBorders = function () {\n        if (this.bdrLeft) {\n            this.bdrLeft.style.display = '';\n            this.bdrRight.style.display = '';\n            this.bdrBottom.style.display = '';\n            this.bdrTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideBorders = function () {\n        if (this.bdrLeft) {\n            this.bdrLeft.style.display = 'none';\n            this.bdrRight.style.display = 'none';\n            this.bdrBottom.style.display = 'none';\n            this.bdrTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        this.showBorders();\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var colWidth = this.isLastCell(this.endAFCell) ? 2 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        this.bdrAFLeft.style.left = stOff.left - parentOff.left + 'px';\n        this.bdrAFLeft.style.top = stOff.top - parentOff.top + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + 'px' : endOff.height + 'px';\n        this.bdrAFRight.style.left = endOff.left - parentOff.left + endOff.width - colWidth + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) - rowHeight + 'px';\n        this.bdrAFTop.style.left = this.bdrAFLeft.style.left;\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) + 1 + 'px';\n        this.bdrAFBottom.style.left = this.bdrAFLeft.style.left;\n        this.bdrAFBottom.style.top = parseInt(this.bdrAFLeft.style.top, 10) + parseInt(this.bdrAFLeft.style.height, 10) - rowHeight + 'px';\n        this.bdrAFBottom.style.width = this.bdrAFTop.style.width;\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.getContentTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        var col;\n        switch (true) { //direction         \n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, 'e-rowcell'):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = [].slice.call(this.parent.getDataRows()[i].querySelectorAll('.e-cellselectionbackground'));\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = [].slice.call(this.parent.getDataRows()[i].querySelectorAll('.e-cellselectionbackground'));\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = [].slice.call(this.parent.getDataRows()[r].querySelectorAll('.e-cellselectionbackground'));\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = [].slice.call(this.parent.getDataRows()[r].querySelectorAll('.e-cellselectionbackground'));\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            this.startAFCell = this.startCell;\n            var lastCell = parentsUntil(e.target, 'e-rowcell');\n            this.endAFCell = lastCell ? lastCell : this.endAFCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var cells = [].slice.call(this.parent.getDataRows()[this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex].querySelectorAll('.e-cellselectionbackground'));\n            if (!this.parent.element.querySelector('#' + this.parent.element.id + '_autofill')) {\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                this.parent.getContentTable().parentElement.appendChild(this.autofill);\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 5 : 0;\n                this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 3 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.initialEnd, this.initializeSelection, this);\n        this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.cellFocused, this.onCellFocused, this);\n        this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n        this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n        this.parent.on(events.contentReady, this.initialEnd, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n        this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.enableAfterRender);\n        this.parent.off(events.initialEnd, this.initializeSelection);\n        this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n        this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.cellFocused, this.onCellFocused);\n        this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n        this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.off(events.rowsRemoved, this.rowsRemoved);\n        this.parent.off(events.headerRefreshed, this.refreshHeader);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    ;\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    ;\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n        }\n    };\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        this.initPerisistSelection();\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function () {\n        this.parent.off(events.contentReady, this.initialEnd);\n        this.selectRow(this.parent.selectedRowIndex);\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n        var gobj = this.parent;\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        var adaptorName = 'adaptorName';\n        if (!this.parent.getDataModule().isRemote() && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n            if (state) {\n                for (var _i = 0, _a = this.getData(); _i < _a.length; _i++) {\n                    var data = _a[_i];\n                    this.selectedRowState[data[this.primaryKey]] = true;\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        if (rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            if (indexes.length > 0) {\n                this.isSingleSel() ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n            }\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.e-editedrow');\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        var _this = this;\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add' && this.isCheckedOnAdd) {\n                var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = [];\n            if (!isBlazor()) {\n                records = e.data;\n            }\n            else {\n                records = this.getSelectedRecords();\n            }\n            records.slice().forEach(function (data) {\n                if (!isNullOrUndefined(data[_this.primaryKey])) {\n                    _this.updatePersistDelete(data[_this.primaryKey]);\n                }\n            });\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var adaptorName = 'adaptorName';\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = (!this.parent.getDataModule().isRemote() &&\n                    !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) ?\n                    this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        this.checkSelectAllAction(!state);\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.e-rowcell');\n        var checkObj = checkBox;\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        this.moveIntoUncheckCollection(closest(target, '.e-row'));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && this.parent.enableVirtualization && !this.parent.getDataModule().isRemote()) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    ;\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.getCheckAllBox()) {\n                var spanEle = this.getCheckAllBox().nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                if (checkedLen === this.totalRecordsCount && this.totalRecordsCount || (this.parent.enableVirtualization\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && checkedLen === this.getData().length)) {\n                    addClass([spanEle], ['e-check']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (checkedLen === 0 || this.getCurrentBatchRecordChanges().length === 0) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                }\n                if (this.parent.enableVirtualization && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv')) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        this.isMultiShiftRequest = e.shiftKey;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        target = parentsUntil(target, 'e-rowcell');\n        if ((target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly) || chkSelect) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n                }\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox'))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.hideBorders();\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.getFrozenColumns() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space');\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell'))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = prev.rowIndex ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.getFrozenColumns()) {\n            var cIdx = Number(e.element.getAttribute('aria-colindex'));\n            prev.cellIndex = prev.cellIndex ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if (headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' &&\n            rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) {\n            return;\n        }\n        this.preventFocus = true;\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    /**\n     * Apply ctrl + A key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType()) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n            }\n        }\n        else {\n            this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.disableUI = true;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}